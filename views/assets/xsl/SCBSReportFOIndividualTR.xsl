<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 
	rel. 2 sp2 - see http://www.altova.com/stylevision for more information. -->
<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions"
	xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<xsl:output version="1.0" method="xml" encoding="UTF-8"
		indent="no" />
	<xsl:param name="SV_OutputFormat" select="'PDF'" />
	<xsl:variable name="XML" select="/" />
	<xsl:variable name="smallcase" select="'abcdefghijklmnopqrstuvwxyz'" />
	<xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'" />
	<xsl:variable name="plaintiffBankruptCount" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'PLAINTIFF'])"/>
	<xsl:variable name="subjectAsPlaintiffCount" select="$XML/Response/Report/Profile/Litigation/SubjectAsPlaintiffCount"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="other-page" page-height="11.69in" page-width="8.27in" margin-left="20px" margin-right="20px">
				<fo:region-body margin-top="100px" margin-bottom="80px" region-name="body"/>
				<fo:region-before extent="100px" region-name="other-page-header"/>
				<fo:region-after extent="80px" region-name="other-page-footer"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="last-page" page-height="11.69in" page-width="8.27in" margin-left="20px" margin-right="20px">
				<fo:region-body margin-top="50px" margin-bottom="80px" region-name="body"/>
				<fo:region-before extent="50px" region-name="last-page-header"/>
				<fo:region-after extent="80px" region-name="last-page-footer"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="pages">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference page-position="first" master-reference="other-page"/>
				    <fo:conditional-page-master-reference page-position="rest" master-reference="other-page"/>
				    <!-- Added by Ruiwen 06/03/2024 MYSCORE/MyBizScORE use custom last header, other report use default header -->
					<xsl:choose>
						<xsl:when test="Response/ReportAccess/CBMNOTIFLETTER =&apos;Y&apos;">
							<fo:conditional-page-master-reference page-position="last" master-reference="last-page"/>
						</xsl:when>
						<xsl:otherwise>
							<fo:conditional-page-master-reference page-position="last" master-reference="other-page"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:repeatable-page-master-alternatives>			
			</fo:page-sequence-master>
			
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set" />
			<fo:page-sequence master-reference="pages" initial-page-number="1" format="1">
				<xsl:call-template name="otherpageheader" />
				<xsl:call-template name="otherpagefooter" />
				<xsl:call-template name="lastpageheader"/>
				<xsl:call-template name="lastpagefooter"/>
				<fo:flow flow-name="body">
					<fo:block>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<!-- Individual Report (Start) -->
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0px" padding="2pt"
										display-align="center">
										<fo:block>
											<xsl:choose>
												<xsl:when test="//Response/ReportAccess/LTINDSUBJECT = &apos;Y&apos;">
													<fo:block>
														<fo:block color="#00008b" font-size="9pt" font-weight="bold"
															height="10px" margin="0px" padding="0px" text-align="left">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>SUBJECT INFORMATION</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													
														<fo:table color="black" font-size="11px" margin="0px" padding="0px"
															table-layout="fixed" width="100%" border="solid 1.5pt black"
															border-spacing="2pt">
															<fo:table-column column-width="40%" />
															<fo:table-column column-width="60%" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:text>Name</xsl:text>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt" font-style="normal"
																		font-variant="normal" font-weight="normal" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="Name">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:text>IC number</xsl:text>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt" font-style="normal"
																		font-variant="normal" font-weight="normal" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="IdNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:text>Old IC number (If any)</xsl:text>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt" font-style="normal"
																		font-variant="normal" font-weight="normal" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="IdNo2">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="not(normalize-space($value-of-template))">
																										<fo:inline>-</fo:inline>
																									</xsl:when>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" height="35" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:text>Address</xsl:text>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt" font-style="normal"
																		font-variant="normal" font-weight="normal" border="solid 1pt gray"
																		height="35" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="Litigation">
																								<xsl:for-each select="Address">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</fo:block>
												</xsl:when>
												<xsl:otherwise>
													<xsl:if test="Response/ReportAccess/INDINFO =&apos;Y&apos;">
														<xsl:if test="Response/ReportAccess/SBJSME  = &apos;Y&apos;">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table border="0px" color="black" font-size="11px"
																margin="0px" padding="0px" table-layout="fixed" width="100%"
																border-spacing="2pt">
																<fo:table-column column-width="550" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell border="0px" border-style="solid"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block color="#00008b" font-size="9pt"
																					font-weight="bold" height="10px" margin="0px"
																					padding="0px" text-align="left">
																					<fo:block>
																						<fo:inline font-weight="bold">
																							<xsl:text>SUBJECT INFORMATION</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<xsl:if test="Response/ReportType  = &apos;ICR-SELF&apos;">
																	<fo:table-row>
																		<fo:table-cell border="0px" border-style="solid"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" >
																					<fo:block>
																						<fo:inline>
																							<xsl:text>The following is your personal information provided to us:</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>		
																	</xsl:if>													
																</fo:table-body>
															</fo:table>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px" margin="0px"
																		padding="0px" table-layout="fixed" width="100%"
																		border="solid 1pt gray" border-spacing="2pt">
																		<fo:table-column column-width="198"/>
																		<fo:table-column column-width="354"/>
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="#9edbaf"
																					font-size="8pt" number-columns-spanned="2"
																					border="solid 1pt gray" padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline color="#2d2d2d" font-size="8pt"
																							font-style="normal" font-variant="normal"
																							font-weight="bold">
																							<xsl:text>Individual Profile</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline color="#3c3c3c" font-size="8pt">
																							<xsl:text>Name</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="Profile">
																										<xsl:for-each select="Name">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline font-size="8pt">
																							<xsl:text>New IC Number</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="Profile">
																										<xsl:for-each select="IdNo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline font-size="8pt">
																							<xsl:text>Old IC Number (if any)</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="Profile">
																										<xsl:for-each select="IdNo2">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="not(normalize-space($value-of-template))">
																													<fo:inline>-</fo:inline>
																												</xsl:when>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline font-size="8pt">
																							<xsl:text>Date of Birth</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="Profile">
																										<xsl:for-each select="Dob">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline font-size="8pt">
																							<xsl:text>Nationality</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="Profile">
																										<xsl:for-each select="Nationality">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<xsl:if test="Response/ReportAccess/CCRISSERVICETYPE =&apos;CRA&apos;">
																				<fo:table-row>
																					<fo:table-cell background-color="#e4fae6"
																						font-size="8pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline font-size="8pt">
																								<xsl:text>Residency Status</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell font-size="8pt"
																						font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<xsl:for-each select="$XML">
																								<xsl:for-each select="Response">
																									<xsl:for-each select="Report">
																										<xsl:for-each select="Profile">
																											<xsl:for-each select="ResidencyDesc">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="normalize-space($value-of-template) = ''">
																														<fo:inline>-</fo:inline>
																													</xsl:when>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:if>
																		</fo:table-body>
																	</fo:table>
																</fo:block>
															</fo:block>
														</xsl:if>
													</xsl:if>
												</xsl:otherwise>
											</xsl:choose>	
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<!-- BNM Profile - Added by Syahrul 03/11/2017 -->
						<xsl:if test="//Response/ReportAccess/CCRISPROFILE = &apos;Y&apos;">
						<fo:block>&#160;</fo:block>
						<fo:block>&#160;</fo:block>
						<xsl:for-each select="$XML">
							<xsl:for-each select="Response">
								<xsl:for-each select="Report">
									<xsl:for-each select="Profile">
										<xsl:for-each select="CCRISProfiles">
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%"
												border="solid 1pt gray" border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														number-columns-spanned="7" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="8pt" font-weight="bold">
																<xsl:text>BNM Profile</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="4pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small" font-style="inherit">
																<xsl:text>Name</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small" font-style="inherit">
																<xsl:text>ID No 1</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small" font-style="inherit">
																<xsl:text>ID No 2</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small">
																<xsl:text>Date Of Birth</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small">
																<xsl:text>Nationality</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small">
																<xsl:text>Type Of Constitution</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small">
																<xsl:text>Entity Code</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												</fo:table-body>
											</fo:table>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:for-each select="CCRISProfile">
											<fo:table color="black" font-size="x-small" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Name start -->
															<fo:block>
																<xsl:value-of select="Name"/>
															</fo:block>
														</fo:table-cell> <!-- Name ends -->
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- IDNo1 start -->
															<fo:block>
																<xsl:value-of select="IDNo1"/>
															</fo:block>
														</fo:table-cell> <!-- IDNo1 end -->
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- IDNo2 start -->
															<fo:block>
																<xsl:value-of select="IDNo2"/>
															</fo:block>
														</fo:table-cell> <!-- IDNo2 end -->
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- DateBR start -->
															<fo:block>
																<xsl:value-of select="DateBR"/>
															</fo:block>
														</fo:table-cell> <!-- DateBR end -->
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Nationality start -->
															<fo:block>
																<xsl:value-of select="Nationality"/>
															</fo:block> <!-- Nationality end -->
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Group start -->
															<fo:block>
																<xsl:value-of select="Group"/>
															</fo:block> <!-- Group end -->
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- EntKey start -->
															<fo:block>
																<xsl:value-of select="EntKey"/>
															</fo:block> <!-- EntKey end -->
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>		
						</xsl:if>
						<!-- CCRIS BNM Profile end -->
						
						<!-- Added by Upen - 01/03/2018 TN Fraud Score Integration -->
						<xsl:if test="Response/ReportAccess/FRAUDSCORE  = &apos;Y&apos;">
							<xsl:if test="//Response/Report/Profile/Trunarrative/SubmissionId !=''">
							<fo:table border="0px" color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="615"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" border-style="solid" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>TRUNARRATIVE</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<!-- Added by Shahkir - 17/04/2018 TRN Warning Message -->
							<xsl:if test="//Response/Report/Profile/Trunarrative/TNWarning !=''">
								<fo:table border="solid 1pt gray" color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="555"/>
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="1px" padding="2pt" display-align="center" text-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold" color="red" >
														<xsl:value-of select="$XML/Response/Report/Profile/Trunarrative/TNWarning"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>	
							</xsl:if>	
							<!-- End Here - 17/04/2018 TRN Warning Message -->
							<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="277"/>
								<fo:table-column column-width="278"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell background-color="#9edbaf" border="solid 0pt gray" padding="3pt" padding-left="5pt" display-align="center">
											<fo:block>
												<fo:inline font-size="9pt" font-style="inherit">
													<xsl:text>Outcome: </xsl:text>
												</fo:inline>
												<fo:inline font-size="9pt" font-weight="bold">
													<xsl:value-of select="$XML/Response/Report/Profile/Trunarrative/RiskLevel"/>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell background-color="#9edbaf" border="solid 0pt gray" padding="3pt" padding-right="20pt" display-align="center" text-align="right">
											<fo:block color="#505050">
												<fo:inline font-size="9pt" font-style="inherit">
													<xsl:text>Trunarrative ID: </xsl:text>
												</fo:inline>
												<fo:inline font-size="9pt" font-style="inherit" margin-left="20px">
													<xsl:value-of select="$XML/Response/Report/Profile/Trunarrative/SubmissionId"/>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell background-color="#9edbaf" border="solid 0pt gray" padding="3pt" padding-left="5pt" display-align="center" number-columns-spanned="2">
											<fo:block>
												<fo:inline font-size="9pt" font-style="inherit">
													<xsl:text>Score: </xsl:text>
												</fo:inline>
												<fo:inline font-size="9pt" font-weight="bold">
													<xsl:value-of select="$XML/Response/Report/Profile/Trunarrative/TotalRuleScore"/>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
<!--								<fo:table-row>
										<fo:table-cell background-color="#9edbaf" number-columns-spanned="2" border="solid 1pt gray" padding="3pt" padding-left="5pt" display-align="center">
											<fo:block>
												<fo:inline font-size="11pt" font-style="inherit">
													<xsl:text>Scorecard</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>-->
								</fo:table-body>
							</fo:table>
							<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50"/>
								<fo:table-column column-width="425"/>
								<fo:table-column column-width="80"/>
								<fo:table-body start-indent="0pt">
<!--								<xsl:for-each select="$XML/Response/Report/Profile/Trunarrative/ScorecardRuleOutcomes/ScorecardRuleOutcome">	
										<fo:table-row>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" padding-left="5pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-style="inherit">
														<xsl:value-of select="RuleNumber"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:value-of select="RuleName"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:if test="Outcome =&apos;true&apos;">
															<fo:external-graphic content-width="20px">
																<xsl:attribute name="src">
																	<xsl:call-template name="double-backslash">
																		<xsl:with-param name="text">
																			<xsl:value-of select="string(&apos;D:\SCBSReport\StyleSheet\tick.jpg&apos;)" />
																		</xsl:with-param>
																		<xsl:with-param name="text-length">
																			<xsl:value-of select="string-length(string(&apos;D:\SCBSReport\StyleSheet\tick.jpg&apos;))" />
																		</xsl:with-param>
																	</xsl:call-template>
																</xsl:attribute>
															</fo:external-graphic>
														</xsl:if>	
														<xsl:if test="Outcome =&apos;false&apos;">
															<fo:external-graphic content-width="20px">
																<xsl:attribute name="src">
																	<xsl:call-template name="double-backslash">
																		<xsl:with-param name="text">
																			<xsl:value-of select="string(&apos;D:\SCBSReport\StyleSheet\untick.jpg&apos;)" />
																		</xsl:with-param>
																		<xsl:with-param name="text-length">
																			<xsl:value-of select="string-length(string(&apos;D:\SCBSReport\StyleSheet\untick.jpg&apos;))" />
																		</xsl:with-param>
																	</xsl:call-template>
																</xsl:attribute>
															</fo:external-graphic>
														</xsl:if>
													</fo:inline>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:if test="Outcome =&apos;true&apos;">
															<xsl:value-of select="Outcome"/>
														</xsl:if>	
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding-left="3pt" padding-top="-4pt" padding-bottom="15pt" number-columns-spanned="2" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-style="inherit">
														<xsl:text></xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding-left="3pt" padding-top="-4pt" padding-bottom="15pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-style="inherit">
														<xsl:text>Score: </xsl:text>
													</fo:inline>
													<fo:inline font-size="8pt" font-style="inherit">
														<xsl:value-of select="Score"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>-->
									<fo:table-row>
										<fo:table-cell background-color="#9edbaf" number-columns-spanned="3" border="solid 1pt gray" padding="3pt" padding-left="5pt" display-align="center">
											<fo:block>
												<fo:inline font-size="11pt" font-style="inherit">
													<xsl:text>Rules</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each select="$XML/Response/Report/Profile/Trunarrative/RuleOutcomes/RuleOutcome">	
										<fo:table-row>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" padding-left="5pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-style="inherit">
														<xsl:value-of select="RuleNumber"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:value-of select="RuleName"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:if test="Outcome =&apos;true&apos;">
															<fo:external-graphic content-width="20px">
																<xsl:attribute name="src">
																	<xsl:call-template name="double-backslash">
																		<xsl:with-param name="text">
																			<xsl:value-of select="string(&apos;D:\SCBSReport\StyleSheet\tick.jpg&apos;)" />
																		</xsl:with-param>
																		<xsl:with-param name="text-length">
																			<xsl:value-of select="string-length(string(&apos;D:\SCBSReport\StyleSheet\tick.jpg&apos;))" />
																		</xsl:with-param>
																	</xsl:call-template>
																</xsl:attribute>
															</fo:external-graphic>
														</xsl:if>	
														<xsl:if test="Outcome =&apos;false&apos;">
															<fo:external-graphic content-width="20px">
																<xsl:attribute name="src">
																	<xsl:call-template name="double-backslash">
																		<xsl:with-param name="text">
																			<xsl:value-of select="string(&apos;D:\SCBSReport\StyleSheet\untick.jpg&apos;)" />
																		</xsl:with-param>
																		<xsl:with-param name="text-length">
																			<xsl:value-of select="string-length(string(&apos;D:\SCBSReport\StyleSheet\untick.jpg&apos;))" />
																		</xsl:with-param>
																	</xsl:call-template>
																</xsl:attribute>
															</fo:external-graphic>
														</xsl:if>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<xsl:if test="NumberOfMatchRecords and NumberOfMatchRecords &gt; 0">
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" padding-top="-4pt" padding-left="5pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text>V</xsl:text>
															<xsl:value-of select="RuleVersionNumber"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="RuleRevisionNumber"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" margin-right="40px" padding-top="-4pt" display-align="top">
													<fo:block color="#606060">
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:value-of select="RuleDescription"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding-left="3pt" padding-top="-4pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text>Score: </xsl:text>
														</fo:inline>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:value-of select="Score"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" padding-top="-4pt" padding-bottom="15pt" padding-left="5pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text></xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" margin-right="40px" padding-top="-4pt" padding-bottom="15pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text>Number of Matches: </xsl:text>
														</fo:inline>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:value-of select="NumberOfMatchRecords"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding-left="3pt" padding-top="-4pt" padding-bottom="15pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text></xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:if>
										<xsl:if test="NumberOfMatchRecords and NumberOfMatchRecords &lt; 1">
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" padding-top="-4pt" padding-bottom="15pt" padding-left="5pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text>V</xsl:text>
															<xsl:value-of select="RuleVersionNumber"/>
															<xsl:text>.</xsl:text>
															<xsl:value-of select="RuleRevisionNumber"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" margin-right="40px" padding-top="-4pt" padding-bottom="15pt" display-align="top">
													<fo:block color="#606060">
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:value-of select="RuleDescription"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding-left="3pt" padding-top="-4pt" padding-bottom="15pt" display-align="top">
													<fo:block>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:text>Score: </xsl:text>
														</fo:inline>
														<fo:inline font-size="8pt" font-style="inherit">
															<xsl:value-of select="Score"/>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:if>
									</xsl:for-each>
									<fo:table-row>
										<fo:table-cell background-color="#9edbaf" number-columns-spanned="3" border="solid 1pt gray" padding="3pt" padding-left="5pt" display-align="center">
											<fo:block>
												<fo:inline font-size="11pt" font-style="inherit">
													<xsl:text>Apps</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="475"/>
								<fo:table-column column-width="80"/>
								<fo:table-body start-indent="0pt">
									<xsl:for-each select="$XML/Response/Report/Profile/Trunarrative/AppOutcomes/AppOutcome">
										<fo:table-row>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" padding-left="5pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:value-of select="AppName"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6" border="solid 0pt gray" padding="3pt" display-align="center">
												<fo:block>
													<fo:inline font-size="8pt" font-weight="bold">
														<xsl:value-of select="Outcome"/>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							</xsl:if>
						</xsl:if>
						<!-- End Here - TN Fraud Score Integration -->
						<!-- Individual Report (End) -->
						<!-- Litigation Report (Start) -->
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0px" padding="2pt"
										display-align="center">
										<fo:block>
											<xsl:if test="Response/ReportAccess/LTINDINFO =&apos;Y&apos;">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table border="0px" color="black" font-size="11px"
													margin="0px" padding="0px" table-layout="fixed" width="100%"
													border-spacing="2pt">
													<fo:table-column column-width="550" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell border="0px" border-style="solid"
																padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block color="#00008b" font-size="9pt"
																		font-weight="bold" height="10px" margin="0px" padding="0px"
																		text-align="left">
																		<fo:block>
																			<fo:inline font-weight="bold">
																				<xsl:text>SUBJECT INFORMATION</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:block>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table color="black" font-size="11px" margin="0px"
															padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
															border-spacing="2pt">
															<fo:table-column column-width="198"/>
															<fo:table-column column-width="354"/>
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf"
																		font-size="8pt" number-columns-spanned="2"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline color="#2d2d2d" font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold">
																				<xsl:text>Individual Profile</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline color="#3c3c3c" font-size="8pt">
																				<xsl:text>Name</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="Name">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline font-size="8pt">
																				<xsl:text>I/C Number</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="IdNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline font-size="8pt">
																				<xsl:text>Type Of Constitution</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="Profile">
																							<xsl:for-each select="ConstitutionType">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</fo:block>
												</fo:block>
											</xsl:if>
											<xsl:if test="Response/ReportAccess/LTSMEINFO =&apos;Y&apos;">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table border="0px" color="black" font-size="11px"
													margin="0px" padding="0px" table-layout="fixed" width="100%"
													border-spacing="2pt">
													<fo:table-column column-width="550" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell border="0px" border-style="solid"
																padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block color="#00008b" font-size="9pt"
																		font-weight="bold" height="10px" margin="0px" padding="0px"
																		text-align="left">
																		<fo:block>
																			<fo:inline font-weight="bold">
																				<xsl:text>SUBJECT INFORMATION</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:block>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table color="black" font-size="11px" margin="0px"
															padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
															border-spacing="2pt">
															<fo:table-column column-width="140" />
															<fo:table-column column-width="230" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf"
																		font-size="8pt" number-columns-spanned="2"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline color="#2d2d2d" font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold">
																				<xsl:text>Business/Company Profile</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline color="#3c3c3c" font-size="8pt">
																				<xsl:text>Name</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="RegName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline font-size="8pt">
																				<xsl:text>Registration No</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="RegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline font-size="8pt">
																				<xsl:text>Type Of Constitution</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="8pt"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="ConstitutionType">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</fo:block>
												</fo:block>
											</xsl:if>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<!-- Litigation Report (End) -->
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0px" padding="2pt"
										display-align="center">
										<fo:block>
											<xsl:if
												test="Response/ReportType  != &apos;BIR&apos;  and  Response/ReportType  != &apos;BIR-P&apos;">
												<xsl:if test="Response/ReportAccess/BUSINFO =&apos;Y&apos;">
													<xsl:if test="Response/ReportAccess/SBJSME  = &apos;Y&apos;">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="550" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" border-style="solid"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block color="#00008b" font-size="9pt"
																				font-weight="bold" height="10px" margin="0px"
																				padding="0px" text-align="left">
																				<fo:block>
																					<fo:inline font-weight="bold">
																						<xsl:text>SUBJECT SME</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:block>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="140" />
																	<fo:table-column column-width="230" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf"
																				font-size="8pt" number-columns-spanned="2"
																				border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline color="#2d2d2d" font-size="8pt"
																						font-style="normal" font-variant="normal"
																						font-weight="bold">
																						<xsl:text>SME Profile</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline color="#3c3c3c" font-size="8pt">
																						<xsl:text>Name</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Subject">
																								<xsl:for-each select="RegName">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Registration No</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Subject">
																								<xsl:for-each select="RegNo">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Registration Date</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Subject">
																								<xsl:for-each select="DateBR">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Type Of Constitution</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="ConstitutionTypeDesc">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Country Of Registration</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="BusinessCouCodeDesc">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
														<fo:block>
															<fo:leader leader-pattern="space" />
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block />
														</fo:block>
													</xsl:if>
												</xsl:if>
											</xsl:if>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0px" padding="2pt"
										display-align="center">
										<fo:block>
											<xsl:if test="Response/ReportAccess/COMINFO =&apos;Y&apos;">
												<xsl:if
													test="Response/ReportType  != &apos;BIR&apos; and  Response/ReportType  != &apos;BIR-P&apos;">
													<xsl:if test="Response/ReportAccess/SBJSME  = &apos;Y&apos;">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block color="#00008b" font-size="9pt"
															font-weight="bold" height="10px" margin="0px" padding="0px"
															text-align="left">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>SUBJECT SME</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table color="black" font-size="11px" margin="0px"
															padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
															border-spacing="2pt">
															<fo:table-column column-width="140" />
															<fo:table-column column-width="230" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf"
																		number-columns-spanned="2" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline color="#2d2d2d" font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold">
																				<xsl:text>SME Profile</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline color="#3c3c3c">
																				<xsl:text>Name</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Subject">
																						<xsl:for-each select="RegName">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Registration No</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Subject">
																						<xsl:for-each select="RegNo">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Registration Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Subject">
																						<xsl:for-each select="DateBR">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Type Of Constitution</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="ConstitutionTypeDesc">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Country Of Registration</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="BusinessCouCodeDesc">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
														<fo:block>
															<fo:leader leader-pattern="space" />
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block />
														</fo:block>
													</xsl:if>
												</xsl:if>
											</xsl:if>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0px" padding="2pt"
										display-align="center">
										<fo:block>
											<xsl:if
												test="Response/ReportType  = &apos;BIR&apos;  or  Response/ReportType  = &apos;BIR-P&apos;">
												<xsl:if test="Response/ReportAccess/BUSINFO =&apos;Y&apos;">
													<xsl:if test="Response/ReportAccess/SBJSME  = &apos;Y&apos;">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="550" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" border-style="solid"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block color="#00008b" font-size="9pt"
																				font-weight="bold" height="10px" margin="0px"
																				padding="0px" text-align="left">
																				<fo:block>
																					<fo:inline font-weight="bold">
																						<xsl:text>SUBJECT SME</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:block>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="140" />
																	<fo:table-column column-width="230" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf"
																				font-size="8pt" number-columns-spanned="2"
																				border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline color="#2d2d2d" font-size="8pt"
																						font-style="normal" font-variant="normal"
																						font-weight="bold">
																						<xsl:text>SME Profile</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline color="#3c3c3c" font-size="8pt">
																						<xsl:text>Name</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="RegName">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Registration No</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="x-small"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="RegNo">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Registration Date</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="x-small"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="DateBR">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Type Of Constitution</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="x-small"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="ConstitutionType">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline font-size="8pt">
																						<xsl:text>Country Of Registration</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="x-small"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="RegCouCode">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
														<fo:block>
															<fo:leader leader-pattern="space" />
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block />
														</fo:block>
													</xsl:if>
												</xsl:if>
											</xsl:if>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0px" padding="2pt"
										display-align="center">
										<fo:block>
											<xsl:if test="Response/ReportAccess/COMINFO =&apos;Y&apos;">
												<xsl:if
													test="Response/ReportType  = &apos;BIR&apos;  or  Response/ReportType  = &apos;BIR-P&apos;">
													<xsl:if test="Response/ReportAccess/SBJSME  = &apos;Y&apos;">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block color="#00008b" font-size="9pt"
															font-weight="bold" height="10px" margin="0px" padding="0px"
															text-align="left">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>SUBJECT SME</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table color="black" font-size="11px" margin="0px"
															padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
															border-spacing="2pt">
															<fo:table-column column-width="140" />
															<fo:table-column column-width="230" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf"
																		number-columns-spanned="2" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline color="#2d2d2d" font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold">
																				<xsl:text>SME Profile</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline color="#3c3c3c">
																				<xsl:text>Name</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="RegName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Registration No</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="RegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Registration Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="DateBR">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Type Of Constitution</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="ConstitutionType">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="x-small" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Country Of Registration</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-size="x-small"
																		font-style="normal" font-variant="normal" font-weight="normal"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="Report">
																						<xsl:for-each select="SMEProfile">
																							<xsl:for-each select="RegCouCode">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
														<fo:block>
															<fo:leader leader-pattern="space" />
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block />
														</fo:block>
													</xsl:if>
												</xsl:if>
											</xsl:if>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:block />
													
							<!-- Credit Scoring Assessment (Start) -->
							<xsl:if test="Response/ReportType  = &apos;ICR-SELF&apos;">
							<fo:block>
								<fo:leader leader-pattern="space" />
								<fo:table color="black" font-size="xx-small" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-column column-width="150" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell font-size="xx-small" font-style="normal"
												font-variant="normal" font-weight="normal" padding="0"
												number-columns-spanned="2" height="13" text-align="justify"
												display-align="center" border="0.5pt solid black">
												<fo:block>
													<!--  <fo:inline font-weight="bold" color="#00008b">My</fo:inline><fo:inline font-weight="bold" color="#DF0101">SCoRE</fo:inline>
													<fo:inline vertical-align="super" font-size="3px" font-weight="bold">TM</fo:inline><fo:inline> NOTES</fo:inline>-->
												</fo:block>
												<fo:block>
													<fo:inline font-weight="bold">
														<xsl:text>Notes:</xsl:text>
														<fo:leader leader-pattern="space" />
													</fo:inline>
												</fo:block>
												<fo:block>
													<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>										
													<fo:inline font-weight="normal"> does not draw conclusion or provide credit decisions for credit providers. </fo:inline> 
													<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>
													<fo:inline font-weight="normal"> is only one piece of information used by credit providers in their credit assessment process. Other than the </fo:inline> 
													<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>
													<fo:inline font-weight="normal">, credit providers will also consider their own risk acceptance level in lending, their own internal credit score and the applicant’s demographic and financial information. A credit score is a fluid number and is calculated based upon the latest information contained in a credit file at the time the score is requested. Since the credit information of a consumer may change from time to time, a score generated previously may not be the same as the current one. Moreover, the same credit applicant with the same score may be accepted by one credit provider, but rejected by another. Such decisions depend on the credit policy of the credit providers and other available information. We are not involved in any way in their credit decision process.
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</fo:block>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:block>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="150" />
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline font-weight="bold" color=" #004085">MySCoRE ASSESSMENT</fo:inline>												
														<!--<fo:inline font-weight="bold">
															 ASSESSMENT
														</fo:inline>-->
													</fo:block>
												</fo:block>
											</fo:table-cell>										
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</fo:block>
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="Scoring">	
												<fo:table color="black" font-size="8pt" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
													<fo:table-column column-width="500" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell padding="0"
																number-columns-spanned="1" height="100%" >
																	<fo:block>
																	<xsl:choose>
																		<xsl:when test="Grade = &apos;YY&apos;">
																		Based on your credit data, your credit grade as at <xsl:value-of select="//Response/ReqDate"/> is <xsl:value-of select="Grade"/>. 
																		</xsl:when>
																		<xsl:otherwise>
																		Based on your credit data, your credit score as at <xsl:value-of select="//Response/ReqDate"/> is <xsl:value-of select="Score"/> and falls into the credit grade of <xsl:value-of select="Grade"/>. The probability of you defaulting based on statistics and the population average, within the next 12 months is <xsl:value-of select="PD"/>%.
																		</xsl:otherwise>
																	</xsl:choose>
																	</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell padding="0" number-columns-spanned="1" height="100%" >
															<fo:block>
																<xsl:variable name="KifCount" select="count($XML/Response/Report/Profile/Scoring/kifs/kif)"/>
																<xsl:for-each select="kifs">
																<xsl:choose>
																<xsl:when test="count($XML/Response/Report/Profile/Scoring/kifs/kif) = 1 and //Score = &apos;-&apos;">
																</xsl:when>
																<xsl:otherwise>
																The Key Influencing Factors which contributes to your <fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline> are as below:
																	<xsl:for-each select="kif">
																	<fo:block >
																		<fo:inline font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal">
																			<xsl:number format="i. "/><xsl:value-of select="."/><xsl:text></xsl:text>												
																		</fo:inline>
																	</fo:block>
																	</xsl:for-each>
																</xsl:otherwise>
																</xsl:choose>
																</xsl:for-each>
															</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>										
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<fo:block margin="0pt">
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="500" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell padding="0"
												number-columns-spanned="1" height="100%" text-align="right"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
												
													<fo:table border="1px" color="black" font-size="11px"
														margin="0px" padding="0px" table-layout="fixed" width="100%"
														border-spacing="2pt">
														<fo:table-column column-width="500" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell border="0px" padding="2pt"
																	height="100%" text-align="left" display-align="after">
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="Response">
																			<xsl:for-each select="Report">
																				<xsl:for-each select="Profile">
																					<xsl:for-each select="Scoring">
																						<xsl:for-each select="Grade">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<fo:block>
																							<xsl:choose>
																								<!-- Old chart -->
																								<xsl:when test="//Grade = 'AA' or //Grade = 'BB' or //Grade = 'CC' or //Grade = 'X1' or //Grade = 'X2' or //Grade = 'X3'">
																									<fo:external-graphic content-width="150px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\piechart_green.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart_green.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>
																								</xsl:when>
																								<xsl:when test="//Grade = 'DD' or //Grade = 'EE' or //Grade = 'FF' or //Grade='X4'">
																									<fo:external-graphic content-width="150px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\piechart_yellow.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart_yellow.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>
																								</xsl:when>			
																								<xsl:when test="//Grade = 'GG' or //Grade = 'HH' or //Grade = 'II' or //Grade = 'JJ'">
																									<fo:external-graphic content-width="150px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\piechart_red.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart_red.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>
																								</xsl:when>
																								<!-- -->
																								<!-- New Chart -->
																								<xsl:when test="//Grade = 'Excellent'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Excellent).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Excellent).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Very Good'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Good).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Good).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Good'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Good).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Good).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Fair'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Fair).jpg&apos;)" /></xsl:with-param>
																										<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Fair).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Below Average'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Below Average).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Below Average).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Poor'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Poor).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Poor).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Very Poor'">
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Poor).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Poor).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<!-- -->																																											
																								<xsl:otherwise>
																									<!-- Replace with new graph
																									<fo:external-graphic content-width="150px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\piechart.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>
																									-->
																									<!-- New Chart -->
																									<fo:external-graphic content-width="200px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (No Grade).jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (No Grade).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>
																									<!-- -->
																								</xsl:otherwise>
																							</xsl:choose>
																							<xsl:choose>
																								<xsl:when test="//Grade = 'AA'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeAA.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeAA.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'BB'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeBB.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeBB.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:when test="//Grade = 'CC'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeCC.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeCC.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:when test="//Grade = 'DD'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeDD.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeDD.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>														
																								<xsl:when test="//Grade = 'EE'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeEE.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeEE.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'FF'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeFF.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeFF.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:when test="//Grade = 'GG'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeGG.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeGG.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>			
																								<xsl:when test="//Grade = 'HH'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeHH.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeHH.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'II'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeII.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeII.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>														
																								<xsl:when test="//Grade = 'JJ'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeJJ.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeJJ.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'X1'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeX1.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX1.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>														
																								<xsl:when test="//Grade = 'X2'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeX2.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX2.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'X3'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeX3.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX3.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>		
																								<xsl:when test="//Grade = 'X4'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeX4.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX4.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'YY'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeYY.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeYY.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:when test="//Grade = 'Z1'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ1.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ1.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>														
																								<xsl:when test="//Grade = 'Z2'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ2.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ2.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:when test="//Grade = 'Z3'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ3.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ3.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Z4'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ4.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ4.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Z5'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ5.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ5.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:when test="//Grade = 'Z6'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ6.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ6.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>
																								<xsl:when test="//Grade = 'Z7'">
																									<fo:external-graphic content-width="180px">
																										<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																											name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																											select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ7.jpg&apos;)" /></xsl:with-param>
																											<xsl:with-param
																											name="text-length"><xsl:value-of
																											select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ7.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																									</fo:external-graphic>	
																								</xsl:when>	
																								<xsl:otherwise>
	<!-- 																								<fo:external-graphic content-width="180px"> -->
	<!-- 																									<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template -->
	<!-- 																										name="double-backslash"><xsl:with-param name="text"><xsl:value-of -->
	<!-- 																										select="string(&apos;D:\SCBSReport\StyleSheet\grade_na.gif&apos;)" /></xsl:with-param> -->
	<!-- 																										<xsl:with-param -->
	<!-- 																										name="text-length"><xsl:value-of -->
	<!-- 																										select="string-length(string(&apos;D:\SCBSReport\StyleSheet\grade_na.gif&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute> -->
	<!-- 																								</fo:external-graphic>	 -->
																								</xsl:otherwise>
																							</xsl:choose>																						
																							</fo:block>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>																	
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0"
												text-align="left" display-align="center">
												<fo:block />
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</fo:block>
							
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							</xsl:if>
							<xsl:variable name="summaryCount" select="count(Response/ReportAccess/SUMMARY[. = 'Y'])" />
							<xsl:variable name="subsectioncount0_1" select="$summaryCount" />
							<xsl:variable name="subsectioncount0_2" select="$summaryCount + 1" />
							<xsl:variable name="subsectioncount0_3" select="$summaryCount + 2" />
							<xsl:variable name="subsectioncount0_4" select="$summaryCount + 3" />
							<xsl:variable name="subsectioncount0_5" select="$summaryCount + 4" />
							<!-- Credit Scoring Assessment (End) -->
							<xsl:variable name="sectioncount0_2" select="count( 
								Response/ReportAccess/CURRBUSCOMP[. = &apos;Y&apos;] |
								Response/ReportAccess/PREVBUSCOMP[. = &apos;Y&apos;] |
								Response/ReportAccess/SUMMARY[. = &apos;Y&apos;] |
								Response/ReportAccess/LTLEGAL[. = &apos;Y&apos;]
							)" />

							<xsl:variable name="sectioncount0_1" select="count( 
								Response/ReportAccess/LTLEGAL[. = &apos;Y&apos;]
							)" />	
							<xsl:variable name="ltlegalCount" select="count(Response/ReportAccess/LTLEGAL[. = 'Y'])"/>
							<xsl:variable name="tempSubsection" select="$subsectioncount0_5 + $ltlegalCount"/>
							<xsl:variable name="subsectioncount0_6">
								<xsl:choose>
									<xsl:when test="$summaryCount &gt; 0">
									<xsl:value-of select="$tempSubsection"/>
									</xsl:when>
									<xsl:otherwise>
									<xsl:value-of select="1"/>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:variable>
							<xsl:variable name="adjusted_sectioncount0_1">
								<xsl:choose>
									<xsl:when test="$sectioncount0_1 = 0">
									<xsl:value-of select="1"/>
									</xsl:when>
									<xsl:otherwise>
									<xsl:value-of select="$sectioncount0_1"/>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:variable>
							
											
							<xsl:if test="//Response/ReportAccess/LTLEGAL = &apos;Y&apos;">
								<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
									<fo:block>
										<fo:inline>
											<xsl:value-of select="concat('SECTION ', $sectioncount0_1)"/>
										</fo:inline>
										<fo:inline>
											<xsl:text>: SUMMARY INFORMATION</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>

									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block color="#00008b" font-size="9pt"
															font-weight="bold" height="10px" margin="0px"
															padding="0px" text-align="left">
										<fo:block>
											<fo:inline>
												<xsl:value-of select="concat($sectioncount0_1, '.', 1, ' ')" />
											</fo:inline>
											<fo:inline>
												<xsl:text>LITIGATION INFORMATION (*INCLUDES CIVIL AND CRIMINAL CASE COUNTS)</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:block>
									<fo:table color="black" font-size="11px" margin="0px"
										padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="2pt">
										<!-- <fo:table-column column-width="30" /> -->
										<!-- <fo:table-column column-width="400" /> -->
										<!-- <fo:table-column column-width="60" /> -->
										<fo:table-column column-width="proportional-column-width(3)" />  
										<fo:table-column column-width="proportional-column-width(40)" /> 
										<fo:table-column column-width="proportional-column-width(6)" /> 
										<fo:table-body start-indent="0pt">
										<!-- Title -->
											<fo:table-row>
												<fo:table-cell background-color="#9edbaf" color="#2c2c2c"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="bold" number-columns-spanned="1" border="solid 1pt gray"
													padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>No.</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#9edbaf" color="#2c2c2c"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="bold" number-columns-spanned="1" border="solid 1pt gray"
													padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Subject's Role</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#9edbaf" color="#2c2c2c"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="bold" number-columns-spanned="1" border="solid 1pt gray"
													padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>No. of Cases</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- 1 -->
											<fo:table-row>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>1</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Defendant</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-align="center">
														<xsl:choose>
															<xsl:when test="count(//Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'DEFENDANT' and OCRStatus != 'ST']) = 0">
																<fo:block>
																		-
																	</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<xsl:variable name="totalCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'DEFENDANT' and OCRStatus != 'ST'])" />
																<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice">
																	<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																		<!-- Output for the last case only -->
																		<xsl:if test="position() = last()">
																			<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																				<xsl:choose>
																					<xsl:when test="$totalCases = 0">-</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="$totalCases"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</fo:block>
																		</xsl:if>
																	</fo:block>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- 2 -->
											<fo:table-row>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>2</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Guarantor</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-align="center">
															<xsl:choose>
																<xsl:when test="count(//Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'CORPORATE GUARANTOR']) = 0">
																	<fo:block>
																			-
																		</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:variable name="totalCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'CORPORATE GUARANTOR' and OCRStatus != 'ST'])" />
																	<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice">
																		<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																			<!-- Output for the last case only -->
																			<xsl:if test="position() = last()">
																				<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																				<xsl:choose>
																					<xsl:when test="$totalCases = 0">-</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="$totalCases"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</fo:block>
																			</xsl:if>
																		</fo:block>
																	</xsl:for-each>
																</xsl:otherwise>
															</xsl:choose>
															<!-- <xsl:for-each select="$XML/Response/Report/Profile/Litigation">
																<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																	<xsl:if test="position() = last()">
																		<xsl:value-of select="CountCorGuarantor" />
																	</xsl:if>
																</fo:block>
															</xsl:for-each> -->
														</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- 3 -->
											<fo:table-row>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>3</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Plaintiff</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-align="center">
														<xsl:choose>
															<xsl:when test="count(//Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'PLAINTIFF']) = 0">
																<fo:block>
																		-
																	</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<xsl:variable name="totalCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'PLAINTIFF' and OCRStatus != 'ST'])" />
																<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice">
																	<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																		<!-- Output for the last case only -->
																		<xsl:if test="position() = last()">
																			<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																			<xsl:choose>
																				<xsl:when test="$totalCases = 0">-</xsl:when>
																				<xsl:when test="$plaintiffBankruptCount &gt;= 30">
																					<xsl:value-of select="$subjectAsPlaintiffCount"/>
																					<xsl:text>*</xsl:text>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="$totalCases"/>
																				</xsl:otherwise>
																			</xsl:choose>
																			</fo:block>
																		</xsl:if>
																	</fo:block>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
															<!-- <xsl:for-each select="$XML/Response/Report/Profile/Litigation">
																<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																	<xsl:if test="position() = last()">
																		<xsl:value-of select="CountPlt" />
																	</xsl:if>
																</fo:block>
															</xsl:for-each> -->
														</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- 4 -->
											<fo:table-row>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>4</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="1"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Defendant (settled/ withdrawn/ strike out/ struck off/ discontinued/ discharged)</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-align="center">
															<xsl:choose>
																<xsl:when test="count(//Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'DEFENDANT' and OCRStatus = 'ST']) = 0">
																	<fo:block>
																			-
																		</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:variable name="bdisCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[OCRStatus = 'ST' and SubjectRole = 'DEFENDANT'])" />
																	<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice">
																		<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																			<!-- Output for the last case only -->
																			<xsl:if test="position() = last()">
																				<fo:block font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																				<xsl:choose>
																					<xsl:when test="$bdisCases = 0">-</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="$bdisCases"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</fo:block>
																			</xsl:if>
																		</fo:block>
																	</xsl:for-each>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Total -->
											<fo:table-row>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="bold"
													border="solid 1pt gray" padding="2pt" number-columns-spanned="2"
													display-align="center" text-align="right">
													<fo:block>
														<fo:inline>
															<xsl:text>Total</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="white" font-size="8pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-align="center">
															<xsl:choose>
																<xsl:when test="count(//Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice) = 0">
																	<fo:block>
																			-
																		</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:variable name="defendantCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'DEFENDANT' and OCRStatus != 'ST'])"/>
																	<xsl:variable name="corpCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'CORPORRATE GUARANTOR' and OCRStatus != 'ST'])"/>
																	<xsl:variable name="plaintiffCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'PLAINTIFF' and OCRStatus != 'ST'])"/>
																	<xsl:variable name="defSettleCases" select="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[SubjectRole = 'DEFENDANT' and OCRStatus = 'ST'])"/>
																	<xsl:variable name="totalCases" select="$defendantCases + $corpCases + $plaintiffCases + $defSettleCases"/>							
																	<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice">
																		<fo:block font-weight="bold" font-size="9pt" height="10px" margin="0px" padding="0px" text-align="center">
																			<!-- Output for the last case only -->
																			<xsl:if test="position() = last()">
																				<xsl:choose>
																					<xsl:when test="$plaintiffBankruptCount &gt;= 30">
																						<xsl:value-of select="number($totalCases) - number($plaintiffBankruptCount) + number($subjectAsPlaintiffCount)"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="$totalCases" />
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:if>
																		</fo:block>
																	</xsl:for-each>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:block>&#160;</fo:block>
									<xsl:if test="$plaintiffBankruptCount &gt;= 30">
										<!-- Add note table when there are 30 or more plaintiffs  -->
										<fo:table color="black" font-size="9px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(49)" />  
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<!-- First line: DISCLAIMER -->
												<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="bold" padding="0pt" height="5" display-align="center">
													<fo:block>
														<fo:inline font-weight="bold" background-color="yellow" color="black">
															<xsl:text>Note:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<!-- Second line: The rest of the disclaimer text -->
												<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" height="0" display-align="center" text-align="justify">
													<fo:block>
														<fo:inline background-color="yellow" color="black">
															<xsl:text>This report displays the first thirty (30) litigation information where Subject is Plaintiff. To obtain information on the other litigation information, please contact helpdesk@creditbureau.com.my.</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
										</fo:table>
									</xsl:if>

									
				
								</xsl:if>
							

							<xsl:variable name="hasSummary" select="(Response/ReportAccess/SUMMARY = 'N') or (Response/ReportAccess/LTLEGAL = 'Y')" />
							<xsl:variable name="hasBothSummaryandLit" select="(Response/ReportAccess/SUMMARY = 'Y') and (Response/ReportAccess/LTLEGAL = 'Y')" />
							
							<!-- Credit Scoring Assessment (Start) -->
							<xsl:variable name="sectioncount0_12" select="
									(1 * $hasSummary) +
									(1 * $hasBothSummaryandLit)
									"/>
						<!-- Amended by William (26/08/2014) -->
						<xsl:if test="Response/ReportType  != &apos;ICR-SELF&apos;">
						<fo:block>&#160;</fo:block>
						<xsl:for-each select="$XML">
			            	<xsl:for-each select="Response">
			           			<xsl:for-each select="Report">
			            			<xsl:for-each select="Profile">
			            				<xsl:for-each select="Scoring">
											<fo:block>
												<fo:leader leader-pattern="space" />
											</fo:block>
											<fo:block>
												<fo:table border="0px" color="black" font-size="11px"
													margin="0px" padding="0px" table-layout="fixed" width="100%"
													border-spacing="2pt">
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell border="0px" border-style="solid"
																padding="2pt" display-align="center">
																<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
																	<fo:inline>
																		<xsl:value-of select="concat('SECTION ', $sectioncount0_12)"/>
																	</fo:inline>
																	<fo:inline>: CREDIT SCORE</fo:inline>	
																</fo:block>
															</fo:table-cell>										
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</fo:block>
											<fo:block>
												<fo:table color="black" font-size="xx-small" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
													<fo:table-column column-width="proportional-column-width(1)" />
													<fo:table-column column-width="150" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell font-size="xx-small" font-style="normal"
																font-variant="normal" font-weight="normal" padding="0"
																number-columns-spanned="2" height="13" text-align="justify"
																display-align="center" border="0.5pt solid black">
																<fo:block>
																	<fo:inline font-weight="bold">
																		<xsl:text>Notes:</xsl:text>
																		<fo:leader leader-pattern="space" />
																	</fo:inline>
																</fo:block>
																<fo:block>
																	<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>												
																	<fo:inline font-weight="normal"> does not draw conclusion or provide credit decisions for credit providers. </fo:inline> 
																	<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>	
																	<fo:inline font-weight="normal"> is only one piece of information used by credit providers in their credit assessment process. Other than the </fo:inline> 
																	<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>	
																	<fo:inline font-weight="normal">, credit providers will also consider their own risk acceptance level in lending, their own internal credit score and the applicant’s demographic and financial information. A credit score is a fluid number and is calculated based upon the latest information contained in a credit file at the time the score is requested. Since the credit information of a consumer may change from time to time, a score generated previously may not be the same as the current one. Moreover, the same credit applicant with the same score may be accepted by one credit provider, but rejected by another. Such decisions depend on the credit policy of the credit providers and other available information. We are not involved in any way in their credit decision process.
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</fo:block>
											<fo:block>&#160;</fo:block>
											<fo:block>
												<fo:table border="0px" color="black" font-size="11px"
													margin="0px" padding="0px" table-layout="fixed" width="100%"
													border-spacing="2pt">
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell border="0px" border-style="solid"
																padding="2pt" display-align="center">
																<fo:block color="#00008b" font-size="9pt"
																font-weight="bold" height="10px" margin="0px"
																padding="0px" text-align="left">
																	<fo:inline font-weight="bold" color=" #004085">MySCoRE ASSESSMENT</fo:inline>	
																</fo:block>
															</fo:table-cell>										
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</fo:block>
											<fo:block margin="0pt">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
													<fo:table-column column-width="500" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell padding="0"
																number-columns-spanned="1" height="100%" text-align="right"
																display-align="center">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																
																	<fo:table border="1px" color="black" font-size="11px"
																		margin="0px" padding="0px" table-layout="fixed" width="100%"
																		border-spacing="2pt">
																		<fo:table-column column-width="500" />
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell border="0px" padding="2pt"
																					height="100%" text-align="left" display-align="after">
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="Profile">
																									<xsl:for-each select="Scoring">
																										<xsl:for-each select="Grade">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<fo:block>
																											<xsl:choose>
																												<!-- Old chart -->
																												<xsl:when test="//Grade = 'AA' or //Grade = 'BB' or //Grade = 'CC' or //Grade = 'X2' or //Grade = 'X3' or //Grade = 'X4'">
																													<fo:external-graphic content-width="150px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\piechart_green.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart_green.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>
																												</xsl:when>
																												<xsl:when test="//Grade = 'DD' or //Grade = 'EE' or //Grade = 'FF' or //Grade='X1'">
																													<fo:external-graphic content-width="150px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\piechart_yellow.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart_yellow.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>
																												</xsl:when>			
																												<xsl:when test="//Grade = 'GG' or //Grade = 'HH' or //Grade = 'II' or //Grade = 'JJ'">
																													<fo:external-graphic content-width="150px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\piechart_red.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart_red.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>
																												</xsl:when>
																												<!-- -->
																												<!-- New Chart -->
																												<xsl:when test="//Grade = 'Excellent'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Excellent).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Excellent).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Very Good'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Good).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Good).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Good'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Good).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Good).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Fair'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Fair).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Fair).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Below Average'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Below Average).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Below Average).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Poor'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Poor).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Poor).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Very Poor'">
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Poor).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (Very Poor).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<!-- -->																																							
																												<xsl:otherwise>
																													<!-- Replace with new graph
																													<fo:external-graphic content-width="150px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\piechart.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\piechart.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>
																													-->
																													<!-- New Chart -->
																													<fo:external-graphic content-width="200px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\Score Meter (No Grade).jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\Score Meter (No Grade).jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>
																													<!-- -->
																												</xsl:otherwise>
																											</xsl:choose>
																											<xsl:choose>
																												<xsl:when test="//Grade = 'AA'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeAA.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeAA.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'BB'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeBB.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeBB.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:when test="//Grade = 'CC'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeCC.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeCC.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:when test="//Grade = 'DD'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeDD.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeDD.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>														
																												<xsl:when test="//Grade = 'EE'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeEE.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeEE.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'FF'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeFF.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeFF.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:when test="//Grade = 'GG'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeGG.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeGG.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>			
																												<xsl:when test="//Grade = 'HH'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeHH.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeHH.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'II'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeII.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeII.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>														
																												<xsl:when test="//Grade = 'JJ'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeJJ.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeJJ.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'X1'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeX1.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX1.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>														
																												<xsl:when test="//Grade = 'X2'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeX2.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX2.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'X3'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeX3.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX3.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>		
																												<xsl:when test="//Grade = 'X4'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeX4.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeX4.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'YY'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeYY.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeYY.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:when test="//Grade = 'Z1'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ1.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ1.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>														
																												<xsl:when test="//Grade = 'Z2'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ2.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ2.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:when test="//Grade = 'Z3'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ3.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ3.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Z4'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ4.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ4.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Z5'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ5.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ5.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:when test="//Grade = 'Z6'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ6.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ6.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>
																												<xsl:when test="//Grade = 'Z7'">
																													<fo:external-graphic content-width="180px">
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																															name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																															select="string(&apos;D:\SCBSReport\StyleSheet\GradeZ7.jpg&apos;)" /></xsl:with-param>
																															<xsl:with-param
																															name="text-length"><xsl:value-of
																															select="string-length(string(&apos;D:\SCBSReport\StyleSheet\GradeZ7.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>	
																												</xsl:when>	
																												<xsl:otherwise>
					<!-- 																								<fo:external-graphic content-width="180px"> -->
					<!-- 																									<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template -->
					<!-- 																										name="double-backslash"><xsl:with-param name="text"><xsl:value-of -->
					<!-- 																										select="string(&apos;D:\SCBSReport\StyleSheet\grade_na.gif&apos;)" /></xsl:with-param> -->
					<!-- 																										<xsl:with-param -->
					<!-- 																										name="text-length"><xsl:value-of -->
					<!-- 																										select="string-length(string(&apos;D:\SCBSReport\StyleSheet\grade_na.gif&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute> -->
					<!-- 																								</fo:external-graphic>	 -->
																												</xsl:otherwise>
																											</xsl:choose>																						
																											</fo:block>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>																	
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell font-size="10pt" padding="0"
																text-align="left" display-align="center">
																<fo:block />
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</fo:block>
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<xsl:for-each select="$XML">
													<xsl:for-each select="Response">
														<xsl:for-each select="Report">
															<xsl:for-each select="Profile">
																<xsl:for-each select="Scoring">							
																	<fo:table color="black" font-size="11px" margin="0px"
																		padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
																		border-spacing="2pt">
																		<fo:table-column column-width="176" />
																		<fo:table-column column-width="376" />
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="#9edbaf" color="#2c2c2c"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="bold" number-columns-spanned="2" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>Individual </fo:inline>
																						<fo:inline font-weight="bold" color=" #004085">MySCoRE</fo:inline>												
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px" margin="0px"
																		padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
																		border-spacing="2pt">
																		<fo:table-column column-width="176" />
																		<fo:table-column column-width="376" />
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						Credit Score
																					</fo:block>	
																				</fo:table-cell>
																				<fo:table-cell background-color="transparent"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="before">
																					<fo:block>
																						<xsl:for-each select="Score">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>																	
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Probability of Default (%)</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="transparent"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="before">
																					<fo:block>
																						<xsl:for-each select="PD">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>		
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Key Influencing Factors</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="transparent"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray" padding="2pt"
																					display-align="before">
																					<fo:block>
																						<xsl:for-each select="kifs">
																							<xsl:for-each select="kif">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'-')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:block>
																											- <xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>			
																						</xsl:for-each>
																					</fo:block>														
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</fo:block>
											
											<fo:block>
												<fo:leader leader-pattern="space" />
											</fo:block>
										</xsl:for-each>
			                 		</xsl:for-each>
		                  		</xsl:for-each>
	                   		</xsl:for-each>
                    	</xsl:for-each>
                    	</xsl:if>
						<!-- Credit Scoring Assessment (End) -->

						<!-- <xsl:if
								test="Response/ReportAccess/INDINFO =&apos;Y&apos; and Response/ReportAccess/ADDRINFO  = &apos;Y&apos;">
								
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="500" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block color="#00008b" font-size="9pt"
																font-weight="bold" height="10px" margin="0px"
																padding="0px" text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:text>ADDITIONAL DEMOGRAPHICS</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<xsl:if test="//Response/ReportType  = &apos;ICR-SELF&apos;">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block font-size="8pt"
														font-style="normal" font-variant="normal"
														font-weight="normal" >
														<fo:block>
															<fo:inline>
																<xsl:text>Address details are supplied in conjunction with a credit application, therefore the address information recorded is not a
																chronological list of addresses.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										</xsl:if>
									</fo:table-body>
								</fo:table>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container> -->
								<!-- Address Records (Start) -->								
								<!-- <fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="498" />
											<fo:table-column column-width="proportional-column-width(1)" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														color="#2c2c2c" font-size="8pt" font-style="normal"
														font-variant="normal" font-weight="bold"
														number-columns-spanned="2" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Address Records</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline color="#3c3c3c" font-size="8pt">
																<xsl:text>Address</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center" width="20%">
														<fo:block>
															<fo:inline color="#3c3c3c" font-size="8pt">
																<xsl:text>Report Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="$XML">
											<xsl:for-each select="Response">
												<xsl:for-each select="Report">
													<xsl:for-each select="Profile">
														<xsl:for-each select="CRSEntities">
															<xsl:for-each select="CRSEntity">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="498" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="Add">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="DateCreated">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template" />
																						</fo:inline>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block> -->
								<!-- Address Records (End) -->
								<!-- Contacts (Start) -->	
								<!-- <xsl:if test="Response/ReportAccess/OCCUPATION =&apos;Y&apos; and Response/ReportAccess/ADDRINFO  = &apos;Y&apos;">
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="500" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														color="#2c2c2c" font-size="8pt" font-style="normal"
														font-variant="normal" font-weight="bold"
														number-columns-spanned="2" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Contact Records</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline color="#3c3c3c" font-size="8pt">
																<xsl:text>Phone Number</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center" width="20%">
														<fo:block>
															<fo:inline color="#3c3c3c" font-size="8pt">
																<xsl:text>Report Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="$XML">
											<xsl:for-each select="Response">
												<xsl:for-each select="Report">
													<xsl:for-each select="Profile">
														<xsl:for-each select="CRSContacts">
															<xsl:for-each select="CRSContact">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="500" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="PhoneNo">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="DateCreated">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template" />
																						</fo:inline>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
								</xsl:if> -->
								<!-- Contacts (End) -->	
								<!-- Occupations (Start) -->
								<!-- <xsl:if test="Response/ReportAccess/CONTACT =&apos;Y&apos; and Response/ReportAccess/ADDRINFO  = &apos;Y&apos;">
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="500" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														color="#2c2c2c" font-size="8pt" font-style="normal"
														font-variant="normal" font-weight="bold"
														number-columns-spanned="2" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Occupation Records</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline color="#3c3c3c" font-size="8pt">
																<xsl:text>Occupation</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center" width="20%">
														<fo:block>
															<fo:inline color="#3c3c3c" font-size="8pt">
																<xsl:text>Report Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="$XML">
											<xsl:for-each select="Response">
												<xsl:for-each select="Report">
													<xsl:for-each select="Profile">
														<xsl:for-each select="CRSOccupations">
															<xsl:for-each select="CRSOccupation">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="500" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="Occupation">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="DateCreated">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template" />
																						</fo:inline>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
								</xsl:if> -->
								<!-- Occupations (End) -->								
								<!-- <fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
							</xsl:if> -->

							<!-- Individual Report - Current Company/Business (Start) -->
		
							
							<xsl:variable name="hasBothINDINFOandCRSADDRINFO" select="(Response/ReportAccess/INDINFO = 'Y') and (Response/ReportAccess/CRSADDRINFO = 'Y')" />

							<xsl:variable name="sectioncount0_10" select="
									count(Response/ReportAccess[CURRBUSCOMP = 'Y' or PREVBUSCOMP = 'Y']) +
									(1 * $hasSummary) +
									(1 * $hasBothSummaryandLit) +
									(1 * $hasBothINDINFOandCRSADDRINFO)
								" />	
							<xsl:if test="Response/ReportAccess/CURRBUSCOMP =&apos;Y&apos; or Response/ReportAccess/PREVBUSCOMP =&apos;Y&apos;">
							<fo:block>&#160;</fo:block>
								<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
									<fo:block>
										<fo:inline>
											<xsl:value-of select="concat('SECTION ', $sectioncount0_10)"/>
										</fo:inline>
										<fo:inline>
											<xsl:text>: DIRECTORSHIPS AND RELATED INTEREST</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
								
								<fo:block color="black" font-size="xx-small" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
									<fo:block>										
										<fo:inline>
											<xsl:text>Note: </xsl:text>
										</fo:inline>				
									</fo:block>
									<fo:block>										
										<fo:inline>
											<xsl:text>The SSM information herein is updated as to the last updated date displayed. The Subject’s SSM information will be updated every time a Premium report is purchased on the said Subject. To obtain the latest SSM update and changes on the Subject, please purchase our Premium Report or contact helpdesk@creditbureau.com.my for more information.</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
							</xsl:if>
							
							<xsl:variable name="subsectioncount0_10" select="count(
							Response/ReportAccess/CURRBUSCOMP[. = &apos;Y&apos;]
						)" />
						<xsl:if test="Response/ReportAccess/CURRBUSCOMP =&apos;Y&apos;">
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="500" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block color="#00008b" font-size="9pt"
															font-weight="bold" height="10px" margin="0px"
															padding="0px" text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:value-of select="concat($sectioncount0_10, '.', $subsectioncount0_10, ' ')" />
															</fo:inline>
															<fo:inline>
																<xsl:text>CURRENT COMPANIES/BUSINESSES</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="65"/>
											<fo:table-column column-width="auto"/>
											<fo:table-column column-width="60"/>
											<fo:table-column column-width="auto"/>
											<fo:table-column column-width="40"/>
											<fo:table-column column-width="40"/>
											<fo:table-column column-width="50"/>
											<fo:table-column column-width="40"/>
											<fo:table-column column-width="50"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														color="#2c2c2c" font-size="8pt" font-style="normal"
														font-variant="normal" font-weight="bold"
														number-columns-spanned="9" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Current Companies/Businesses Information</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Reg. No./New Reg. No./Reg. Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Companies Name/Status</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Appointment Date/Position</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Industrial Code / Line Of Business</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<!-- Added and Amended by Hafiz (22/06/2015) -->
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>No. of Shares</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<!-- End by Added and Amended by Hafiz -->
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>% Shares</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Profit Making</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Non-Bank Credit Indicator*</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Last Updated</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="$XML">
											<xsl:for-each select="Response">
												<xsl:for-each select="Report">
													<xsl:for-each select="Profile">
														<xsl:for-each select="CurrentBusComps">
															<xsl:for-each select="CurrentBusComp">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="65"/>
																	<fo:table-column column-width="auto"/>
																	<fo:table-column column-width="60"/>
																	<fo:table-column column-width="auto"/>
																	<fo:table-column column-width="40"/>
																	<fo:table-column column-width="40"/>
																	<fo:table-column column-width="50"/>
																	<fo:table-column column-width="40"/>
																	<fo:table-column column-width="50"/>
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<!-- Added and Amended by Hafiz (22/06/2015) -->
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block wrap-option="wrap">
																						<fo:inline>
																							<xsl:for-each select="RegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<!-- Added and Amended by wan (14/09/2020) -->
																					<fo:block wrap-option="wrap">
																						<fo:inline>
																							<xsl:for-each select="NewRegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block wrap-option="wrap">
																						<fo:inline>
																							<xsl:for-each select="RegDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<!-- End Added and Amended by Hafiz -->
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="RegName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block font-size="8pt">
																						<fo:inline>
																							<xsl:for-each select="Status">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="AppointmentDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block font-size="8pt">
																						<fo:inline>
																							<xsl:for-each select="Position">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="IndustryCode">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block font-size="8pt">
																						<fo:inline>
																							<xsl:for-each select="IndustryCodeDesc">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="NoOfShares">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="SharePercentage">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:if test="not(ProfitMakings)">
																						-
																					</xsl:if>
																					<xsl:for-each select="ProfitMakings">
																						<xsl:for-each select="ProfitMaking">
																							<fo:block>
																								<xsl:for-each select="Year">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'-')">
																											<fo:block>

																											</fo:block>
																											<fo:inline> - </fo:inline>
																											<fo:block>

																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:inline> = </fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<xsl:for-each select="ProfitMake">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'-')">

																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell text-align="center"
																				background-color="transparent" font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="TradeIndicator">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell
																				background-color="transparent" font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="LastUpdated">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="500" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block font-size="8pt" font-weight="normal"
														margin="0px" padding="0px" text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:text>* Non-Bank Credit Indicator = Availability of Non-Bank Credit for Past 12 Months</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<!-- Individual Report - Current Company/Business (End) -->
						<xsl:variable name="subsectioncount0_11" select="count(
							Response/ReportAccess/CURRBUSCOMP[. = &apos;Y&apos;] |
							Response/ReportAccess/RELATEDBUSCOMP[. = &apos;Y&apos;]
						)" />
						<!-- Individual Report - Related Businesses n Companies (Start) -->
							<xsl:if test="Response/ReportAccess/RELATEDBUSCOMP =&apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block>
										<fo:table border="0px" color="black" font-size="11px"
											margin="0px" padding="0px" table-layout="fixed" width="100%"
											border-spacing="2pt">
											<fo:table-column column-width="550" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="0px" border-style="solid"
														display-align="center">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block color="#00008b" font-size="9pt"
																font-weight="bold" height="10px" margin="0px"
																padding="0px" text-align="left">
																<fo:block>
																	<fo:inline>
																		<xsl:value-of select="concat($sectioncount0_10, '.', $subsectioncount0_11, ' ')" />
																	</fo:inline>
																	<fo:inline font-weight="bold">
																		<xsl:text>RELATED BUSINESS &amp; COMPANIES</xsl:text>
																	</fo:inline>
																	<!-- SSM related disclaimer temporary commented -->
																<xsl:if test="contains(//Response/ReportType,'ICR') or contains(//Response/ReportType,'ICR-SELF') or contains(//Response/ReportType,'MYSCORE')">
															<!-- <fo:inline color="#FF0000" padding="0 px"><xsl:text >**</xsl:text></fo:inline> -->
															</xsl:if>
															<!-- SSM related disclaimer -->
																</fo:block>
															</fo:block>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<!--Start SSM info disclaimer block -->
												<!-- <xsl:if test="contains(//Response/ReportType,'ICR') or contains(//Response/ReportType,'ICR-SELF') or contains(//Response/ReportType,'MYSCORE')">
												<fo:table-row>
													<fo:table-cell font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0" height="13" text-align="justify" display-align="center">
													<fo:block>										
														<fo:inline color="#FF0000" padding="0px" font-size="9pt"><xsl:text >**</xsl:text></fo:inline>
														<fo:inline padding="0 5px">											
															<xsl:text>The SSM Information of the companies/businesses displayed herein is as available in CBM's database. The SSM information will only be updated every time a Premium Report is purchased on each such company/business. Therefore, the information contained herein may not be comprehensive.</xsl:text>
														</fo:inline>
													</fo:block>
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
													</fo:table-cell>
												</fo:table-row>
												</xsl:if> -->
												<!--End SSM info disclaimer block -->
												<xsl:if test="Response/ReportType  = &apos;ICR-SELF&apos;">
												<fo:table-row>
													<fo:table-cell border="0px" border-style="solid"
														display-align="center">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block font-size="8pt"
																font-style="normal" font-variant="normal"
																font-weight="normal" >
																<fo:block>
																	<fo:inline>
																		<xsl:text>This section displays your details regarding the related businesses and companies.</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>		
												</xsl:if>													
											</fo:table-body>
										</fo:table>									
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
									
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<!-- Added and Amended by Hafiz  (19/06/2015) -->
											<fo:table-column column-width="60" />
											<fo:table-column column-width="110" />
											<fo:table-column column-width="80" />
											<fo:table-column column-width="50" />
											<fo:table-column column-width="50" />
											<fo:table-column column-width="92" />
											<fo:table-column column-width="60" />
											<fo:table-column column-width="50" />	
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														color="#2c2c2c" font-size="8pt" font-style="normal"
														font-variant="normal" font-weight="bold"
														number-columns-spanned="8" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Related Businesses &amp; Companies</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<!-- Added and Amended by Hafiz  (19/06/2015) -->
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:block>
																<fo:inline>
																	<xsl:text>Reg. No./</xsl:text>
																</fo:inline>
															</fo:block>
															<!-- Added and Amended by wan  (14/09/2020) -->
															<fo:block>
																<fo:inline>
																	<xsl:text>New Reg. No./</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>
																<fo:inline>
																	<xsl:text>Reg. Date</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:block>
																<fo:inline>
																	<xsl:text>Companies Name/</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>
																<fo:inline>
																	<xsl:text>Status</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Appointment Date/Position</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>No. of Shares</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>% Shares</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Nature of Business/Business Type</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Issued Capital</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Last Updated</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<!-- End Added and Amended by Hafiz -->
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="$XML">
											<xsl:for-each select="Response">
												<xsl:for-each select="Report">
													<xsl:for-each select="Profile">
														<xsl:for-each select="RelatedBusComps">
															<xsl:for-each select="RelatedBusCom">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<!-- Added and Amended by Hafiz  (19/06/2015) -->
																	<fo:table-column column-width="60" />
																	<fo:table-column column-width="110" />
																	<fo:table-column column-width="80" />
																	<fo:table-column column-width="50" />
																	<fo:table-column column-width="50" />
																	<fo:table-column column-width="92" />
																	<fo:table-column column-width="60" />
																	<fo:table-column column-width="50" />	
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<!-- Added and Amended by Hafiz  (19/06/2015) -->
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="RegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>	
																					</fo:block>
																					<!-- Added and Amended by wan  (13/09/2020) -->
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="NewRegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>	
																					</fo:block>
																					<fo:block>
																						<fo:inline>		
																							<xsl:for-each select="RegDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>	
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="Name">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="Status">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="ReportDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="Relationship">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="NoOfShares">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="SharePercentage">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="IndustryCodeDesc">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="TotalIssuedCapital">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="LastUpdated">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
							</xsl:if>
							<!-- Individual Report - Related Businesses n Companies (End) -->
						
						
							<!-- Individual Report - Previous Company/Business (Start) -->
							<xsl:variable name="subsectioncount0_12" select="count( 
								Response/ReportAccess/CURRBUSCOMP[. = &apos;Y&apos;] |
								Response/ReportAccess/RELATEDBUSCOMP[. = &apos;Y&apos;] |
								Response/ReportAccess/PREVBUSCOMP[. = &apos;Y&apos;]								
							)" />
							<xsl:if test="Response/ReportAccess/PREVBUSCOMP =&apos;Y&apos;">
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0px" color="black" font-size="11px"
											margin="0px" padding="0px" table-layout="fixed" width="100%"
											border-spacing="2pt">
											<fo:table-column column-width="500" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="0px" border-style="solid"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block color="#00008b" font-size="9pt"
															font-weight="bold" height="10px" margin="0px"
															padding="0px" text-align="left">
																<fo:block>
																<fo:block>&#160;</fo:block>
																	<fo:inline>
																		<xsl:value-of select="concat($sectioncount0_10, '.', $subsectioncount0_12, ' ')" />
																	</fo:inline>
																	<fo:inline>
																		<xsl:text>PREVIOUS COMPANIES/BUSINESSES</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>										
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="auto" />
											<fo:table-column column-width="100" />
											<fo:table-column column-width="auto" />
											<fo:table-column column-width="70" />
											<fo:table-column column-width="60" />
											<fo:table-column column-width="50" />
											<fo:table-column column-width="50" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														color="#2c2c2c" font-size="8pt" font-style="normal"
														font-variant="normal" font-weight="bold"
														number-columns-spanned="7" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Previous Companies/Businesses Information</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Reg. No./New Reg. No./Reg. Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Companies Name/Status</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Industrial Code/Line Of Business</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Appointment Date/Position</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Cessation Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>No. of Shares</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="1"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>% Shares</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="$XML">
											<xsl:for-each select="Response">
												<xsl:for-each select="Report">
													<xsl:for-each select="Profile">
														<xsl:for-each select="PreviousBusComps">
															<xsl:for-each select="PreviousBusComp">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="auto" />
																	<fo:table-column column-width="100" />
																	<fo:table-column column-width="auto" />
																	<fo:table-column column-width="70" />
																	<fo:table-column column-width="60" />
																	<fo:table-column column-width="50" />
																	<fo:table-column column-width="50" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<!-- Added and Amended by Hafiz (22/06/2015) -->
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block wrap-option="wrap">
																						<fo:inline>
																							<xsl:for-each select="RegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<!-- Added and Amended by wan (14/09/2020) -->
																					<fo:block wrap-option="wrap">
																						<fo:inline>
																							<xsl:for-each select="NewRegNo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block wrap-option="wrap">
																						<fo:inline>
																							<xsl:for-each select="RegDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<!-- End Added and Amended by Hafiz -->
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="RegName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block font-size="6pt">
																						<fo:inline>
																							<xsl:for-each select="Status">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="IndustryCode">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block font-size="8pt">
																						<fo:inline>
																							<xsl:for-each select="IndustryCodeDesc">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<fo:block>
																						<fo:inline>
																							<xsl:for-each select="AppointmentDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																					<fo:block font-size="6pt">
																						<fo:inline>
																							<xsl:for-each select="Position">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="CessationDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="NoOfShares">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="transparent"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="before">
																				<fo:block>
																					<xsl:for-each select="SharePercentage">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>				
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>					
							</xsl:if>
							
							
							
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
							<!-- Individual Report - Previous Company/Business (End) -->	

							<xsl:variable name="sectioncount0_14" select="
									count(Response/ReportAccess[CURRBUSCOMP = 'Y' or PREVBUSCOMP = 'Y']) +
									(1 * $hasSummary) +
									(1 * $hasBothSummaryandLit) +
									(1 * $hasBothINDINFOandCRSADDRINFO) +
									count(Response/ReportAccess/PREVBUSCOMP[. = 'Y'])
								" />	
								<xsl:if test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
							<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
														<fo:block>
															<fo:inline>
																<xsl:value-of select="concat('SECTION ', $sectioncount0_14)"/>
															</fo:inline>
															<fo:inline>
																<xsl:text>: BANKING INFORMATION</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
													</xsl:if>
							<xsl:if test="Response/ReportAccess/SUMMARY  = &apos;Y&apos;">
								<fo:block>&#160;</fo:block>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												number-columns-spanned="1" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													
													<fo:block color="#00008b" font-size="9pt"
														font-weight="bold" height="10px" margin="0px"
														padding="0px" text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:value-of select="concat($sectioncount0_14, '.', $subsectioncount0_1, ' ')" />
															</fo:inline>
															<fo:inline>
																<xsl:text>BANK CREDIT SUMMARY</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<xsl:if test="Response/ReportType  = &apos;ICR-SELF&apos;">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												number-columns-spanned="1" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block font-size="8pt"
														font-style="normal" font-variant="normal"
														font-weight="normal" >
														<fo:block>
															<fo:inline>
																<xsl:text>This section displays summarized information relating to your loan application for the past 12 months and potential &amp; current
																	liabilities arising from credit facilities obtained from banks and financial institutions.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>		
										</xsl:if>											
									</fo:table-body>
								</fo:table>							
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="LoanInfo">
											<xsl:if test="//Response/ReportType  = &apos;ICR-B&apos;">
												<xsl:for-each select="Warning">
													<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="99%" border="solid 1pt gray" border-spacing="2pt">
														<fo:table-column column-width="proportional-column-width(1)"/>
														<fo:table-column column-width="proportional-column-width(1)"/>
														<fo:table-column column-width="proportional-column-width(1)"/>
														<fo:table-column column-width="proportional-column-width(1)"/>
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell background-color="#9edbaf" color="#2c2c2c"  font-size="8pt" font-style="normal" font-variant="normal" font-weight="bold" border="solid 1pt gray" padding="2pt" display-align="center" number-columns-spanned="4">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Status</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Warning</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="left"  text-align="left" number-columns-spanned="3">
																	<fo:block>
																		<xsl:apply-templates/>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
												</xsl:for-each>	
											</xsl:if>										
												<xsl:for-each select="Summary">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table border="0px" color="black" font-size="11px"
														margin="0px" padding="0px" table-layout="fixed" width="100%"
														border-spacing="2pt">
														<fo:table-column column-width="proportional-column-width(1)" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell border="0px" border-style="solid"
																	padding="2pt" display-align="before">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="#9edbaf"
																								color="#2c2c2c" font-size="8pt" font-weight="bold"
																								number-columns-spanned="4" border="solid 1pt gray"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Summary of Loan Applications for the past 12 months</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>No. of Applications</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Total Amount (RM)</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A. Approved in past 12 months</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="ApprovedApp/No">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="ApprovedApp/TotalAmt">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>B. Pending</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="PendingApp/No">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="PendingApp/TotalAmt">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:block>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell border="0px" border-style="solid"
																	number-columns-spanned="1" padding="2pt" display-align="center">
																	<fo:block>
																		<fo:leader leader-pattern="space" />
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell border="0px" border-style="solid"
																	padding="2pt" display-align="before">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="192" />
																					<fo:table-column column-width="120" />
																					<fo:table-column column-width="120" />
																					<fo:table-column column-width="120" />
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="#9edbaf"
																								color="#2c2c2c" font-size="8pt" font-weight="bold"
																								number-columns-spanned="4" border="solid 1pt gray"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Summary of Potential &amp; Current Liabilities</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Outstanding (RM)</xsl:text>
																									</fo:inline>
																								</fo:block>
																								<fo:block font-size="6pt">
																									<fo:inline>
																										<xsl:text>(Exclude FEC)</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Total Limit (RM)</xsl:text>
																									</fo:inline>
																								</fo:block>
																								<fo:block font-size="6pt">
																									<fo:inline>
																										<xsl:text>(Exclude FEC)</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>FEC Limit (RM)</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A. As Borrower</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Borrower/Outstanding">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Borrower/Limit">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Borrower/Fec">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<xsl:if test="//Response/ReportType  != &apos;ICR-SELF&apos;">
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>B. As Guarantor</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Guarantor/Limit">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Guarantor/Fec">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						</xsl:if>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:choose>
																											<xsl:when test="//Response/ReportType  = &apos;ICR-SELF&apos;">
																												<xsl:text>B. Total</xsl:text>	
																											</xsl:when>
																											<xsl:otherwise>
																												<xsl:text>C. Total</xsl:text>																											
																											</xsl:otherwise>
																										</xsl:choose>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Total/Limit">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="Total/Fec">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Legal Action Taken</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" text-align="center" border="solid 1pt gray"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<xsl:for-each select="LegSts">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Special Attention Account</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" text-align="center" border="solid 1pt gray"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<xsl:for-each select="SpecAttn">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text></xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:block>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															
															<fo:table-row>
																<fo:table-cell border="0px" border-style="solid"
																	number-columns-spanned="1" padding="2pt" display-align="center">
																	<fo:block>
																		<fo:leader leader-pattern="space" />
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														
																
														</fo:table-body>
													</fo:table>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								
							</xsl:if>

							<!-- CCRIS Loan Information (Start) -->
							<xsl:if test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
							<fo:block>&#160;</fo:block>
							<fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block color="#00008b" font-size="9pt"
																								font-weight="bold" height="10px" margin="0px"
																								padding="0px" text-align="left">
									<fo:block>
										<fo:inline>
											<xsl:value-of select="concat($sectioncount0_14, '.', $subsectioncount0_2, ' ')" />
										</fo:inline>
										<fo:inline>
											<xsl:text>BANK CREDIT ACCOUNT DETAILS</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
							</fo:block>
							<xsl:if test="//Response/ReportType  = &apos;ICR-SELF&apos;">
								<fo:block font-size="8pt"
										font-style="normal" font-variant="normal"
										font-weight="normal" >
									<fo:block>
										<fo:inline>
											<xsl:text>The following is your bank credit information obtained from the financial institutions in Malaysia with reference to the
											CCRIS database.</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>							
							</xsl:if>								
							<fo:block margin="0pt">
								<fo:block>
									<!-- Individual Report - Loan Info (Start) -->
									<xsl:for-each select="$XML">
										<xsl:for-each select="Response">
											<xsl:for-each select="Report">
												<xsl:for-each select="Profile">
													<xsl:for-each select="LoanInfo">
														<xsl:if test="//Response/ReportType  != &apos;ICR-B&apos;">
															<xsl:for-each select="Warning">
																<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="99.6%" border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="proportional-column-width(1)"/>
																	<fo:table-column column-width="proportional-column-width(1)"/>
																	<fo:table-column column-width="proportional-column-width(1)"/>
																	<fo:table-column column-width="proportional-column-width(1)"/>
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf" color="#2c2c2c"  font-size="8pt" font-style="normal" font-variant="normal" font-weight="bold" border="solid 1pt gray" padding="2pt" display-align="center" number-columns-spanned="4">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Status</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Warning</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="left"  text-align="left" number-columns-spanned="3">
																				<fo:block>
																					<xsl:apply-templates/>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
															</xsl:for-each>	
														</xsl:if>
														<xsl:if test="$XML/Response/ReportAccess/CCRISSUPPL =&apos;Y&apos;">
														<!-- CCRIS Supplementary Information start - Added by Syariffudin 22/11/2016 -->
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf"
																		number-columns-spanned="5" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline font-size="8pt" font-weight="bold">
																				<xsl:text>CCRIS Supplementary Information</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		border="solid 1pt gray" padding="4pt" display-align="center">
																		<fo:block>
																			<fo:inline font-size="x-small" font-style="inherit">
																				<xsl:text>Address</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#e4fae6"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline font-size="x-small" font-style="inherit">
																				<xsl:text>Contact</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#e4fae6"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline font-size="x-small" font-style="inherit">
																				<xsl:text>Employer</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#e4fae6"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline font-size="x-small">
																				<xsl:text>Occupation</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#e4fae6"
																		border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline font-size="x-small">
																				<xsl:text>Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																</fo:table-body>
															</fo:table>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="Profile">
																			<xsl:for-each select="CRSSuppInfos">
																				<xsl:for-each select="CRSSuppInfo">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="x-small" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
																						<fo:table-column column-width="proportional-column-width(1)"/>
																						<fo:table-column column-width="proportional-column-width(1)"/>
																						<fo:table-column column-width="proportional-column-width(1)"/>
																						<fo:table-column column-width="proportional-column-width(1)"/>
																						<fo:table-column column-width="proportional-column-width(1)"/>
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Address start -->
																									<fo:block>
																										<xsl:for-each select="Address"> 
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block font-size="x-small">
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="x-small">
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell> <!-- Address ends -->
																								<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Contact start -->
																									<fo:block>
																										<xsl:for-each select="Contact"> 
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell> <!-- Contact end -->
																								<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Employer start -->
																									<fo:block>
																										<xsl:for-each select="Employer">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell> <!-- Employer end -->
																								<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Occupation start -->
																									<fo:block>
																										<xsl:for-each select="Occupation">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell> <!-- Occupation end -->
																								<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center"> <!-- Date start -->
																									<fo:block>
																										<xsl:for-each select="ReportDate">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block font-size="x-small">
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="x-small">
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block> <!-- Date end -->
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>		
															<fo:block>
																<fo:leader leader-pattern="space"/>
															</fo:block>
														</xsl:if>
														<!-- CCRIS Supplimentary Information end -->
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="12"/>
																<fo:table-column column-width="35"/>
																<fo:table-column column-width="13"/>
																<fo:table-column column-width="27"/>
																<fo:table-column column-width="23"/>
																<fo:table-column column-width="38"/>
																<fo:table-column column-width="43"/>
																<fo:table-column column-width="35"/>
																<fo:table-column column-width="43"/>
																<fo:table-column column-width="30"/>
																<fo:table-column column-width="50"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="10"/>
																<fo:table-column column-width="48"/>
																<fo:table-column column-width="35"/>
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="8pt" font-weight="bold"
																			number-columns-spanned="25" border="solid 1pt gray"
																			padding="2pt" height="18" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Loan Information</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<!-- <xsl:text>Date   / R&amp;R Date</xsl:text> -->
																					<xsl:text>Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Sts</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Capacity</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:choose>
																					<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																						<xsl:text>Lender</xsl:text>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:text>Lender Type</xsl:text>
																					</xsl:otherwise>
																					</xsl:choose>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Facility/ App Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Total Outstanding Balance (RM)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Date Balance Updated</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Limit / Instl Amt (RM)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Prin. Repmt. Term</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Col Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" number-columns-spanned="12"
																			border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Conduct Of Account For Last 12 Months</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>LGL STS</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#9edbaf"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-weight="normal">
																					<xsl:text>Date Status Updated</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" number-columns-spanned="11"
																			border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block />
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			border="0px" font-size="6pt" font-style="normal"
																			font-variant="normal" font-weight="normal"
																			number-columns-spanned="10" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlYr">
																					<xsl:for-each select="Y1">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			border="0px" font-size="6pt" font-style="normal"
																			font-variant="normal" font-weight="normal"
																			number-columns-spanned="2" padding="2pt" text-align="right"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlYr">
																					<xsl:for-each select="Y2">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block />
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block />
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" number-columns-spanned="11"
																			border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Outstanding Credit</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M1">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M2">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M3">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M4">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M5">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M6">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M7">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M8">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M9">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M10">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M11">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InstlMth">
																					<xsl:for-each select="M12">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block />
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="6pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block />
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
									<!-- Individual Report - Loan Info (End) -->
								</fo:block>
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							</xsl:if>									
							<fo:block margin="0pt">
								<fo:block>
									<!-- Individual Report - Loan Info - Accounts (Start) -->
									<xsl:for-each select="$XML">
										<xsl:for-each select="Response">
											<xsl:for-each select="Report">
												<xsl:for-each select="Profile">
													<xsl:for-each select="LoanInfo">
														<xsl:for-each select="Accounts">
															<xsl:for-each select="Account">
																<fo:block />
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:table color="black" font-size="11px"
																			margin="0px" padding="0px" table-layout="fixed"
																			width="100%" border="solid 1pt gray" border-spacing="2pt">
																			<fo:table-column column-width="12"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="13"/>
																			<fo:table-column column-width="27"/>
																			<fo:table-column column-width="23"/>
																			<fo:table-column column-width="38"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="30"/>
																			<fo:table-column column-width="50"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="48"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-body start-indent="0pt">
																				<fo:table-row>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="No">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="ApprovedDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Capacity">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:choose>
																							<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos; ">
																								<xsl:for-each select="Lender">																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<xsl:for-each select="LenderType">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:otherwise>
																							</xsl:choose>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" text-align="right" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Limit">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="MColTyp">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																						<xsl:for-each select="SubAccs">
																							<xsl:for-each select="SubAcc">
																									<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																									<xsl:if test="$count > 2">
																										<xsl:attribute name="background-color">red</xsl:attribute>
																										<xsl:attribute name="color">white</xsl:attribute>
																									</xsl:if>
																							</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="LegSts">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="SubAccs">
																							<xsl:for-each select="SubAcc">
																									<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																									<xsl:if test="$count > 2">
																										<xsl:attribute name="background-color">red</xsl:attribute>
																										<xsl:attribute name="color">white</xsl:attribute>
																									</xsl:if>
																							</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="LegDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																	</fo:block>
																</fo:block>
																<xsl:for-each select="MCols">
																	<xsl:for-each select="MCol">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="12"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="13"/>
																					<fo:table-column column-width="27"/>
																					<fo:table-column column-width="23"/>
																					<fo:table-column column-width="38"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="30"/>
																					<fo:table-column column-width="50"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="48"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								text-align="right" display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="MColTyp">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:block>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="SubAccs">
																	<xsl:for-each select="SubAcc">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="12"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="13"/>
																					<fo:table-column column-width="27"/>
																					<fo:table-column column-width="23"/>
																					<fo:table-column column-width="38"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="30"/>
																					<fo:table-column column-width="50"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="48"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																								<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																									<xsl:if test="$count > 2">
																										<xsl:attribute name="background-color">red</xsl:attribute>
																										<xsl:attribute name="color">white</xsl:attribute>
																									</xsl:if>
																									<xsl:choose>
																									<xsl:when test="not(ReschDat= '') and not(RestrucDat= '')">
																										<xsl:choose>
																										<xsl:when test="concat(substring(ReschDat,7,4),substring(ReschDat,4,2),substring(ReschDat,1,2)) &lt; concat(substring(RestrucDat,7,4),substring(RestrucDat,4,2),substring(RestrucDat,1,2))">
																											<fo:block>
																												<xsl:value-of select="ReschDat"/>
																											</fo:block>																																	
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:block>
																												<xsl:value-of select="RestrucDat"/>
																											</fo:block>
																										</xsl:otherwise>
																										</xsl:choose>
																									</xsl:when>
																									<xsl:when test="not(ReschDat= '')">
																										<fo:block>
																											<xsl:value-of select="ReschDat"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																									<fo:block>
																										<xsl:value-of select="RestrucDat"/>
																									</fo:block>
																									</xsl:otherwise>
																									</xsl:choose>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="AccSts">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:choose>
																									<xsl:when test="//Response/ReportAccess/FACTYP = &apos;D&apos; or //Response/ReportType  = &apos;ICR-SELF&apos;">
																										<xsl:for-each select="FacilityDescription">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<xsl:for-each select="Facility">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:otherwise>
																									</xsl:choose>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								text-align="right" display-align="center">
																								<fo:block>
																									<xsl:for-each select="TotalOutstanding">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="CrPosDate">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center" text-align="right">
																								<fo:block>
																									<xsl:value-of select="InstlAmt"/>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="RepayTerm">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="SColTyp">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M1">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M2">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M3">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M4">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M5">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M6">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M7">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M8">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M9">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M10">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M11">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M12">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:block>
																		<xsl:for-each select="SCols">
																			<xsl:for-each select="SCol">
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																						<fo:table-column column-width="12"/>
																						<fo:table-column column-width="35"/>
																						<fo:table-column column-width="13"/>
																						<fo:table-column column-width="27"/>
																						<fo:table-column column-width="23"/>
																						<fo:table-column column-width="38"/>
																						<fo:table-column column-width="43"/>
																						<fo:table-column column-width="35"/>
																						<fo:table-column column-width="43"/>
																						<fo:table-column column-width="30"/>
																						<fo:table-column column-width="50"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="10"/>
																						<fo:table-column column-width="48"/>
																						<fo:table-column column-width="35"/>
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										text-align="right" display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="SColTyp">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</fo:block>
																				</fo:block>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block />
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<xsl:if
															test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px"
																		margin="0px" padding="0px" table-layout="fixed" width="100%"
																		border="solid 1pt gray" border-spacing="2pt">
																		<fo:table-column column-width="12"/>
																		<fo:table-column column-width="35"/>
																		<fo:table-column column-width="13"/>
																		<fo:table-column column-width="27"/>
																		<fo:table-column column-width="23"/>
																		<fo:table-column column-width="38"/>
																		<fo:table-column column-width="43"/>
																		<fo:table-column column-width="35"/>
																		<fo:table-column column-width="43"/>
																		<fo:table-column column-width="30"/>
																		<fo:table-column column-width="50"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="48"/>
																		<fo:table-column column-width="35"/>
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Total Outstanding Balance:</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" text-align="right" display-align="center">
																					<fo:block>
																						<xsl:for-each select="TotalBal">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Total Limit:</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" text-align="right" display-align="center">
																					<fo:block>
																						<xsl:for-each select="TotalLimit">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																</fo:block>
															</fo:block>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
									<!-- Individual Report - Loan Info - Accounts (End) -->
									<xsl:for-each select="$XML">
										<xsl:for-each select="Response">
											<xsl:for-each select="Report">
												<xsl:for-each select="SMEProfile">
													<xsl:for-each select="LoanInfo">
														<xsl:for-each select="Accounts">
															<xsl:for-each select="Account">
																<fo:block />
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:table color="black" font-size="11px"
																			margin="0px" padding="0px" table-layout="fixed"
																			width="100%" border="solid 1pt gray" border-spacing="2pt">
																			<fo:table-column column-width="12"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="13"/>
																			<fo:table-column column-width="27"/>
																			<fo:table-column column-width="23"/>
																			<fo:table-column column-width="38"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="30"/>
																			<fo:table-column column-width="50"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="48"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-body start-indent="0pt">
																				<fo:table-row>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="No">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="ApprovedDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Capacity">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:choose>
																							<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																								<xsl:for-each select="Lender">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<xsl:for-each select="LenderType">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:otherwise>
																							</xsl:choose>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" text-align="right" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Limit">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="MColTyp">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																						<xsl:for-each select="SubAccs">
																							<xsl:for-each select="SubAcc">
																									<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																									<xsl:if test="$count > 2">
																										<xsl:attribute name="background-color">red</xsl:attribute>
																										<xsl:attribute name="color">white</xsl:attribute>
																									</xsl:if>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="LegSts">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="SubAccs">
																							<xsl:for-each select="SubAcc">
																									<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																									<xsl:if test="$count > 2">
																										<xsl:attribute name="background-color">red</xsl:attribute>
																										<xsl:attribute name="color">white</xsl:attribute>
																									</xsl:if>
																								</xsl:for-each>
																							</xsl:for-each>
																							<xsl:for-each select="LegDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																	</fo:block>
																</fo:block>
																<xsl:for-each select="MCols">
																	<xsl:for-each select="MCol">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="12"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="13"/>
																					<fo:table-column column-width="27"/>
																					<fo:table-column column-width="23"/>
																					<fo:table-column column-width="38"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="30"/>
																					<fo:table-column column-width="50"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="48"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								text-align="right" display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="MColTyp">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:block>
																	</xsl:for-each>
																</xsl:for-each>
																<xsl:for-each select="SubAccs">
																	<xsl:for-each select="SubAcc">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="12"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="13"/>
																					<fo:table-column column-width="27"/>
																					<fo:table-column column-width="23"/>
																					<fo:table-column column-width="38"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-column column-width="43"/>
																					<fo:table-column column-width="30"/>
																					<fo:table-column column-width="50"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="10"/>
																					<fo:table-column column-width="48"/>
																					<fo:table-column column-width="35"/>
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																								<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																									<xsl:if test="$count > 2">
																										<xsl:attribute name="background-color">red</xsl:attribute>
																										<xsl:attribute name="color">white</xsl:attribute>
																									</xsl:if>
																									<xsl:choose>
																									<xsl:when test="not(ReschDat= '') and not(RestrucDat= '')">
																										<xsl:choose>
																										<xsl:when test="concat(substring(ReschDat,7,4),substring(ReschDat,4,2),substring(ReschDat,1,2)) &lt; concat(substring(RestrucDat,7,4),substring(RestrucDat,4,2),substring(RestrucDat,1,2))">
																											<fo:block>
																												<xsl:value-of select="ReschDat"/>
																											</fo:block>																																	
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:block>
																												<xsl:value-of select="RestrucDat"/>
																											</fo:block>
																										</xsl:otherwise>
																										</xsl:choose>
																									</xsl:when>
																									<xsl:when test="not(ReschDat= '')">
																										<fo:block>
																											<xsl:value-of select="ReschDat"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																									<fo:block>
																										<xsl:value-of select="RestrucDat"/>
																									</fo:block>
																									</xsl:otherwise>
																									</xsl:choose>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="AccSts">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:choose>
																									<xsl:when test="//Response/ReportAccess/FACTYP = &apos;D&apos; or //Response/ReportType  = &apos;ICR-SELF&apos;">
																										<xsl:for-each select="FacilityDescription">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<xsl:for-each select="Facility">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:otherwise>
																									</xsl:choose>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								text-align="right" display-align="center">
																								<fo:block>
																									<xsl:for-each select="TotalOutstanding">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="CrPosDate">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:value-of select="InstlAmt"/>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="RepayTerm">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="SColTyp">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M1">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M2">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M3">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M4">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M5">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M6">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M7">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M8">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M9">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M10">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M11">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="5pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="0pt"
																								display-align="center" text-align="center">
																								<fo:block>
																									<xsl:for-each select="InstlArr">
																										<xsl:for-each select="M12">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:if test="$value-of-template &gt; 1">
																												<xsl:attribute name="background-color">red</xsl:attribute>
																												<xsl:attribute name="color">white</xsl:attribute>
																											</xsl:if>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																							<fo:table-cell background-color="white"
																								font-size="6pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block />
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:block>
																		<xsl:for-each select="SCols">
																			<xsl:for-each select="SCol">
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="12"/>
																							<fo:table-column column-width="35"/>
																							<fo:table-column column-width="13"/>
																							<fo:table-column column-width="27"/>
																							<fo:table-column column-width="23"/>
																							<fo:table-column column-width="38"/>
																							<fo:table-column column-width="43"/>
																							<fo:table-column column-width="35"/>
																							<fo:table-column column-width="43"/>
																							<fo:table-column column-width="30"/>
																							<fo:table-column column-width="50"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="48"/>
																							<fo:table-column column-width="35"/>
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										text-align="right" display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="SColTyp">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</fo:block>
																				</fo:block>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block />
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<xsl:if
															test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px"
																		margin="0px" padding="0px" table-layout="fixed" width="100%"
																		border="solid 1pt gray" border-spacing="2pt">
																		<fo:table-column column-width="12"/>
																		<fo:table-column column-width="35"/>
																		<fo:table-column column-width="13"/>
																		<fo:table-column column-width="27"/>
																		<fo:table-column column-width="23"/>
																		<fo:table-column column-width="38"/>
																		<fo:table-column column-width="43"/>
																		<fo:table-column column-width="35"/>
																		<fo:table-column column-width="43"/>
																		<fo:table-column column-width="30"/>
																		<fo:table-column column-width="50"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="10"/>
																		<fo:table-column column-width="48"/>
																		<fo:table-column column-width="35"/>
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Total Outstanding Balance:</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" text-align="right" display-align="center">
																					<fo:block>
																						<xsl:for-each select="TotalBal">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Total Limit:</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" text-align="right" display-align="center">
																					<fo:block>
																						<xsl:for-each select="TotalLimit">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																				<fo:table-cell background-color="white"
																					font-size="6pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block />
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																</fo:block>
															</fo:block>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<xsl:if test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="349"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="48"/>
											<fo:table-column column-width="35"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="6pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Special Attention Account</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</fo:block>
								</fo:block>
								<!-- Individual Report - Loan Info - Spec Attn Accounts (Start) -->
							</xsl:if>
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="LoanInfo">
												<xsl:for-each select="SpecAttnAccs">
													<xsl:for-each select="SpecAttnAcc">
														<fo:block />
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="12"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="13"/>
																	<fo:table-column column-width="27"/>
																	<fo:table-column column-width="23"/>
																	<fo:table-column column-width="38"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="30"/>
																	<fo:table-column column-width="50"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="48"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="No">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="ApprovedDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Capacity">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:choose>
																					<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																						<xsl:for-each select="Lender">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:for-each select="LenderType">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:otherwise>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:choose>
																					<xsl:when test="//Response/ReportAccess/FACTYP = &apos;D&apos; or //Response/ReportType  = &apos;ICR-SELF&apos;">
																						<xsl:for-each select="FacilityDescription">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:for-each select="Facility">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:otherwise>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="CrPosDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="LegSts">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="LegDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
														<xsl:for-each select="Facilities">
															<xsl:for-each select="Facility">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:table color="black" font-size="11px"
																			margin="0px" padding="0px" table-layout="fixed"
																			width="100%" border="solid 1pt gray" border-spacing="2pt">
																			<fo:table-column column-width="12"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="13"/>
																			<fo:table-column column-width="27"/>
																			<fo:table-column column-width="23"/>
																			<fo:table-column column-width="38"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="30"/>
																			<fo:table-column column-width="50"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="48"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-body start-indent="0pt">
																				<fo:table-row>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="val">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" text-align="right" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="date">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																	</fo:block>
																</fo:block>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<!-- Individual Report - Loan Info - Spec Attn Accounts (End) -->
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="SMEProfile">
											<xsl:for-each select="LoanInfo">
												<xsl:for-each select="SpecAttnAccs">
													<xsl:for-each select="SpecAttnAcc">
														<fo:block />
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="12"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="13"/>
																	<fo:table-column column-width="27"/>
																	<fo:table-column column-width="23"/>
																	<fo:table-column column-width="38"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="30"/>
																	<fo:table-column column-width="50"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="48"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="No">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="ApprovedDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Capacity">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:choose>
																					<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">			
																						<xsl:for-each select="Lender">																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:for-each select="LenderType">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:otherwise>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:choose>
																					<xsl:when test="//Response/ReportAccess/FACTYP = &apos;D&apos; or //Response/ReportType  = &apos;ICR-SELF&apos;">
																						<xsl:for-each select="FacilityDescription">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:for-each select="Facility">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:otherwise>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="CrPosDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="LegSts">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="LegDate">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
														<xsl:for-each select="Facilities">
															<xsl:for-each select="Facility">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:table color="black" font-size="11px"
																			margin="0px" padding="0px" table-layout="fixed"
																			width="100%" border="solid 1pt gray" border-spacing="2pt">
																			<fo:table-column column-width="12"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="13"/>
																			<fo:table-column column-width="27"/>
																			<fo:table-column column-width="23"/>
																			<fo:table-column column-width="38"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-column column-width="43"/>
																			<fo:table-column column-width="30"/>
																			<fo:table-column column-width="50"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="10"/>
																			<fo:table-column column-width="48"/>
																			<fo:table-column column-width="35"/>
																			<fo:table-body start-indent="0pt">
																				<fo:table-row>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="val">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" text-align="right" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="date">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																					<fo:table-cell background-color="white"
																						font-size="6pt" font-style="normal" font-variant="normal"
																						font-weight="normal" border="solid 1pt gray"
																						padding="2pt" display-align="center">
																						<fo:block />
																					</fo:table-cell>
																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																	</fo:block>
																</fo:block>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<xsl:if test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="349"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="48"/>
											<fo:table-column column-width="35"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="6pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Credit Application</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</fo:block>
								</fo:block>
							</xsl:if>
							<!-- Individual Report - Loan Info - Application (Start) -->
							<xsl:if test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="LoanInfo">
												<xsl:for-each select="Applications">
													<xsl:for-each select="Application">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="12"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="13"/>
																	<fo:table-column column-width="27"/>
																	<fo:table-column column-width="23"/>
																	<fo:table-column column-width="38"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="30"/>
																	<fo:table-column column-width="50"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="48"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="No">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Date">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Sts">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Capacity">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:choose>
																					<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">	
																						<xsl:for-each select="Lender">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:for-each select="LenderType">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:otherwise>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:value-of select="AppTyp" />
																				</fo:block>	
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="AmtAppl">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<!--Sem 26/10/2017-->							
																										<fo:block>
																												<xsl:for-each select="Facility">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates/>
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template"/>
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template"/>
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>																								
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block/>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Property Address:</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" number-columns-spanned="8" display-align="center">
																										<fo:block>
																											<xsl:for-each select="PropertyAddress">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>																								
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Property Status:</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" number-columns-spanned="14" display-align="center">
																										<fo:block>
																											<xsl:for-each select="PropertyStatus">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>																								
																										</fo:block>
																									</fo:table-cell>																		
																		</fo:table-row>	
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								<fo:block>
									<fo:leader leader-pattern="space" />															
								</fo:block>								
							</xsl:for-each>
							</xsl:if>
							<xsl:if test="$XML/Response/ReportAccess/LOANINFO =&apos;Y&apos;">
								<xsl:if test="$XML/Response/Report/Profile/LoanInfo/Accounts/Account/SubAccs/SubAcc/Facility/text() or $XML/Response/Report/SMEProfile/LoanInfo/Accounts/Account/SubAccs/SubAcc/AccSts/text() or $XML/Response/Report/SMEProfile/LoanInfo/Accounts/Account/LegSts/text()">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0px" color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
															<fo:table-column column-width="176"/>
															<fo:table-column column-width="228"/>
															<fo:table-column column-width="148"/>
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf" color="#2c2c2c" font-size="8pt" font-style="normal" font-variant="normal" font-weight="bold" number-columns-spanned="3" border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>REMARK LEGEND</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>FACILITY</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>STATUS</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>LEGAL STATUS</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
														<xsl:for-each select="$XML">
															<xsl:for-each select="Response">
																<xsl:for-each select="Report">
																	<xsl:for-each select="Profile">
																		<xsl:for-each select="LoanInfo">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
																						<fo:table-column column-width="176"/>
																						<fo:table-column column-width="228"/>
																						<fo:table-column column-width="148"/>
																						<fo:table-body start-indent="0pt">
																						<xsl:for-each select="Accounts">
																							<fo:table-row>
																										<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																											<fo:block>
																											<xsl:key name="uniqueFacility" match="SubAcc/Facility" use="."/>
																												<xsl:for-each select="Account/SubAccs/SubAcc/Facility[generate-id() = generate-id(key('uniqueFacility', .)[1])]" >
																													<xsl:variable name="value-of-template" select=".">
																													</xsl:variable>
																													<xsl:apply-templates/>
																													<xsl:choose>
																														<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template"/>
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																															
																																<xsl:copy-of select="$value-of-template"/>
																																<xsl:choose>
																																  <xsl:when test="$value-of-template =&apos;BANKACCP&apos;">
																																	<xsl:text> - Banker acceptances</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BACUSEXP&apos;">
																																	<xsl:text> - Banker acceptances - export, customer liabilities</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BAOWNEXP&apos;">
																																	<xsl:text> - Banker acceptances - export, own bills discounted</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BACUSIMP&apos;">
																																	<xsl:text> - Banker acceptances - import, customer liabilities</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BAOWNIMP&apos;">
																																	<xsl:text> - Banker acceptances - import, own bills discounted</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BACUSPCH&apos;">
																																	<xsl:text> - Banker acceptances - purchase/sales, customer liabilities</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BAOWNPCH&apos;">
																																	<xsl:text> - Banker acceptances - purchase/sales, own bills discounted</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;ISBENECT&apos;">
																																	<xsl:text> - Benevolent credit</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BLOKDNSG&apos;">
																																	<xsl:text> - Block discounting for non-scheduled goods</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BLOKDSCG&apos;">
																																	<xsl:text> - Block discounting for scheduled goods</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BLOKDREC&apos;">
																																	<xsl:text> - Block discounting receivables</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BRLNFNCE&apos;">
																																	<xsl:text> - Bridging loans/financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;CHRGCARD&apos;">
																																	<xsl:text> - Charge Card</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BRIDGING&apos;">
																																	<xsl:text> - Construction bridging loan/finance</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;CRDTCARD&apos;">
																																	<xsl:text> - Credit Card</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;DMBLPCHD&apos;">
																																	<xsl:text> - Domestic bills purchased</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;ISEQYFNG&apos;">
																																	<xsl:text> - Equity financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;EXPCRDRE&apos;">
																																	<xsl:text> - Export credit refinancing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FACTORNG&apos;">
																																	<xsl:text> - Factoring</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FNGNTRDE&apos;">
																																	<xsl:text> - Financial guarantee - Non-Trade</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FNGTRADE&apos;">
																																	<xsl:text> - Financial guarantee - Trade</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FNINSOFN&apos;">
																																	<xsl:text> - Financial institution own fund</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FLRSTCKG&apos;">
																																	<xsl:text> - Floor stocking</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FGBLPCHD&apos;">
																																	<xsl:text> - Foreign bills purchased</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FWFGNECH&apos;">
																																	<xsl:text> - Forward foreign exchange</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;HRPCNSCG&apos;">
																																	<xsl:text> - Hire purchase for non-scheduled goods</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;HRPCSCGD&apos;">
																																	<xsl:text> - Hire purchase for scheduled goods</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;HSLNFNCE&apos;">
																																	<xsl:text> - Housing loans/Financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;LEASING&apos;">
																																	<xsl:text> - Leasing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;LTCREDIT&apos;">
																																	<xsl:text> - Letter of credit</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;LOANSTCK&apos;">
																																	<xsl:text> - Loan stock (arising from restructuring)</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;MICROEFN&apos;">
																																	<xsl:text> - Micro enterprise fund</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;MUOPTFAC&apos;">
																																	<xsl:text> - Multi-option facility</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;HLFNNNPS&apos;">
																																	<xsl:text> - Non-priority housing loan/finance</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OHRPCREC&apos;">
																																	<xsl:text> - Other hire purchase receivables</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OTHLNFIN&apos;">
																																	<xsl:text> - Other loans/financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OTSHTFAC&apos;">
																																	<xsl:text> - Other off-balance sheet facilities</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OTLNFNCE&apos;">
																																	<xsl:text> - Other term loan/finance (include personal loan/finance)</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OTTRDDIS&apos;">
																																	<xsl:text> - Other trade bills discounted</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OTHTRFAC&apos;">
																																	<xsl:text> - Other trade facilities</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OPCQPCHD&apos;">
																																	<xsl:text> - Outport Cheque Purchased</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OVRDRAFT&apos;">
																																	<xsl:text> - Overdraft</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;ISPWNBKG&apos;">
																																	<xsl:text> - Pawnbroking</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;PGRANTEE&apos;">
																																	<xsl:text> - Performance guarantee</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;PELNFNCE&apos;">
																																	<xsl:text> - Personal loans/financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;POSHPECR&apos;">
																																	<xsl:text> - Post-shipment ECR</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;PRESHPCR&apos;">
																																	<xsl:text> - Pre-shipment ECR</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;HLFNPRSR&apos;">
																																	<xsl:text> - Priority sector housing loan/finance</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;ISPJTFNG&apos;">
																																	<xsl:text> - Project financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;PCPASCAR&apos;">
																																	<xsl:text> - Purchase of passenger cars</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;RVVGCRDT&apos;">
																																	<xsl:text> - Revolving Credit</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;SHMARGIN&apos;">
																																	<xsl:text> - Share margin facility</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;SHPGRTEE&apos;">
																																	<xsl:text> - Shipping guarantee</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;STLNFNCE&apos;">
																																	<xsl:text> - Staff loan/finance</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;SBLTCRDT&apos;">
																																	<xsl:text> - Standby Letter of Credit</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;TEMPOVDT&apos;">
																																	<xsl:text> - Temporary Overdraft</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;Test&apos;">
																																	<xsl:text> - Test New Facility Type</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;TFWORECO&apos;">
																																	<xsl:text> - Trade Finance without recourse</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;TRECEIPT&apos;">
																																	<xsl:text> - Trust receipts</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;OTTRDFAC&apos;">
																																	<xsl:text> - Other Trade Facilities</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;N/A&apos;">
																																	<xsl:text> - Not Available</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FFETRADE&apos;">
																																	<xsl:text> - FFE Trade</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;ISBENECT&apos;">
																																	<xsl:text> - Benevolent credit (other Islamic financing)</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;PELNFNSA&apos;">
																																	<xsl:text> - Personal loans/financing support facility (FSA 2)</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;SBLTTRDE&apos;">
																																	<xsl:text> - SL Trade</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;SBLTNTRD&apos;">
																																	<xsl:text> - SL Non-trade</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FFENTRIA&apos;">
																																	<xsl:text> - FFE Acquisition</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FFENTRID&apos;">
																																	<xsl:text> - FFE Divestment</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FFENTRBD&apos;">
																																	<xsl:text> - FFE Drawdown</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FFENTRBR&apos;">
																																	<xsl:text> - FFE Repayment</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;FFENTROT&apos;">
																																	<xsl:text> - FFE Others</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;BUYNPAYL&apos;">
																																	<xsl:text> - Buy Now Pay Later</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;UNPROCRE&apos;">
																																	<xsl:text> - Unreturned Provisional Credit</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;CONTRFIN&apos;">
																																	<xsl:text> - Contract Financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;INVOIFIN&apos;">
																																	<xsl:text> - Invoice Financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;NHEFNCE&apos;">
																																	<xsl:text> - National Higher Education Financing</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:otherwise>
																																	<xsl:text> </xsl:text>
																																  </xsl:otherwise>
																																</xsl:choose>
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																											<fo:block>
																											<xsl:key name="uniqueAccSts" match="SubAcc/AccSts" use="."/>
																												<xsl:for-each select="Account/SubAccs/SubAcc/AccSts[generate-id() = generate-id(key('uniqueAccSts', .)[1])]">
																													<xsl:variable name="value-of-template" select=".">
																													</xsl:variable>
																													<xsl:apply-templates/>
																													<xsl:choose>
																														<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template"/>
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template"/>
																																<xsl:choose>
																																  <xsl:when test="$value-of-template =&apos;O&apos;">
																																	<xsl:text> - Outstanding</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;K&apos;">
																																	<xsl:text> - Account with AKPK</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;F&apos;">
																																	<xsl:text> - FRAUDULENT ACCOUNT</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;G&apos;">
																																	<xsl:text> - Outstanding from call of guarantee/standby LC</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;P&apos;">
																																	<xsl:text> - Partial Written-off/Written-down</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;C&apos;">
																																	<xsl:text> - Rescheduled credit facility</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;T&apos;">
																																	<xsl:text> - Restructured credit facility</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;S&apos;">
																																	<xsl:text> - Settled</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;W&apos;">
																																	<xsl:text> - Written-off</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;J&apos;">
																																	<xsl:text> - Loan under Repayment Assistance Programme (RAP) by AKPK</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:when test="$value-of-template =&apos;L&apos;">
																																	<xsl:text> - Impaired Loan/Financing Sold to Third Party</xsl:text>
																																	<xsl:text>&#x2029;</xsl:text>
																																  </xsl:when>
																																  <xsl:otherwise>
																																	<xsl:text> </xsl:text>
																																  </xsl:otherwise>
																																</xsl:choose>
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																								<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																									<fo:block>
																									<xsl:key name="uniqueLegSts" match="LegSts" use="."/>
																										<xsl:for-each select="Account/LegSts[generate-id() = generate-id(key('uniqueLegSts', .)[1])]">
																											<xsl:variable name="value-of-template" select=".">
																											</xsl:variable>
																											<xsl:apply-templates/>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template"/>
																														<xsl:choose>
																														  <xsl:when test="$value-of-template =&apos;Auction&apos;">
																															<xsl:text> - Auction</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Bankruptcy&apos;">
																															<xsl:text> - Bankruptcy</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Chrg ordr&apos;">
																															<xsl:text> - Charging order</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Garnshe ordr&apos;">
																															<xsl:text> - Garnishee order</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Jdgmt debtr sum&apos;">
																															<xsl:text> - Judgement debtor summon</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Jdgmtord/ordsal&apos;">
																															<xsl:text> - Judgement order/Order of sale</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Prohib ordr&apos;">
																															<xsl:text> - Prohibitor order</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Recvr/sec176&apos;">
																															<xsl:text> - Receiver/Section 176</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Settd/dischged&apos;">
																															<xsl:text> - Settled/Discharged</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Sumn/writ files&apos;">
																															<xsl:text> - Summon/Writ files</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template =&apos;Winding up&apos;">
																															<xsl:text> - Winding up</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:when test="$value-of-template ='Wrt of seiz&amp;sal'">
																															<xsl:text> - Writ of seizure and sale</xsl:text>
																															<xsl:text>&#x2029;</xsl:text>
																														  </xsl:when>
																														  <xsl:otherwise>
																															<xsl:text> </xsl:text>
																														  </xsl:otherwise>
																														</xsl:choose>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</xsl:for-each> 
																					<xsl:variable name="existingFacilities" select="Applications/Application/Facility" />
																						<xsl:variable name="existingFacilities2" select="SpecAttnAccs/SpecAttnAcc/Facility" />
																						<xsl:variable name="existingFacilities3" select="Accounts/Account/SubAccs/SubAcc/Facility" />
																						
																						<xsl:variable name="existingLegSts" select="Accounts/Account/LegSts"/>
																						
																						<xsl:variable name="allFacilitiesSame" select="count(SpecAttnAccs/SpecAttnAcc/Facility[not(. = $existingFacilities)]) = 0" />
																						<xsl:variable name="allFacilitiesSame2" select="count(SpecAttnAccs/SpecAttnAcc/Facility[not(. = $existingFacilities3)]) = 0" />
																						
																						<xsl:variable name="allLegStsSame" select="count(SpecAttnAccs/SpecAttnAcc/LegSts[not(. = $existingLegSts)]) = 0" />
																						<xsl:if test="(SpecAttnAccs/SpecAttnAcc/Facility/text() and not($allFacilitiesSame2)) or (SpecAttnAccs/SpecAttnAcc/LegSts/text() and not($allLegStsSame))">
																							<xsl:for-each select="SpecAttnAccs">
																								<fo:table-row>
																											<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:key name="uniqueFacility" match="SpecAttnAcc/Facility" use="."/>
																													<xsl:for-each select="SpecAttnAcc/Facility[generate-id() = generate-id(key('uniqueFacility', .)[1])]" >
																														<xsl:variable name="value-of-template" select=".">
																														</xsl:variable>
																														<xsl:apply-templates/>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																
																																	<xsl:copy-of select="$value-of-template"/>
																																	<xsl:choose>
																																	  <xsl:when test="$value-of-template =&apos;BANKACCP&apos;">
																																		<xsl:text> - Banker acceptances</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BACUSEXP&apos;">
																																		<xsl:text> - Banker acceptances - export, customer liabilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BAOWNEXP&apos;">
																																		<xsl:text> - Banker acceptances - export, own bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BACUSIMP&apos;">
																																		<xsl:text> - Banker acceptances - import, customer liabilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BAOWNIMP&apos;">
																																		<xsl:text> - Banker acceptances - import, own bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BACUSPCH&apos;">
																																		<xsl:text> - Banker acceptances - purchase/sales, customer liabilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BAOWNPCH&apos;">
																																		<xsl:text> - Banker acceptances - purchase/sales, own bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISBENECT&apos;">
																																		<xsl:text> - Benevolent credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BLOKDNSG&apos;">
																																		<xsl:text> - Block discounting for non-scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BLOKDSCG&apos;">
																																		<xsl:text> - Block discounting for scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BLOKDREC&apos;">
																																		<xsl:text> - Block discounting receivables</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BRLNFNCE&apos;">
																																		<xsl:text> - Bridging loans/financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;CHRGCARD&apos;">
																																		<xsl:text> - Charge Card</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BRIDGING&apos;">
																																		<xsl:text> - Construction bridging loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;CRDTCARD&apos;">
																																		<xsl:text> - Credit Card</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;DMBLPCHD&apos;">
																																		<xsl:text> - Domestic bills purchased</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISEQYFNG&apos;">
																																		<xsl:text> - Equity financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;EXPCRDRE&apos;">
																																		<xsl:text> - Export credit refinancing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FACTORNG&apos;">
																																		<xsl:text> - Factoring</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FNGNTRDE&apos;">
																																		<xsl:text> - Financial guarantee - Non-Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FNGTRADE&apos;">
																																		<xsl:text> - Financial guarantee - Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FNINSOFN&apos;">
																																		<xsl:text> - Financial institution own fund</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FLRSTCKG&apos;">
																																		<xsl:text> - Floor stocking</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FGBLPCHD&apos;">
																																		<xsl:text> - Foreign bills purchased</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FWFGNECH&apos;">
																																		<xsl:text> - Forward foreign exchange</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HRPCNSCG&apos;">
																																		<xsl:text> - Hire purchase for non-scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HRPCSCGD&apos;">
																																		<xsl:text> - Hire purchase for scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HSLNFNCE&apos;">
																																		<xsl:text> - Housing loans/Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;LEASING&apos;">
																																		<xsl:text> - Leasing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;LTCREDIT&apos;">
																																		<xsl:text> - Letter of credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;LOANSTCK&apos;">
																																		<xsl:text> - Loan stock (arising from restructuring)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;MICROEFN&apos;">
																																		<xsl:text> - Micro enterprise fund</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;MUOPTFAC&apos;">
																																		<xsl:text> - Multi-option facility</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HLFNNNPS&apos;">
																																		<xsl:text> - Non-priority housing loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OHRPCREC&apos;">
																																		<xsl:text> - Other hire purchase receivables</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTHLNFIN&apos;">
																																		<xsl:text> - Other loans/financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTSHTFAC&apos;">
																																		<xsl:text> - Other off-balance sheet facilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTLNFNCE&apos;">
																																		<xsl:text> - Other term loan/finance (include personal loan/finance)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTTRDDIS&apos;">
																																		<xsl:text> - Other trade bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTHTRFAC&apos;">
																																		<xsl:text> - Other trade facilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OPCQPCHD&apos;">
																																		<xsl:text> - Outport Cheque Purchased</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OVRDRAFT&apos;">
																																		<xsl:text> - Overdraft</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISPWNBKG&apos;">
																																		<xsl:text> - Pawnbroking</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PGRANTEE&apos;">
																																		<xsl:text> - Performance guarantee</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PELNFNCE&apos;">
																																		<xsl:text> - Personal loans/financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;POSHPECR&apos;">
																																		<xsl:text> - Post-shipment ECR</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PRESHPCR&apos;">
																																		<xsl:text> - Pre-shipment ECR</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HLFNPRSR&apos;">
																																		<xsl:text> - Priority sector housing loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISPJTFNG&apos;">
																																		<xsl:text> - Project financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PCPASCAR&apos;">
																																		<xsl:text> - Purchase of passenger cars</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;RVVGCRDT&apos;">
																																		<xsl:text> - Revolving Credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SHMARGIN&apos;">
																																		<xsl:text> - Share margin facility</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SHPGRTEE&apos;">
																																		<xsl:text> - Shipping guarantee</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;STLNFNCE&apos;">
																																		<xsl:text> - Staff loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SBLTCRDT&apos;">
																																		<xsl:text> - Standby Letter of Credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;TEMPOVDT&apos;">
																																		<xsl:text> - Temporary Overdraft</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Test&apos;">
																																		<xsl:text> - Test New Facility Type</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;TFWORECO&apos;">
																																		<xsl:text> - Trade Finance without recourse</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;TRECEIPT&apos;">
																																		<xsl:text>- Trust receipts</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTTRDFAC&apos;">
																																		<xsl:text> - Other Trade Facilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;N/A&apos;">
																																		<xsl:text> - Not Available</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFETRADE&apos;">
																																		<xsl:text> - FFE Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISBENECT&apos;">
																																		<xsl:text> - Benevolent credit (other Islamic financing)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PELNFNSA&apos;">
																																		<xsl:text> - Personal loans/financing support facility (FSA 2)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SBLTTRDE&apos;">
																																		<xsl:text> - SL Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SBLTNTRD&apos;">
																																		<xsl:text> - SL Non-trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRIA&apos;">
																																		<xsl:text> - FFE Acquisition</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRID&apos;">
																																		<xsl:text> - FFE Divestment</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRBD&apos;">
																																		<xsl:text> - FFE Drawdown</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRBR&apos;">
																																		<xsl:text> - FFE Repayment</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTROT&apos;">
																																		<xsl:text> - FFE Others</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BUYNPAYL&apos;">
																																		<xsl:text> - Buy Now Pay Later</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;UNPROCRE&apos;">
																																		<xsl:text> - Unreturned Provisional Credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;CONTRFIN&apos;">
																																		<xsl:text> - Contract Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;INVOIFIN&apos;">
																																		<xsl:text> - Invoice Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;NHEFNCE&apos;">
																																		<xsl:text> - National Higher Education Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:otherwise>
																																		<xsl:text> </xsl:text>
																																	  </xsl:otherwise>
																																	</xsl:choose>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																												<fo:block/>
																											</fo:table-cell>
																											<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:key name="uniqueLegSts" match="LegSts" use="."/>
																													<xsl:for-each select="SpecAttnAcc/LegSts[generate-id() = generate-id(key('uniqueLegSts', .)[1])]">
																														<xsl:variable name="value-of-template" select=".">
																														</xsl:variable>
																														<xsl:apply-templates/>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template"/>
																																	<xsl:choose>
																																	  <xsl:when test="$value-of-template =&apos;Auction&apos;">
																																		<xsl:text> - Auction</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Bankruptcy&apos;">
																																		<xsl:text> - Bankruptcy</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Chrg ordr&apos;">
																																		<xsl:text> - Charging order</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Garnshe ordr&apos;">
																																		<xsl:text> - Garnishee order</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Jdgmt debtr sum&apos;">
																																		<xsl:text> - Judgement debtor summon</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Jdgmtord/ordsal&apos;">
																																		<xsl:text> - Judgement order/Order of sale</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Prohib ordr&apos;">
																																		<xsl:text> - Prohibitor order</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Recvr/sec176&apos;">
																																		<xsl:text> - Receiver/Section 176</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Settd/dischged&apos;">
																																		<xsl:text> - Settled/Discharged</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Sumn/writ files&apos;">
																																		<xsl:text> - Summon/Writ files</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Winding up&apos;">
																																		<xsl:text> - Winding up</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template ='Wrt of seiz&amp;sal'">
																																		<xsl:text> - Writ of seizure and sale</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:otherwise>
																																		<xsl:text> </xsl:text>
																																	  </xsl:otherwise>
																																	</xsl:choose>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																								</fo:table-row>		
																							</xsl:for-each>
																						</xsl:if>
																						
																						<xsl:variable name="allFacilitiesSame3" select="count(Applications/Application/Facility[not(. = $existingFacilities2)]) = 0" />
																						<xsl:variable name="allFacilitiesSame4" select="count(Applications/Application/Facility[not(. = $existingFacilities3)]) = 0" />
																						
																						<xsl:if test="(Applications/Application/Facility/text() and ((not($allFacilitiesSame3)) or (not($allFacilitiesSame4)))) or (Applications/Application/Sts/text())">
																							<xsl:for-each select="Applications">
																								<fo:table-row>
																											<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:key name="uniqueFacility" match="Application/Facility" use="."/>
																													<xsl:for-each select="Application/Facility[generate-id() = generate-id(key('uniqueFacility', .)[1])]" >
																														<xsl:variable name="value-of-template" select=".">
																														</xsl:variable>
																														<xsl:apply-templates/>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																
																																	<xsl:copy-of select="$value-of-template"/>
																																	<xsl:choose>
																																	  <xsl:when test="$value-of-template =&apos;BANKACCP&apos;">
																																		<xsl:text> - Banker acceptances</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BACUSEXP&apos;">
																																		<xsl:text> - Banker acceptances - export, customer liabilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BAOWNEXP&apos;">
																																		<xsl:text> - Banker acceptances - export, own bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BACUSIMP&apos;">
																																		<xsl:text> - Banker acceptances - import, customer liabilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BAOWNIMP&apos;">
																																		<xsl:text> - Banker acceptances - import, own bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BACUSPCH&apos;">
																																		<xsl:text> - Banker acceptances - purchase/sales, customer liabilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BAOWNPCH&apos;">
																																		<xsl:text> - Banker acceptances - purchase/sales, own bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISBENECT&apos;">
																																		<xsl:text> - Benevolent credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BLOKDNSG&apos;">
																																		<xsl:text> - Block discounting for non-scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BLOKDSCG&apos;">
																																		<xsl:text> - Block discounting for scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BLOKDREC&apos;">
																																		<xsl:text> - Block discounting receivables</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BRLNFNCE&apos;">
																																		<xsl:text> - Bridging loans/financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;CHRGCARD&apos;">
																																		<xsl:text> - Charge Card</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BRIDGING&apos;">
																																		<xsl:text> - Construction bridging loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;CRDTCARD&apos;">
																																		<xsl:text> - Credit Card</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;DMBLPCHD&apos;">
																																		<xsl:text> - Domestic bills purchased</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISEQYFNG&apos;">
																																		<xsl:text> - Equity financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;EXPCRDRE&apos;">
																																		<xsl:text> - Export credit refinancing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FACTORNG&apos;">
																																		<xsl:text> - Factoring</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FNGNTRDE&apos;">
																																		<xsl:text> - Financial guarantee - Non-Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FNGTRADE&apos;">
																																		<xsl:text> - Financial guarantee - Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FNINSOFN&apos;">
																																		<xsl:text> - Financial institution own fund</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FLRSTCKG&apos;">
																																		<xsl:text> - Floor stocking</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FGBLPCHD&apos;">
																																		<xsl:text> - Foreign bills purchased</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FWFGNECH&apos;">
																																		<xsl:text> - Forward foreign exchange</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HRPCNSCG&apos;">
																																		<xsl:text> - Hire purchase for non-scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HRPCSCGD&apos;">
																																		<xsl:text> - Hire purchase for scheduled goods</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HSLNFNCE&apos;">
																																		<xsl:text> - Housing loans/Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;LEASING&apos;">
																																		<xsl:text> - Leasing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;LTCREDIT&apos;">
																																		<xsl:text> - Letter of credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;LOANSTCK&apos;">
																																		<xsl:text> - Loan stock (arising from restructuring)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;MICROEFN&apos;">
																																		<xsl:text> - Micro enterprise fund</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;MUOPTFAC&apos;">
																																		<xsl:text> - Multi-option facility</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HLFNNNPS&apos;">
																																		<xsl:text> - Non-priority housing loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OHRPCREC&apos;">
																																		<xsl:text> - Other hire purchase receivables</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTHLNFIN&apos;">
																																		<xsl:text> - Other loans/financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTSHTFAC&apos;">
																																		<xsl:text> - Other off-balance sheet facilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTLNFNCE&apos;">
																																		<xsl:text> - Other term loan/finance (include personal loan/finance)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTTRDDIS&apos;">
																																		<xsl:text> - Other trade bills discounted</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTHTRFAC&apos;">
																																		<xsl:text> - Other trade facilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OPCQPCHD&apos;">
																																		<xsl:text> - Outport Cheque Purchased</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OVRDRAFT&apos;">
																																		<xsl:text> - Overdraft</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISPWNBKG&apos;">
																																		<xsl:text> - Pawnbroking</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PGRANTEE&apos;">
																																		<xsl:text> - Performance guarantee</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PELNFNCE&apos;">
																																		<xsl:text> - Personal loans/financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;POSHPECR&apos;">
																																		<xsl:text> - Post-shipment ECR</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PRESHPCR&apos;">
																																		<xsl:text> - Pre-shipment ECR</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;HLFNPRSR&apos;">
																																		<xsl:text> - Priority sector housing loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISPJTFNG&apos;">
																																		<xsl:text> - Project financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PCPASCAR&apos;">
																																		<xsl:text> - Purchase of passenger cars</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;RVVGCRDT&apos;">
																																		<xsl:text> - Revolving Credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SHMARGIN&apos;">
																																		<xsl:text> - Share margin facility</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SHPGRTEE&apos;">
																																		<xsl:text> - Shipping guarantee</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;STLNFNCE&apos;">
																																		<xsl:text> - Staff loan/finance</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SBLTCRDT&apos;">
																																		<xsl:text> - Standby Letter of Credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;TEMPOVDT&apos;">
																																		<xsl:text> - Temporary Overdraft</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;Test&apos;">
																																		<xsl:text> - Test New Facility Type</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;TFWORECO&apos;">
																																		<xsl:text> - Trade Finance without recourse</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;TRECEIPT&apos;">
																																		<xsl:text>- Trust receipts</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;OTTRDFAC&apos;">
																																		<xsl:text> - Other Trade Facilities</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;N/A&apos;">
																																		<xsl:text> - Not Available</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFETRADE&apos;">
																																		<xsl:text> - FFE Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;ISBENECT&apos;">
																																		<xsl:text> - Benevolent credit (other Islamic financing)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;PELNFNSA&apos;">
																																		<xsl:text> - Personal loans/financing support facility (FSA 2)</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SBLTTRDE&apos;">
																																		<xsl:text> - SL Trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;SBLTNTRD&apos;">
																																		<xsl:text> - SL Non-trade</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRIA&apos;">
																																		<xsl:text> - FFE Acquisition</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRID&apos;">
																																		<xsl:text> - FFE Divestment</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRBD&apos;">
																																		<xsl:text> - FFE Drawdown</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTRBR&apos;">
																																		<xsl:text> - FFE Repayment</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;FFENTROT&apos;">
																																		<xsl:text> - FFE Others</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;BUYNPAYL&apos;">
																																		<xsl:text> - Buy Now Pay Later</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;UNPROCRE&apos;">
																																		<xsl:text> - Unreturned Provisional Credit</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;CONTRFIN&apos;">
																																		<xsl:text> - Contract Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;INVOIFIN&apos;">
																																		<xsl:text> - Invoice Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;NHEFNCE&apos;">
																																		<xsl:text> - National Higher Education Financing</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:otherwise>
																																		<xsl:text> </xsl:text>
																																	  </xsl:otherwise>
																																	</xsl:choose>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																												<fo:block>
																												<xsl:key name="uniqueSts" match="Application/Sts" use="."/>
																													<xsl:for-each select="Application/Sts[generate-id() = generate-id(key('uniqueSts', .)[1])]">
																														<xsl:variable name="value-of-template" select=".">
																														</xsl:variable>
																														<xsl:apply-templates/>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template"/>
																																	<xsl:choose>
																																	  <xsl:when test="$value-of-template =&apos;P&apos;">
																																		<xsl:text> - Pending decision by PFIs</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;A&apos;">
																																		<xsl:text> - Accept by the customer</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;X&apos;">
																																		<xsl:text> - Cancelled by the customer</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;T&apos;">
																																		<xsl:text> - Pending acceptance by the Customer</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;R&apos;">
																																		<xsl:text> - Rejected by PFI</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;W&apos;">
																																		<xsl:text> - Withdrawn by customer before decision by PFI</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:when test="$value-of-template =&apos;D&apos;">
																																		<xsl:text> - Deleted by PFI</xsl:text>
																																		<xsl:text>&#x2029;</xsl:text>
																																	  </xsl:when>
																																	  <xsl:otherwise>
																																		<xsl:text> </xsl:text>
																																	  </xsl:otherwise>
																																	</xsl:choose>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																									<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																									<fo:block/>
																									</fo:table-cell>
																								</fo:table-row>		
																							</xsl:for-each>
																						</xsl:if>
																						</fo:table-body>
																					</fo:table>
																			
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0px" color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-column column-width="550"/>
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid" font-size="8pt" padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
								</xsl:if>
							</xsl:if>
							<!-- Individual Report - Loan Info - Application (End) -->
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="SMEProfile">
											<xsl:for-each select="LoanInfo">
												<xsl:for-each select="Applications">
													<xsl:for-each select="Application">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="12"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="13"/>
																	<fo:table-column column-width="27"/>
																	<fo:table-column column-width="23"/>
																	<fo:table-column column-width="38"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-column column-width="43"/>
																	<fo:table-column column-width="30"/>
																	<fo:table-column column-width="50"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="10"/>
																	<fo:table-column column-width="48"/>
																	<fo:table-column column-width="35"/>
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="No">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Date">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Sts">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="Capacity">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="LenderType">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="AmtAppl">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="6pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																			<fo:table-cell background-color="white"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block />
																			</fo:table-cell>
																		</fo:table-row>

																		<fo:table-row>
																			<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block/>
																			</fo:table-cell>
																			<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Property Address:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" number-columns-spanned="8" display-align="center">
																				<fo:block>
																					<xsl:for-each select="PropertyAddress">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>																								
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Property Status:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" number-columns-spanned="14" display-align="center">
																				<fo:block>
																					<xsl:for-each select="PropertyStatus">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>																								
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>																		</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
							</xsl:for-each>
							<fo:block />
							<xsl:if test="Response/ReportAccess/LOANINFO =&apos;U&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
											border-spacing="2pt">
											<fo:table-column column-width="12"/>
											<fo:table-column column-width="35"/>
											<fo:table-column column-width="13"/>
											<fo:table-column column-width="27"/>
											<fo:table-column column-width="23"/>
											<fo:table-column column-width="38"/>
											<fo:table-column column-width="43"/>
											<fo:table-column column-width="35"/>
											<fo:table-column column-width="43"/>
											<fo:table-column column-width="30"/>
											<fo:table-column column-width="50"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="10"/>
											<fo:table-column column-width="48"/>
											<fo:table-column column-width="35"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-family="Arial" font-size="x-small"
																font-style="normal" font-variant="normal" font-weight="normal">
																<xsl:text>No</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-family="Arial" font-size="x-small"
																font-style="normal" font-variant="normal" font-weight="normal">
																<xsl:text>Date</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-family="Arial" font-size="x-small"
																font-style="normal" font-variant="normal" font-weight="normal">
																<xsl:text>Sts</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-family="Arial" font-size="x-small"
																font-style="normal" font-variant="normal" font-weight="normal">
																<xsl:text>Capacity</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-family="Arial" font-size="x-small"
																font-style="normal" font-variant="normal" font-weight="normal">
																<xsl:choose>
																<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																	<xsl:text>Lender</xsl:text>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:text>Lender Type</xsl:text>
																</xsl:otherwise>
																</xsl:choose>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Facility</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Total Outstanding Balance (RM)</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Date Balance Updated</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Limit (RM)</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Prin. Repmt. Term</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Col Type</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" number-columns-spanned="12" border="solid 1pt gray"
														padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-family="Arial" font-size="x-small"
																font-style="normal" font-variant="normal" font-weight="normal">
																<xsl:text>Conduct Of Account For Last 12 Months</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>LGL STS</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#9edbaf"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="bold" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block>
															<fo:inline font-weight="normal">
																<xsl:text>Date Status Updated</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="11"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" number-columns-spanned="11"
														border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-size="x-small" font-weight="normal">
																<xsl:text>Loan Information</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
													<fo:table-cell background-color="white"
														font-size="8pt" font-style="normal" font-variant="normal"
														font-weight="normal" border="solid 1pt gray" padding="2pt"
														display-align="center">
														<fo:block />
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</fo:block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>	
							</xsl:if>

							

						<!-- Individual Report - Trade Reference Information (Start) -->
						<xsl:if test="Response/ReportAccess/TRADEREF=&apos;Y&apos;">
									<xsl:variable name="sectioncount0_5" select="
									count(Response/ReportAccess[CURRBUSCOMP = 'Y' or PREVBUSCOMP = 'Y']) +
									count(Response/ReportAccess/PREVBUSCOMP[. = 'Y']) +
									(1 * $hasSummary) +
									(1 * $hasBothSummaryandLit) +
									count(Response/ReportAccess/LOANINFO[. = 'Y'])
									"/>
						<fo:block>
							<fo:block>&#160;</fo:block>
							<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left">
								<fo:block text-decoration="underline">
									<fo:inline>
										<xsl:value-of select="concat('SECTION ', $sectioncount0_5)"/>
									</fo:inline>
									<fo:inline font-weight="bold">
										<xsl:text>: TRADE CREDIT REFERENCE INFORMATION</xsl:text>
									</fo:inline>
								</fo:block>

								<xsl:choose>
								<xsl:when test="$XML/Response/Report/Profile/TradeReference/Industries and normalize-space($XML/Response/Report/Profile/TradeReference/Industries) != ''">
								<!-- Trade Reference Summary START-->
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="TradeReference">
											<fo:table color="black" font-size="11px" margin="0px" padding="0px"
												table-layout="fixed" width="100%" border="solid 1pt gray"
												border-spacing="2pt">
												<fo:table-column column-width="52" />
												<fo:table-column column-width="200" />
												<fo:table-column column-width="150" />
												<fo:table-column column-width="150" />
												<fo:table-header start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#9edbaf"
														font-size="6pt" border="solid 1pt gray" padding="2pt"
														display-align="center" number-columns-spanned="4">
															<fo:block>
																<fo:inline>
																	<xsl:text>Summary</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell font-size="6pt" font-style="normal"
														font-variant="normal" font-weight="normal" border="solid 1pt gray"
														padding="2pt" display-align="center" text-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>No</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="6pt" font-style="normal"
														font-variant="normal" font-weight="normal" border="solid 1pt gray"
														padding="2pt" display-align="center" text-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Creditor Name</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="6pt" font-style="normal"
														font-variant="normal" font-weight="normal" border="solid 1pt gray"
														padding="2pt" display-align="center" text-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Outstanding Amount (RM)</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="6pt" font-style="normal"
														font-variant="normal" font-weight="normal" border="solid 1pt gray"
														padding="2pt" display-align="center" text-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Default Amount (RM)</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-header>
												
												<fo:table-body start-indent="0pt"
													keep-together.within-page="always">
													<xsl:choose>
														<xsl:when test="not(Industries/Industry)">
															<fo:table-row>
																<fo:table-cell font-size="6pt"
																font-style="normal" font-variant="normal" font-weight="normal"
																border="solid 1pt gray" padding="2pt" display-align="center">
																	<fo:block >
																		<fo:inline font-weight="normal">
																			<xsl:text></xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="6pt"
																font-style="normal" font-variant="normal" font-weight="normal"
																border="solid 1pt gray" padding="2pt" display-align="center">
																	<fo:block >
																		<fo:inline font-weight="normal">
																			<xsl:text></xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="6pt"
																	font-style="normal" font-variant="normal" font-weight="normal"
																	border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																	<fo:block >
																		<fo:inline font-weight="normal">
																			<xsl:text>Not Applicable</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>	
																<fo:table-cell font-size="6pt"
																	font-style="normal" font-variant="normal" font-weight="normal"
																	border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																	<fo:block >
																		<fo:inline font-weight="normal">
																			<xsl:text></xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell font-size="6pt"
																	font-style="normal" font-variant="normal" font-weight="normal"
																	border="solid 1pt gray" padding="2pt" display-align="center" 
																	text-align="right" number-columns-spanned="2">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Total</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="6pt"
																	font-style="normal" font-variant="normal" font-weight="normal"
																	border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																	<fo:block >
																		<fo:inline font-weight="normal">
																			<xsl:text>Not Applicable</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>	
																<fo:table-cell font-size="6pt"
																	font-style="normal" font-variant="normal" font-weight="normal"
																	border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																	<fo:block >
																		<fo:inline font-weight="normal">
																			<xsl:text>0.00</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:when>
														<xsl:otherwise>
															<xsl:for-each select="Industries/Industry">
																<xsl:for-each select="Creditors/Creditor">
																	<xsl:variable name="creditorName">
																		<xsl:value-of select="Name"/>
																	</xsl:variable>
																	<xsl:for-each select="Accounts/Account">
																		<fo:table-row>
																			<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block >
																					<fo:inline font-weight="normal">
																						<xsl:value-of select="No"/>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center">
																				<fo:block >
																					<fo:inline font-weight="normal">
																						<xsl:copy-of select="$creditorName"/>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																				<fo:block >
																					<fo:inline font-weight="normal">
																						<xsl:text>Not Applicable</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																				<fo:block >
																					<fo:inline font-weight="normal">
																						<xsl:choose>
																							<xsl:when test="SubAccs/SubAccount/DefaultAmt/text()">
																								<xsl:value-of select="format-number(SubAccs/SubAccount/DefaultAmt,'###,##0.00')"/>
																							</xsl:when>
																						</xsl:choose>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																	<fo:table-row>
																		<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center" 
																			text-align="right" number-columns-spanned="2">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Total</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																			<fo:block >
																				<xsl:text>Not Applicable</xsl:text>
																			</fo:block>
																		</fo:table-cell>	
																		<fo:table-cell font-size="6pt"
																			font-style="normal" font-variant="normal" font-weight="normal"
																			border="solid 1pt gray" padding="2pt" display-align="center" text-align="right">
																			<fo:block >
																				<fo:inline font-weight="normal">
																					<xsl:value-of select="format-number(sum(Accounts/Account/SubAccs/SubAccount/DefaultAmt),'###,##0.00')"/>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>	
								<!-- Trade Reference Summary END-->
								
								<fo:block text-decoration="none">&#160;</fo:block>
							
								<!-- Trade Reference NEW START-->
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="TradeReference">
												<xsl:choose>
													<xsl:when test="not(Industries/Industry)">
														<fo:table color="black" font-size="11px" margin="0px" padding="0px"
																table-layout="fixed" width="100%" border="solid 1pt gray"
																border-spacing="2pt">
															<fo:table-column column-width="100" />
															<fo:table-column column-width="80" />
															<fo:table-column column-width="100" />
															<fo:table-column column-width="80" />
															<fo:table-column column-width="112" />
															<fo:table-column column-width="80" />
										
															<fo:table-body start-indent="0pt"
															keep-together.within-page="always">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf" font-style="normal"
																	font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="3">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Creditor Details</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#9edbaf" font-style="normal" 
																	font-variant="normal" font-weight="normal" text-align="center"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Statement Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Name</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#9edbaf" font-style="normal" 
																	font-variant="normal" font-weight="normal" text-align="center"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2" number-rows-spanned="2">
																		<fo:block linefeed-treatment="preserve">
																			<fo:inline>
																				<xsl:text>Aging Days &#xA; (accurate as at the statement date indicated above)</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="#9edbaf" font-style="normal" 
																	font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="center" number-rows-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Amount (RM)</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Reg No/New Reg No</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block></fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block></fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt" background-color="#CCFF66"
																	display-align="center" number-rows-spanned="2" text-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Outstanding</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>0-30 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Not Applicable</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Contact Number</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>31-60 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Not Applicable</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf" font-style="normal"
																	font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="3">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Particulars</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt" background-color="#FF9966"
																	display-align="center" number-rows-spanned="5" text-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Default</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>61-90 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Contract Start Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>91-120 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Account Status</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>121-150 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Account Number</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>151-180 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Nature of Debt</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="2">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>> 180 Days</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" text-align="right">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Credit Term</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Credit Limit (RM)</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>LOD/Notification Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray"  padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Submission Date</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="5">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															<xsl:if test="normalize-space(OriCreditor) != ''">
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray"  padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Original Creditor</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="5">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:if>
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf" font-style="normal"
																	font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="6">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Guarantor Details</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray"  padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Name</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center" number-columns-spanned="5">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell 
																	font-size="6pt" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>ID Number/Reg No</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																	font-size="6pt" padding="2pt"
																	display-align="center" number-columns-spanned="5">
																		<fo:block>
																			<fo:inline>
																				<xsl:text></xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="Industries/Industry">
															<xsl:for-each select="Creditors/Creditor">
																<xsl:variable name="Name">
																	<xsl:value-of select="Name"/>
																</xsl:variable>
																<xsl:variable name="ContactNo">
																	<xsl:value-of select="ContactNo"/>
																</xsl:variable>
																<xsl:variable name="RegNo">
																	<xsl:value-of select="RegNo"/> 
																</xsl:variable>
																<xsl:variable name="NewRegNo">
																	<xsl:value-of select="NewRegNo"/> 
																</xsl:variable>
																<xsl:for-each select="Accounts/Account">
																	<fo:block>&#160;</fo:block>	
																	<fo:table color="black" font-size="11px" margin="0px" padding="0px"
																	table-layout="fixed" width="100%" border="solid 1pt gray"
																	border-spacing="2pt">
																		<fo:table-column column-width="100" />
																		<fo:table-column column-width="80" />
																		<fo:table-column column-width="100" />
																		<fo:table-column column-width="80" />
																		<fo:table-column column-width="112" />
																		<fo:table-column column-width="80" />
													
																		<fo:table-body start-indent="0pt"
																		keep-together.within-page="always">
																			
																			<fo:table-row>
																				<fo:table-cell background-color="#9edbaf"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="6">
																					<fo:block>
																						<fo:inline>
																							Record <xsl:value-of select="No"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#9edbaf" font-style="normal"
																				font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="3">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Creditor Details</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="#9edbaf" font-style="normal" 
																				font-variant="normal" font-weight="normal" text-align="center"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Statement Date</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																		<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																		font-size="6pt" border="solid 1pt gray" padding="2pt"
																		display-align="center" text-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:value-of select="SubAccs/SubAccount/StmtDate"/>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Name</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:copy-of select="$Name"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="#9edbaf" font-style="normal" 
																				font-variant="normal" font-weight="normal" text-align="center"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2" number-rows-spanned="2">
																					<fo:block linefeed-treatment="preserve">
																						<fo:inline>
																							<xsl:text>Aging Days &#xA; (accurate as at the statement date indicated above)</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="#9edbaf" font-style="normal" 
																				font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="center" number-rows-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Amount (RM)</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Reg No/New Reg No</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:copy-of select="$RegNo"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block></fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block></fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt" background-color="#CCFF66"
																				display-align="center" number-rows-spanned="2" text-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Outstanding</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>0-30 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Not Applicable</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Contact Number</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:copy-of select="$ContactNo"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>31-60 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Not Applicable</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#9edbaf" font-style="normal"
																				font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="3">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Particulars</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt" background-color="#FF9966"
																				display-align="center" number-rows-spanned="5" text-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Default</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>61-90 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/Amt90"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Contract Start Date</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="StartDate"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>91-120 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/Amt120"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Account Status</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="AccSts"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>121-150 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/Amt150"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Account Number</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="RefNo"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>151-180 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/Amt180"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Nature of Debt</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="2">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="NatureOfDebt"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>> 180 Days</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" text-align="right">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/AmtOv180"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Credit Term</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/CreditTerm"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Credit Limit (RM)</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/Limit"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>LOD/Notification Date</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubAccs/SubAccount/LODNODDate"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray"  padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Submission Date</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="5">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="SubmDate"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		<xsl:if test="normalize-space(OriCreditor) != ''">
																			<fo:table-row>
																				<fo:table-cell 
																				font-size="6pt" border="solid 1pt gray"  padding="2pt"
																				display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Original Creditor</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																				font-size="6pt" border="solid 1pt gray" padding="2pt"
																				display-align="center" number-columns-spanned="5">
																					<fo:block>
																						<fo:inline>
																							<xsl:value-of select="OriCreditor"/>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		</xsl:if>
																			<xsl:choose>
																				<xsl:when test="not(Guarantors/Guarantor)">
																					<fo:table-row>
																						<fo:table-cell background-color="#9edbaf" font-style="normal"
																						font-variant="normal" font-weight="normal"
																						font-size="6pt" border="solid 1pt gray" padding="2pt"
																						display-align="center" number-columns-spanned="6">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Guarantor Details</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row>
																						<fo:table-cell 
																						font-size="6pt" border="solid 1pt gray"  padding="2pt"
																						display-align="center">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Name</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																						font-size="6pt" border="solid 1pt gray" padding="2pt"
																						display-align="center" number-columns-spanned="5">
																							<fo:block>
																								<fo:inline>
																									<xsl:text></xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row>
																						<fo:table-cell 
																						font-size="6pt" border="solid 1pt gray" padding="2pt"
																						display-align="center">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>ID Number/Reg No</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																						font-size="6pt" padding="2pt" border="solid 1pt gray"
																						display-align="center" number-columns-spanned="5">
																							<fo:block>
																								<fo:inline>
																									<xsl:text></xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:for-each select="Guarantors/Guarantor">
																						<fo:table-row>
																							<fo:table-cell background-color="#9edbaf" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							font-size="6pt" border="solid 1pt gray" padding="2pt"
																							display-align="center" number-columns-spanned="6">
																								<fo:block>
																									<fo:inline>
																										Guarantor Details <xsl:value-of select="No"/>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell 
																							font-size="6pt" border="solid 1pt gray"  padding="2pt"
																							display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Name</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																							font-size="6pt" border="solid 1pt gray" padding="2pt"
																							display-align="center" number-columns-spanned="5">
																								<fo:block>
																									<fo:inline>
																										<xsl:value-of select="Name"/>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell 
																							font-size="6pt" border="solid 1pt gray" padding="2pt"
																							display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>ID Number/Reg No</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-style="normal" font-variant="normal" font-weight="normal"
																							font-size="6pt" padding="2pt" border="solid 1pt gray"
																							display-align="center" number-columns-spanned="5">
																								<fo:block>
																									<fo:inline>
																										<xsl:value-of select="RegNo"/>/<xsl:value-of select="NewRegNo"/>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</xsl:for-each>
																				</xsl:otherwise>
																			</xsl:choose>
																		</fo:table-body>
																	</fo:table>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>							
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								<!-- Trade Reference NEW END-->
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal" text-decoration="none">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
								</xsl:choose>
							</fo:block>	
						</fo:block>
						
						<fo:block>
							<fo:leader leader-pattern="space"/>
						</fo:block>
						
						</xsl:if>									
						<!-- Individual Report - Trade Reference Information (End)  -->

						<!-- Income Estimation -->
						<xsl:if test="Response/ReportAccess/INCOMEESTIMATION=&apos;Y&apos;">
                            <fo:block color="#00008b" font-size="9pt" font-weight="bold"
								height="10px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>INCOME ESTIMATION DETAILS</xsl:text>
									</fo:inline>
								</fo:block>
								<fo:block>&#160;</fo:block>
							</fo:block>

							<xsl:for-each select="$XML">
							    <xsl:for-each select="Response">
								    <xsl:for-each select="Report">
									    <xsl:for-each select="Profile">
										    <xsl:for-each select="IncomeEstimation">
                                                <fo:block margin="0pt">
                                                    <fo:table border="0px" color="black" font-size="11px"
                                                        margin="0px" padding="0px" table-layout="fixed" width="100%"
                                                        border-spacing="2pt">
                                                        <fo:table-body>
                                                            <fo:table-row>
                                                                <fo:table-cell background-color="#9edbaf" font-style="normal"
                                                                    font-variant="normal" font-weight="bold"
                                                                    font-size="8pt" border="solid 1pt gray" padding="2pt"
                                                                    display-align="center" number-columns-spanned="4">
                                                                    <fo:block>
                                                                        <fo:inline font-style="normal"
																					font-variant="normal" font-weight="bold">
                                                                            <xsl:text>Income Estimation Information</xsl:text>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                            </fo:table-row>
                                                            <fo:table-row>
                                                                <fo:table-cell background-color="#e4fae6"
                                                                    font-size="8pt" font-style="normal" font-variant="normal"
																    font-weight="normal" border="solid 1pt gray" padding="2pt"
                                                                    display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:text>Name</xsl:text>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell background-color="#e4fae6"
                                                                    font-size="8pt" font-style="normal" font-variant="normal"
																    font-weight="normal" border="solid 1pt gray" padding="2pt"
                                                                    display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:text>Estimated Yearly Income</xsl:text>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell background-color="#e4fae6"
                                                                    font-size="8pt" font-style="normal" font-variant="normal"
																    font-weight="normal" border="solid 1pt gray" padding="2pt"
                                                                    display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:text>Income Percentile</xsl:text>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell background-color="#e4fae6"
                                                                    font-size="8pt" font-style="normal" font-variant="normal"
																    font-weight="normal" border="solid 1pt gray" padding="2pt"
                                                                    display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:text>Debt-To-Yearly Income Ratio</xsl:text>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                            </fo:table-row>
                                                            <fo:table-row>
                                                                <fo:table-cell
                                                                font-size="8pt" border="solid 1pt gray" padding="2pt"
                                                                display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:value-of select="name"/>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell
                                                                font-size="8pt" border="solid 1pt gray" padding="2pt"
                                                                display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:value-of select="estYearlyIncome"/>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell
                                                                font-size="8pt" border="solid 1pt gray" padding="2pt"
                                                                display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:value-of select="incomePercentile"/>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell
                                                                font-size="8pt" border="solid 1pt gray" padding="2pt"
                                                                display-align="center">
                                                                    <fo:block>
                                                                        <fo:inline>
                                                                            <xsl:value-of select="debtIncomeRatio"/>
                                                                        </fo:inline>
                                                                    </fo:block>
                                                                </fo:table-cell>
                                                            </fo:table-row>
                                                        </fo:table-body>
                                                    </fo:table>
                                                    <fo:inline color="#FF0000" padding="0px" font-size="9pt">
                                                        <xsl:text>*</xsl:text>
                                                    </fo:inline>
                                                    <fo:inline font-size="7pt" padding="0px" color="#000000">
                                                        <xsl:text>The estimated yearly income provided in this credit report is derived from available data and is an approximation based on available information.</xsl:text>
                                                    </fo:inline>
                                                </fo:block>
							                </xsl:for-each>
							            </xsl:for-each>
								    </xsl:for-each>
							    </xsl:for-each>
						    </xsl:for-each>
						</xsl:if>
						<!-- Income Estimation End -->
						
						<!-- Sanction -->
						<xsl:if test="Response/ReportAccess/SANCTION  = &apos;Y&apos;">
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
								height="10px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>AML / SANCTION LIST</xsl:text>
									</fo:inline>
								</fo:block>
								<fo:block>&#160;</fo:block>	
							</fo:block>
							
							<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell background-color="#9edbaf" font-size="8pt" font-weight="bold" number-columns-spanned="25" border="solid 1pt gray" padding="2pt" height="18" display-align="center">
											<fo:block>
												<fo:inline>
													<xsl:text>Note: The following information is based on the screening for name match only against sanctions and Politically Exposed Persons (PEP) database compiled from the following sources including but not limited to: a) United Nations, b) Malaysian Ministry of Home Affairs, c) OFAC, and d) PEP lists. Please contact us for details of match, if required.</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							
							<fo:block>&#160;</fo:block>	
							
							<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="20"/>
								<fo:table-column column-width="100"/>
								<fo:table-column column-width="120"/>
								<fo:table-column column-width="150"/>
								<fo:table-column column-width="80"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell background-color="#e4fae6" border="solid 1pt gray" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold" font-size="x-small">
													<xsl:text>No</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell background-color="#e4fae6" border="solid 1pt gray" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold" font-size="x-small">
													<xsl:text>IC / Passport No</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell background-color="#e4fae6" border="solid 1pt gray" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold" font-size="x-small">
													<xsl:text>Name</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell background-color="#e4fae6" border="solid 1pt gray" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold" font-size="x-small">
													<xsl:text>Trace Case</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell background-color="#e4fae6" border="solid 1pt gray" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold" font-size="x-small">
													<xsl:text>Name Match</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="Profile">
											<xsl:for-each select="SanctionMatches">
												<xsl:for-each select="SanctionMatch">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													
													<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
														<fo:table-column column-width="20"/>
														<fo:table-column column-width="100"/>
														<fo:table-column column-width="120"/>
														<fo:table-column column-width="150"/>
														<fo:table-column column-width="80"/>
														
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell font-size="8pt"
																	font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="Numbering">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when
																					test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt"
																	font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="IdNo">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when
																					test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt"
																	font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="Name">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when
																					test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt"
																	font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="TraceCase">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when
																					test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt"
																	font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="NameMatch">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when
																					test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>	
														</fo:table-body>
														
													</fo:table>
												
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:if>
						<!-- end sanction -->

						<!-- Individual Report - CCRIS Address Info (Start) -->
						<xsl:if test="Response/ReportAccess/CRSADDRINFO  = &apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="500" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block color="#00008b" font-size="9pt"
														font-weight="bold" height="10px" margin="0px" padding="0px"
														text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:text>ADDRESS &amp; OTHER RECORDS</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table color="black" font-size="11px" margin="0px"
										padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="2pt">
										<fo:table-column column-width="250" />
										<fo:table-column column-width="100" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell background-color="#9edbaf"
													color="#2c2c2c" font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="bold"
													number-columns-spanned="2" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Address Information</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Address</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Date Created</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<xsl:for-each select="$XML">
										<xsl:for-each select="Response">
											<xsl:for-each select="Report">
												<xsl:for-each select="Profile">
													<xsl:for-each select="CRSEntities">
														<xsl:for-each select="CRSEntity">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="250" />
																<fo:table-column column-width="100" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="transparent"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="before">
																			<fo:block>
																				<xsl:for-each select="Add">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="transparent"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="before">
																			<fo:block>
																				<xsl:for-each select="DateCreated">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:block>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<!-- Individual Report - CCRIS Address Info (End) -->
						<xsl:if
							test="Response/ReportType  != &apos;BIR&apos;  and  Response/ReportType  != &apos;BIR-P&apos;">
							<xsl:if
								test="Response/Report/SMEProfile/RegNo =&apos;-&apos;  or  Response/HideSME =&apos;Y&apos;">
								<xsl:if
									test="Response/Report/SMEProfile/RegNo =&apos;-&apos;  or  Response/HideSME =&apos;Y&apos;">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="550" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block color="#00008b" font-size="9pt"
															font-weight="bold" height="10px" margin="0px" padding="0px"
															text-align="left">
															<fo:block>
																<fo:inline>
																	<xsl:text>CORPORATE INFORMATION</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
												border-spacing="2pt">
												<fo:table-column column-width="250" />
												<fo:table-column column-width="100" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#9edbaf"
															color="#2c2c2c" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="bold"
															number-columns-spanned="2" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Address Info</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Address</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Date Created</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											<xsl:for-each select="$XML">
												<xsl:for-each select="Response">
													<xsl:for-each select="Report">
														<xsl:for-each select="SMEProfile">
															<xsl:for-each select="CRSEntities">
																<xsl:for-each select="CRSEntity">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px"
																		margin="0px" padding="0px" table-layout="fixed" width="100%"
																		border="solid 1pt gray" border-spacing="2pt">
																		<fo:table-column column-width="250" />
																		<fo:table-column column-width="100" />
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="transparent"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="before">
																					<fo:block>
																						<xsl:for-each select="Add">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="transparent"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="before">
																					<fo:block>
																						<xsl:for-each select="DateCreated">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</fo:block>
									</fo:block>
									<fo:block>
										<fo:leader leader-pattern="space" />
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block />
									</fo:block>
								</xsl:if>
							</xsl:if>
						</xsl:if>
						<fo:block />
						<xsl:if
							test="Response/ReportAccess/COMINFO =&apos;Y&apos; and  Response/Report/SMEProfile/RegNo !=&apos;-&apos; and  Response/HideSME =&apos;N&apos;">
							<xsl:if test="Response/ReportAccess/COMPROFILE =&apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" padding="2pt"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block color="#00008b" font-size="9pt"
														font-weight="bold" height="10px" margin="0px" padding="0px"
														text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:text>CORPORATION INFORMATION</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="140" />
																<fo:table-column column-width="230" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="2" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Company Profile</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Previous Name Change (Date of Change)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="OldName">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="NameChangeDate">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Registered Addresses</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:block />
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<fo:block />
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="RegAdd1">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="RegAdd2">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="RegAdd3">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="RegAdd4">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="RegTown">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="RegStateCode">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																										<xsl:for-each select="RegCouCode">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Postcode</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="RegPostCode">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Country Of Origin</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="CouCode">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Business Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:block />
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessAdd1">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessAdd2">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessAdd3">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessAdd4">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessTown">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessStaCode">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																										<fo:inline>
																											<xsl:text>&#160;</xsl:text>
																										</fo:inline>
																										<xsl:for-each select="BusinessCouCode">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Postcode</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="BusinessPostCode">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="SMEProfile">
																										<xsl:for-each select="CompanyType">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="Report">
																									<xsl:for-each select="SMEProfile">
																										<xsl:for-each select="CompanyStatus">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Status</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="Sts">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>BIR Indicator</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="BIRIndicator">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates />
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when
																										test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template" />
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Business Sector</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="BusinessSectors">
																								    <xsl:for-each select="BusinessSector">
                                                                                                        <fo:block>
                                                                                                            <xsl:value-of select="translate(SectorDescription, $smallcase, $uppercase)" />
                                                                                                        </fo:block>
                                                                                                    </xsl:for-each>
                                                                                                </xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Nature Of Business</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="BusinessDescription">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<xsl:if
																		test="Response/ReportAccess/SSMLASTUPDATE = &apos;Y&apos;">
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Last Updated</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="LastUpdated">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:if>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
													<fo:block>
														<fo:leader leader-pattern="space" />
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block />
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<fo:block />
							<xsl:if test="Response/ReportAccess/DIRECTORS = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="100" />
																<fo:table-column column-width="150" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="80" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="5" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Company Owner(s)/Partner(s)/Director(s)/Officer(s)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Residential Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Passport No/IC</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Designation</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Date Of Appointment</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="Directors">
																				<xsl:for-each select="Director">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="150" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="80" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell background-color="transparent"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<xsl:for-each select="Name">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell background-color="transparent"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add3">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add4">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="PostCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																												<fo:inline>
																													<xsl:text>&#160;</xsl:text>
																												</fo:inline>
																												<xsl:for-each select="Town">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="State">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell background-color="transparent"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<xsl:for-each select="IDIC">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell background-color="transparent"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<xsl:for-each select="Designation">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell background-color="transparent"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<xsl:for-each select="StartDate">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<fo:block />
							<xsl:if test="Response/ReportAccess/SHRCAPITAL  = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="8pt"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="8pt" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="5" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Share Capital</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Authorized Capital</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Amount</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Divided Into</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Nominal Value (sen)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="ShareCapital">
																				<xsl:for-each select="Authorized">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="8pt"
																						font-style="normal" font-variant="normal"
																						font-weight="normal" margin="0px" padding="0px"
																						table-layout="fixed" width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell border-style="none"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Total Authorized (RM)</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" number-columns-spanned="4"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Amount">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell border-style="none"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									number-rows-spanned="3" border="solid 1pt gray"
																									padding="2pt" display-align="before">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Ordinary</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;ORDINARY&apos;">
																													<xsl:for-each select="Amount">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;ORDINARY&apos;">
																													<xsl:for-each select="Divided">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;ORDINARY&apos;">
																													<xsl:for-each select="NominalValue">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Preference</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;PREFERENCE&apos;">
																													<xsl:for-each select="Amount">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;PREFERENCE&apos;">
																													<xsl:for-each select="Divided">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;PREFERENCE&apos;">
																													<xsl:for-each select="NominalValue">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Others</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;OTHER&apos;">
																													<xsl:for-each select="Amount">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;OTHER&apos;">
																													<xsl:for-each select="Divided">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;OTHER&apos;">
																													<xsl:for-each select="NominalValue">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell border-style="none"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="8pt" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="100" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Issued Capital</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Cash</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Otherwise Than Cash</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Nominal Value (sen)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="ShareCapital">
																				<xsl:for-each select="Issued">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="8pt"
																						font-style="normal" font-variant="normal"
																						font-weight="normal" margin="0px" padding="0px"
																						table-layout="fixed" width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell border-style="none"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="before">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Total Issued (RM)</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" number-columns-spanned="4"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Amount">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell border-style="none"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									number-rows-spanned="3" border="solid 1pt gray"
																									padding="2pt" display-align="before">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Ordinary</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;ORDINARY&apos;">
																													<xsl:for-each select="Amount">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;ORDINARY&apos;">
																													<xsl:for-each select="Divided">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;ORDINARY&apos;">
																													<xsl:for-each select="NominalValue">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Preference</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;PREFERENCE&apos;">
																													<xsl:for-each select="Amount">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;PREFERENCE&apos;">
																													<xsl:for-each select="Divided">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;PREFERENCE&apos;">
																													<xsl:for-each select="NominalValue">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Others</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;OTHER&apos;">
																													<xsl:for-each select="Amount">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;OTHER&apos;">
																													<xsl:for-each select="Divided">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Capitals">
																											<xsl:for-each select="Capital">
																												<xsl:if test="Type =&apos;OTHER&apos;">
																													<xsl:for-each select="NominalValue">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:if>
																											</xsl:for-each>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<fo:block />
							<xsl:if test="Response/ReportAccess/SHRHOLDERS  = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" font-size="8pt"
												padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
														border-spacing="2pt">
														<fo:table-column column-width="150" />
														<fo:table-column column-width="220" />
														<fo:table-column column-width="100" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell background-color="#9edbaf"
																	color="#2c2c2c" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="bold"
																	number-columns-spanned="3" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Shareholder(s)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>IC/Passport No / Company No</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Name/Company Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Total No of Share</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<xsl:for-each select="$XML">
														<xsl:for-each select="Response">
															<xsl:for-each select="Report">
																<xsl:for-each select="SMEProfile">
																	<xsl:for-each select="Shareholders">
																		<xsl:for-each select="Shareholder">
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:table color="black" font-size="11px"
																				margin="0px" padding="0px" table-layout="fixed"
																				width="100%" border="solid 1pt gray" border-spacing="2pt">
																				<fo:table-column column-width="150" />
																				<fo:table-column column-width="220" />
																				<fo:table-column column-width="100" />
																				<fo:table-body start-indent="0pt">
																					<fo:table-row>
																						<fo:table-cell font-size="8pt"
																							font-style="normal" font-variant="normal"
																							font-weight="normal" border="solid 1pt gray"
																							padding="2pt" display-align="center">
																							<fo:block>
																								<xsl:for-each select="IDIC">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell font-size="8pt"
																							font-style="normal" font-variant="normal"
																							font-weight="normal" border="solid 1pt gray"
																							padding="2pt" display-align="center">
																							<fo:block>
																								<xsl:for-each select="Name">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell font-size="8pt"
																							font-style="normal" font-variant="normal"
																							font-weight="normal" text-align="right" border="solid 1pt gray"
																							padding="2pt" display-align="center">
																							<fo:block>
																								<xsl:for-each select="Share">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																				</fo:table-body>
																			</fo:table>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block />
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<xsl:if test="Response/ReportAccess/CHARGES  = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
														border-spacing="2pt">
														<fo:table-column column-width="85" />
														<fo:table-column column-width="85" />
														<fo:table-column column-width="85" />
														<fo:table-column column-width="155" />
														<fo:table-column column-width="90" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell background-color="#9edbaf"
																	color="#2c2c2c" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="bold"
																	number-columns-spanned="5" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Charge Details</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Charge No</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Total Charge (RM)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Creation Date</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Chargee ID</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Status</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="Charges">
																				<xsl:for-each select="Charge">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="85" />
																						<fo:table-column column-width="85" />
																						<fo:table-column column-width="85" />
																						<fo:table-column column-width="155" />
																						<fo:table-column column-width="90" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="ChargeNo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="TotalAmt">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="DateCreation">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="ChargeeID">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Status">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<fo:block />
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<fo:block />
						<xsl:if
							test="Response/ReportAccess/BUSINFO =&apos;Y&apos; and  Response/Report/SMEProfile/RegNo !=&apos;-&apos;  and  Response/HideSME =&apos;N&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>BUSINESS INFORMATION</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<xsl:if test="Response/ReportAccess/BUSPROFILE =&apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="140" />
																<fo:table-column column-width="230" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="2" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Business Profile</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Business Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessAdd1">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessTown">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<xsl:for-each select="BusinessStaCode">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:block>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Postcode</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="BusinessPostCode">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Start Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="StartDate">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Closing Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="ClosingDate">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Amendment Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="AmendmentDate">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Current Registration Expiry Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="RegExpiryDate">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Business Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="CompanyType">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Business Ownership</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<xsl:for-each select="Ownership">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																				<fo:table-row>
																		<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Status</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<fo:block>
																									<fo:inline>
																										<xsl:value-of select="Sts"/>
																									</fo:inline>
																								</fo:block>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																				<fo:table-row>
																		<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Status</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="$XML">
																					<xsl:for-each select="Response">
																						<xsl:for-each select="Report">
																							<xsl:for-each select="SMEProfile">
																								<fo:block>
																									<fo:inline>
																										<xsl:value-of select="Sts"/>
																									</fo:inline>
																								</fo:block>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<xsl:if
																		test="Response/ReportAccess/SSMLASTUPDATE = &apos;Y&apos;">
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Last Updated</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell font-size="8pt"
																				font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<xsl:for-each select="$XML">
																						<xsl:for-each select="Response">
																							<xsl:for-each select="Report">
																								<xsl:for-each select="SMEProfile">
																									<xsl:for-each select="LastUpdated">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:if>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<xsl:if test="Response/ReportAccess/BRANCHES = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
														border-spacing="2pt">
														<fo:table-column column-width="380" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell background-color="#9edbaf"
																	color="#2c2c2c" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="bold" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Branch Information</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Branch Address</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="Branches">
																				<xsl:for-each select="Branch">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="380" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Information">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add3">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add4">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="PostCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																												<fo:inline>
																													<xsl:text>&#160; </xsl:text>
																												</fo:inline>
																												<xsl:for-each select="Town">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="StaCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																												<fo:inline>
																													<xsl:text>&#160; </xsl:text>
																												</fo:inline>
																												<xsl:for-each select="CouCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<xsl:if test="Response/ReportAccess/CURROWNERS =&apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" padding="2pt"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
														border-spacing="2pt">
														<fo:table-column column-width="100" />
														<fo:table-column column-width="100" />
														<fo:table-column column-width="80" />
														<fo:table-column column-width="50" />
														<fo:table-column column-width="80" />
														<fo:table-column column-width="50" />
														<fo:table-column column-width="50" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell background-color="#9edbaf"
																	color="#2c2c2c" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="bold"
																	number-columns-spanned="7" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Current Business Owner/Partner</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Residential Address</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>IC No (Old/New)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Date Of Birth</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Position</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Nationality</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Date Joined</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="CurrentOwners">
																				<xsl:for-each select="CurrentOwner">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="100" />
																						<fo:table-column column-width="80" />
																						<fo:table-column column-width="50" />
																						<fo:table-column column-width="80" />
																						<fo:table-column column-width="50" />
																						<fo:table-column column-width="50" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Name">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block white-space="pre"
																											white-space-collapse="false" wrap-option="wrap"
																											white-space-treatment="ignore-if-surrounding-linefeed"
																											margin="0pt">
																											<fo:block />
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add3">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add4">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Town">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="PostCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="StaCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="CouCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="IDNo1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="IDNo2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="DateBR">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Position">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Nationality">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="DateJoin">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<xsl:if test="Response/ReportAccess/PREVOWNERS =&apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" padding="2pt"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
														border-spacing="2pt">
														<fo:table-column column-width="80"/>
														<fo:table-column column-width="80"/>
														<fo:table-column column-width="75"/>
														<fo:table-column column-width="50"/>
														<fo:table-column column-width="40"/>
														<fo:table-column column-width="40"/>
														<fo:table-column column-width="50"/>
														<fo:table-column column-width="44"/>
														<fo:table-column column-width="44"/>
														<fo:table-column column-width="49"/>
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell background-color="#9edbaf"
																	color="#2c2c2c" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="bold"
																	number-columns-spanned="10" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Previous Business Owner/Partner</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Residential Address</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>IC No (Old/New)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Date Of Birth</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Race</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Gender</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Nationality</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Date Joined</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Date Resigned</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>Reason Resigned</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="Response">
																	<xsl:for-each select="Report">
																		<xsl:for-each select="SMEProfile">
																			<xsl:for-each select="PrevOwners">
																				<xsl:for-each select="PrevOwner">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="80"/>
																						<fo:table-column column-width="80"/>
																						<fo:table-column column-width="75"/>
																						<fo:table-column column-width="50"/>
																						<fo:table-column column-width="40"/>
																						<fo:table-column column-width="40"/>
																						<fo:table-column column-width="50"/>
																						<fo:table-column column-width="44"/>
																						<fo:table-column column-width="44"/>
																						<fo:table-column column-width="49"/>
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Name">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" overflow="hidden" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add3">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Add4">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="Town">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="PostCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="StaCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="CouCode">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="IDNo1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<xsl:for-each select="IDNo2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:block>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="DateBR">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Race">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Gender">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Nationality">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="DateJoin">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="DateResigned">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="ReasonResigned">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<fo:block />
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<fo:block />
						<xsl:if
							test="Response/ReportAccess/FINSTMT  = &apos;Y&apos; and  Response/Report/SMEProfile/RegNo != &apos;-&apos;  and  Response/HideSME =&apos;N&apos; and (Response/Report/SMEProfile/BalanceSheets/BalanceSheet or Response/Report/SMEProfile/ProfitLosses/ProfitLoss)">
							<fo:block break-after="page">
								<fo:leader leader-pattern="space" />
							</fo:block>
							<xsl:if test="Response/ReportAccess/FINSTMT = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" padding="2pt"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block color="#00008b" font-size="9pt"
														font-weight="bold" height="10px" margin="0px" padding="0px"
														text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:text>FINANCIAL STATEMENT</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<xsl:if test="Response/ReportAccess/AUDITOR =&apos;Y&apos;">
								<fo:block />
								<xsl:for-each select="$XML">
									<xsl:for-each select="Response">
										<xsl:for-each select="Report">
											<xsl:for-each select="SMEProfile">
												<xsl:for-each select="BalanceSheets">
													<xsl:for-each select="BalanceSheet">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="550" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" border-style="solid"
																		font-size="8pt" padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<xsl:for-each select="AuditFirm">
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="140" />
																							<fo:table-column column-width="230" />
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										color="#2c2c2c" font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										number-columns-spanned="2" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Auditor Information</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Auditor</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="Name">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Auditor Address</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="Address1">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="Address2">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="Address3">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="PostCode">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																													<fo:inline>
																														<xsl:text>&#160; </xsl:text>
																													</fo:inline>
																													<xsl:for-each select="Town">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="State">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</xsl:for-each>
																				</fo:block>
																			</fo:block>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="proportional-column-width(1)" />
								<fo:table-column column-width="proportional-column-width(1)" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" font-size="8pt"
											padding="2pt" display-align="before">
											<fo:block>
												<xsl:if test="Response/ReportAccess/BALSHEET =&apos;Y&apos;">
													<xsl:for-each select="$XML">
														<xsl:for-each select="Response">
															<xsl:for-each select="Report">
																<xsl:for-each select="SMEProfile">
																	<xsl:for-each select="BalanceSheets">
																		<xsl:for-each select="BalanceSheet">
																			<fo:block />
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="120" />
																						<fo:table-column column-width="150" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell background-color="#9edbaf"
																									color="#2c2c2c" font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="bold"
																									number-columns-spanned="2" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Balance Sheets</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Consolidated Accounts</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Consolidated">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Financial Yearend</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="FinancialYear">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Unqualified Reports</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="UnqualifiedReport">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Units</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Units">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Fixed Assets</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="FixedAssets">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Total Investment</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="TotalInvestment">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Amount Owing By</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="AmountOwingBy">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Current Assets</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="CurrentAssets">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Intangible Assets</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="IntangibleAssets">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Other Assets</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="OtherAssets">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Total Assets</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="TotalAssets">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Issued Capital</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="IssuedCapital">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Congtingent Liability</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="ContingentLiability">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Paid Up Capital</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="PaidUpCapital">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Share Premium &amp; Reserved</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="SharePremiumReserved">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Unappropriate Profit</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="UnappropriatedProfit">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Minority Interest</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="MinorityInterest">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Share Aplication Account</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="ShareApplicationAcc">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Long time deferred Liability</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="LongtermLiability">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Amount Owing To</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="AmountOwingTo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Current Liabilities</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="CurrentLiability">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									text-align="left" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Total Equity Liability</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="EquityLiability">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</fo:block>
																			</fo:block>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:if>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell border="0px" font-size="8pt"
											padding="2pt" display-align="before">
											<fo:block>
												<xsl:if test="Response/ReportAccess/PROFLOSS =&apos;Y&apos;">
													<xsl:for-each select="$XML">
														<xsl:for-each select="Response">
															<xsl:for-each select="Report">
																<xsl:for-each select="SMEProfile">
																	<xsl:for-each select="ProfitLosses">
																		<xsl:for-each select="ProfitLoss">
																			<fo:block />
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="120" />
																						<fo:table-column column-width="150" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell background-color="#9edbaf"
																									color="#2c2c2c" font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="bold"
																									number-columns-spanned="2" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Profit And Loss</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Consolidated Accounts</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Consolidated">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Financial Yearend</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="FinancialYear">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Unqualified Reports</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="UnqualifiedReport">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Units</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Units">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Turnover</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Turnover">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Operating Revenue</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="OperatingRevenue">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Profit Before Taxation</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="ProfitBeforeTax">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Profit After Taxation</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="ProfitAfterTax">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Extraordinary Item</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="ExtraordinaryItem">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Minority Interest</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="MinorityInterest">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Profit Attributes to Shareholders</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="ProfitAttributesToShareHolders">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Prior Period Adjustment</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="PriorPeriodAdjustment">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Net Dividend</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="NetDividen">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Transferred To/From Reserved</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="TransferredToFromReserved">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Others</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="Others">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Unappropriated Profit Carried Forward</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each
																											select="UnappropriatedProfitCarriedForward">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									text-align="inherit" border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Gross Dividend</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each select="GrossDividen">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Unappropriated Profit Brought Forward</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell font-size="8pt"
																									font-style="normal" font-variant="normal"
																									font-weight="normal" text-align="right"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<xsl:for-each
																											select="UnappropriatedProfitBroughtForward">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</fo:block>
																			</fo:block>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:if>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:block />
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if
							test="Response/ReportAccess/FINSTMT  = &apos;Y&apos; and  Response/Report/SMEProfile/RegNo != &apos;-&apos;  and  Response/HideSME =&apos;N&apos; and Response/Report/SMEProfile/Financials/Financial">
							<fo:block break-after="page">
								<fo:leader leader-pattern="space" />
							</fo:block>
							<xsl:if test="Response/ReportAccess/FINSTMT = &apos;Y&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="550" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" padding="2pt"
												display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block color="#00008b" font-size="9pt"
														font-weight="bold" height="10px" margin="0px" padding="0px"
														text-align="left">
														<fo:block>
															<fo:inline>
																<xsl:text>FINANCIAL STATEMENT</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<xsl:if test="Response/ReportAccess/AUDITOR =&apos;Y&apos;">
								<xsl:if
									test="count($XML/Response/Report/SMEProfile/Financials/Financial) = 5">
									<fo:block />
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="550" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border="solid 1pt gray" border-spacing="2pt">
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf"
																				color="#2c2c2c" font-size="8pt" font-style="normal"
																				font-variant="normal" font-weight="bold"
																				number-columns-spanned="6" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Summary of Financial Information</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Auditor</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial/AuditFirm/AuditFirmName">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Auditor Address</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block>
																								<xsl:for-each select="AuditFirm/Address1">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block>
																								<xsl:for-each select="AuditFirm/Address2">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block>
																								<xsl:for-each select="AuditFirm/Address3">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block>
																								<xsl:for-each select="AuditFirm/Postcode">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160; </xsl:text>
																								</fo:inline>
																								<xsl:for-each select="AuditFirm/Town">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Exempt Private Company</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial/ExemptPrivateCompany">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Financial year end</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial/FinancialYear">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Unqualified reports (Y/N)</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial/UnqualifiedReport">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Consolidated accounts (Y/N)</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial/ConsolidatedAccounts">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Date of tabling</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial/DateOfTabling">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<xsl:if
									test="count($XML/Response/Report/SMEProfile/Financials/Financial) != 5">
									<fo:block />
									<xsl:for-each select="$XML">
										<xsl:for-each select="Response">
											<xsl:for-each select="Report">
												<xsl:for-each select="SMEProfile">
													<xsl:for-each select="Financials">
														<xsl:for-each select="Financial">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table border="0px" color="black" font-size="11px"
																margin="0px" padding="0px" table-layout="fixed" width="100%"
																border-spacing="2pt">
																<fo:table-column column-width="550" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell border="0px"
																			border-style="solid" font-size="8pt" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="140" />
																							<fo:table-column column-width="230" />
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										color="#2c2c2c" font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										number-columns-spanned="2" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Summary of Financial Information</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Auditor</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="AuditFirm/AuditFirmName">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Auditor Address</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="AuditFirm/Address1">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="AuditFirm/Address2">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="AuditFirm/Address3">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																											<fo:block margin="0pt">
																												<fo:block>
																													<xsl:for-each select="AuditFirm/Postcode">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																													<fo:inline>
																														<xsl:text>&#160; </xsl:text>
																													</fo:inline>
																													<xsl:for-each select="AuditFirm/Town">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:block>
																											<fo:inline-container>
																												<fo:block>
																													<xsl:text>&#x2029;</xsl:text>
																												</fo:block>
																											</fo:inline-container>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Exempt Private Company</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="ExemptPrivateCompany">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Financial year end</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="FinancialYear">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Unqualified reports (Y/N)</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="UnqualifiedReport">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Consolidated accounts (Y/N)</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="ConsolidatedAccounts">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Date of tabling</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<xsl:for-each select="DateOfTabling">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block />
								</xsl:if>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
							</xsl:if>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<xsl:if
								test="count($XML/Response/Report/SMEProfile/Financials/Financial) = 5">
								<xsl:if test="Response/ReportAccess/BALSHEET =&apos;Y&apos;">
									<fo:table border="0px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="550" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table border="0px" color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border-spacing="2pt">
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf"
																				color="#2c2c2c" font-size="8pt" font-style="normal"
																				font-variant="normal" font-weight="bold"
																				number-columns-spanned="6" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Balance Sheet Items</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Financial year end</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialYear">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Non-current assets</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/NonCurrentAssets">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Current assets</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/CurrentAssets">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Non-current liabilities</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/NonCurrentLiabilities">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Current liabilities</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/CurrentLiabilities">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Share capital</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/ShareCapital">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Reserves</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/Reserves">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Minority interests</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="BalanceSheet/MinorityInterests">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<fo:block />
								<fo:block>
									<fo:leader leader-pattern="space" />
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block />
								</fo:block>
								<xsl:if test="Response/ReportAccess/PROFLOSS =&apos;Y&apos;">
									<fo:table border="0px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="550" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table border="0px" color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border-spacing="2pt">
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf"
																				color="#2c2c2c" font-size="8pt" font-style="normal"
																				font-variant="normal" font-weight="bold"
																				number-columns-spanned="6" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Income Statement Items</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Financial year end</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialYear">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Revenue</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="Income/Revenue">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Profit / (loss) before tax</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="Income/ProfitBeforeTax">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Profit / (loss) after tax</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="Income/ProfitAfterTax">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Net dividend</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="Income/NetDividend">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Minority Interests</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="right" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="Income/MinorityInterests">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<xsl:if test="Response/ReportAccess/FINRATIO =&apos;Y&apos;">
									<fo:block />
									<fo:block>
										<fo:leader leader-pattern="space" />
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block />
									</fo:block>
									<fo:table border="0px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="550" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table border="0px" color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border-spacing="2pt">
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell background-color="#9edbaf"
																				color="#2c2c2c" font-size="8pt" font-style="normal"
																				font-variant="normal" font-weight="bold"
																				number-columns-spanned="6" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Financial Ratios</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Financial year end</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialYear">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Current Ratio (Times)</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialRatio/CurrentRatio">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Gearing Ratio (Times)</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialRatio/GearingRatio">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>ROCE (Return on Capital Employed)%</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialRatio/ROCE">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Assets Turnover Ratio (Times)</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialRatio/TurnoverRatio">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell background-color="#e4fae6"
																				font-size="8pt" font-style="normal" font-variant="normal"
																				font-weight="normal" border="solid 1pt gray"
																				padding="2pt" display-align="center">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>Earnings Per Share (RM p/share)</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<xsl:for-each
																				select="$XML/Response/Report/SMEProfile/Financials/Financial">
																				<fo:table-cell font-size="6pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" text-align="center" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="FinancialRatio/EarningsPerShare">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</xsl:for-each>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:if>
							<xsl:if
								test="count($XML/Response/Report/SMEProfile/Financials/Financial) != 5">
								<fo:table border="0px" color="black" font-size="11px"
									margin="0px" padding="0px" table-layout="fixed" width="100%"
									border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-column column-width="proportional-column-width(1)" />
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="0px" font-size="8pt"
												padding="2pt" display-align="before">
												<fo:block>
													<xsl:if test="Response/ReportAccess/BALSHEET =&apos;Y&apos;">
														<xsl:for-each select="$XML">
															<xsl:for-each select="Response">
																<xsl:for-each select="Report">
																	<xsl:for-each select="SMEProfile">
																		<xsl:for-each select="Financials">
																			<xsl:for-each select="Financial">
																				<fo:block />
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="120" />
																							<fo:table-column column-width="150" />
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										color="#2c2c2c" font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										number-columns-spanned="2" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Balance Sheet Items</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Non-current assets</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="BalanceSheet/NonCurrentAssets">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Current assets</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="BalanceSheet/CurrentAssets">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Non-current liabilities</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each
																												select="BalanceSheet/NonCurrentLiabilities">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Current liabilities</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each
																												select="BalanceSheet/CurrentLiabilities">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Share capital</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="BalanceSheet/ShareCapital">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Reserves</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="BalanceSheet/Reserves">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Minority interests</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each
																												select="BalanceSheet/MinorityInterests">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</fo:block>
																				</fo:block>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:if>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="0px" font-size="8pt"
												padding="2pt" display-align="before">
												<fo:block>
													<xsl:if test="Response/ReportAccess/PROFLOSS =&apos;Y&apos;">
														<xsl:for-each select="$XML">
															<xsl:for-each select="Response">
																<xsl:for-each select="Report">
																	<xsl:for-each select="SMEProfile">
																		<xsl:for-each select="Financials">
																			<xsl:for-each select="Financial">
																				<fo:block />
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="120" />
																							<fo:table-column column-width="150" />
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										color="#2c2c2c" font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										number-columns-spanned="2" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Income Statement Items</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Revenue</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="Income/Revenue">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Profit / (loss) before tax</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="Income/ProfitBeforeTax">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Profit / (loss) after tax</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="Income/ProfitAfterTax">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Net dividend</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="Income/NetDividend">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Minority Interests</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell font-size="8pt"
																										font-style="normal" font-variant="normal"
																										font-weight="normal" text-align="right"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="Income/MinorityInterests">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</fo:block>
																				</fo:block>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:if>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<fo:block />
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border="0PX" font-size="8pt"
										padding="2pt" display-align="center">
										<fo:block>
											<xsl:if test="Response/ReportAccess/TRDAVAILABLE =&apos;Y&apos;">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="proportional-column-width(1)" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block color="#00008b" font-size="9pt"
																				font-weight="bold" height="10px" margin="0px"
																				padding="0px" text-align="left">
																				<fo:block>
																					<fo:inline>
																						<xsl:text>NON-BANK CREDIT</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:block>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</fo:block>
												</fo:block>
											</xsl:if>
											<xsl:if test="Response/ReportAccess/TRDAVAILABLE =&apos;Y&apos;">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table color="black" font-size="11px" margin="0px"
															padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
															border-spacing="2pt">
															<fo:table-column column-width="250" />
															<fo:table-column column-width="300" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell background-color="#9edbaf"
																		color="#2c2c2c" font-size="8pt" font-style="normal"
																		font-variant="normal" font-weight="bold"
																		number-columns-spanned="2" border="solid 1pt gray"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Non-Bank Credit Information Availability For Last 12 Months</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell background-color="#e4fae6"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Non-Bank Credit Information Availability Indicator</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell background-color="white"
																		font-size="8pt" font-style="normal" font-variant="normal"
																		font-weight="normal" border="solid 1pt gray" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="TradeAvailable">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</fo:block>
												</fo:block>
												<fo:block>
													<fo:leader leader-pattern="space" />
												</fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block />
												</fo:block>
											</xsl:if>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>

						<fo:block />

						<!-- Property Asset Information (Start) -->
						<xsl:if test="Response/ReportAccess/PROPINFO =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0px" color="black" font-size="11px"
											margin="0px" padding="0px" table-layout="fixed" width="100%"
											border-spacing="2pt">
											<fo:table-column column-width="proportional-column-width(1)" />
											<fo:table-body start-indent="0pt" >
												<fo:table-row>
													<fo:table-cell border="0px" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block color="#00008b" font-size="9pt"
																font-weight="bold" height="10px" margin="0px"
																padding="0px" text-align="left">
																<fo:block>
																	<fo:inline>
																		<xsl:text>PROPERTY INFORMATION</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
											</fo:table>
										</fo:block>
									</fo:block>								
							<fo:table border="0px" color="black" font-size="10px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table color="black" font-size="9px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
													<fo:table-column column-width="3%" />
													<fo:table-column column-width="15%"/>
													<fo:table-column column-width="5%"/>
													<fo:table-column column-width="15%"/>
													<fo:table-column column-width="8%"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="5%"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="5%"/>
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-weight="inherit">
																		<xsl:text>No</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-weight="inherit">
																		<xsl:text>Owner Name</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-weight="inherit">
																		<xsl:text>+ Other Owner</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-style="inherit">
																		<xsl:text>Address</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-style="inherit">
																		<xsl:text>Town</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-style="inherit">
																		<xsl:text>Project Name</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Property Details</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-columns-spanned="2" text-align="center">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Area</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Price (PSF)</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>	
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Full Trx Price / Date</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>% Share</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>															
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Land</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Built-Up</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>													
												
												<xsl:for-each select="$XML">
													<xsl:for-each select="Response">
														<xsl:for-each select="Report">
															<xsl:for-each select="Profile">
																<xsl:for-each select="Properties">
																	<xsl:for-each select="Property">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:table color="black" font-size="7px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
																			<fo:table-column column-width="3%" />
																			<fo:table-column column-width="15%"/>
																			<fo:table-column column-width="5%"/>
																			<fo:table-column column-width="15%"/>
																			<fo:table-column column-width="8%"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="5%"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="5%"/>
																			<fo:table-body start-indent="0pt">
																				<fo:table-row>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="No">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="OwnerName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="NoOfOwner">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>																					
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="LongAddress">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Town">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>																					
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="SchemeName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Sector">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																						<fo:block>
																							<xsl:for-each select="PropertyType">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>	
																						<fo:block>
																							<xsl:for-each select="BldTypeSubInfo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>	
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="LotArea">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									sqft 
																								</xsl:if>																								
																							</xsl:for-each> 
																			
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="BuildUpArea">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									sqft 
																								</xsl:if>																								
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>	
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="PricePsf">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									RM 
																								</xsl:if>																									
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each> 
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block> 
																							<xsl:for-each select="TrxPrice">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									RM 
																								</xsl:if>																									
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																						<fo:block>
																							<xsl:for-each select="TrxDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>																							
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="SharePercentage">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>																					
																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>		
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>														
						</xsl:if>
						<!-- Property Asset Information (End) -->
						<!-- Property Proxy Information (Start) -->
						<xsl:if test="Response/ReportAccess/PROPPROXY =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0px" color="black" font-size="11px"
											margin="0px" padding="0px" table-layout="fixed" width="100%"
											border-spacing="2pt">
											<fo:table-column column-width="proportional-column-width(1)" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="0px" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block color="#00008b" font-size="9pt"
																font-weight="bold" height="10px" margin="0px"
																padding="0px" text-align="left">
																<fo:block>
																	<fo:inline>
																		<xsl:text>PROPERTY INFORMATION</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
											</fo:table>
										</fo:block>
									</fo:block>								
							<fo:table border="0px" color="black" font-size="7px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table color="black" font-size="7px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
													<fo:table-column column-width="3%" />
													<fo:table-column column-width="13%"/>
													<fo:table-column column-width="5%"/>
													<fo:table-column column-width="13%"/>
													<fo:table-column column-width="8%"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="5%"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="4%"/>
													<fo:table-column column-width="10%"/>
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-weight="inherit">
																		<xsl:text>No</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-weight="inherit">
																		<xsl:text>Owner Name</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-weight="inherit">
																		<xsl:text>+ Other Owner</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-style="inherit">
																		<xsl:text>Address</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-style="inherit">
																		<xsl:text>Town</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px" font-style="inherit">
																		<xsl:text>Project Name</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Property Details</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-columns-spanned="2" text-align="center">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Area</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Price (PSF)</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>	
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Full Trx Price / Date</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>% Share</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>	
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center" number-rows-spanned="2">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Proxy Price</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Land</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#9edbaf" border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-size="7px">
																		<xsl:text>Built-Up</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>													
												
												<xsl:for-each select="$XML">
													<xsl:for-each select="Response">
														<xsl:for-each select="Report">
															<xsl:for-each select="Profile">
																<xsl:for-each select="PropertyProxies">
																	<xsl:for-each select="PropertyProxy">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:table color="black" font-size="6px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
																			<fo:table-column column-width="3%" />
																			<fo:table-column column-width="13%"/>
																			<fo:table-column column-width="5%"/>
																			<fo:table-column column-width="13%"/>
																			<fo:table-column column-width="8%"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="5%"/>
																			<fo:table-column column-width="proportional-column-width(1)"/>
																			<fo:table-column column-width="4%"/>
																			<fo:table-column column-width="10%"/>
																			<fo:table-body start-indent="0pt">
																				<fo:table-row>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="No">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="OwnerName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="NoOfOwner">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>																					
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="LongAddress">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Town">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>																					
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="SchemeName">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="Sector">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																						<fo:block>
																							<xsl:for-each select="PropertyType">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>	
																						<fo:block>
																							<xsl:for-each select="BldTypeSubInfo">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>	
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="LotArea">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									sqft 
																								</xsl:if>																								
																							</xsl:for-each> 
																			
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="BuildUpArea">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									sqft 
																								</xsl:if>																								
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>	
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="PricePsf">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									RM 
																								</xsl:if>																									
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each> 
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block> 
																							<xsl:for-each select="TrxPrice">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									RM 
																								</xsl:if>																									
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																						<fo:block>
																							<xsl:for-each select="TrxDate">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>																							
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="SharePercentage">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																						<fo:block>
																							<xsl:for-each select="ProxyPrice">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:if test="$value-of-template != &apos;-&apos;">
																									<xsl:if test="$value-of-template != &apos;N/A&apos;">
																										RM 
																									</xsl:if> 
																								</xsl:if>																									
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline font-size="6px">
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</fo:block>
																					</fo:table-cell>																					

																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>		
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>														
						</xsl:if>
						<!-- Property Proxy Information (End) -->
						
						<fo:block />

						<xsl:if
							test="Response/ReportAccess/IPINFO =&apos;Y&apos;  and (Response/Report/InterestParties/InterestParty/Numbering !=null or Response/Report/InterestParties/InterestParty/Numbering !=&apos;&apos;)">
							<fo:block />
							<xsl:for-each select="$XML">
								<xsl:for-each select="Response">
									<xsl:for-each select="Report">
										<xsl:for-each select="InterestParties">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table border="0px" color="black" font-size="11px"
												margin="0px" padding="0px" table-layout="fixed" width="100%"
												border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border="0px" font-size="8pt"
															padding="2pt" display-align="center">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table border="0px" color="black" font-size="11px"
																	margin="0px" padding="0px" table-layout="fixed" width="100%"
																	border-spacing="2pt">
																	<fo:table-column column-width="proportional-column-width(1)" />
																	<fo:table-body start-indent="0pt">
																		<fo:table-row>
																			<fo:table-cell border="0px" padding="2pt"
																				display-align="center">
																				<fo:block>
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:block color="#00008b" font-size="9pt"
																						font-weight="bold" height="10px" margin="0px"
																						padding="0px" text-align="left">
																						<fo:block page-break-before="always">
																							<fo:inline>
																								<xsl:text>BANKING INFORMATION OF BUSINESS INTEREST PARTY(IES)</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											<xsl:for-each select="InterestParty">
												<fo:block page-break-after="always">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table border="0px" color="black" font-size="11px"
																margin="0px" padding="0px" table-layout="fixed" width="100%"
																border-spacing="2pt">
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell border="0px" font-size="8pt"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table border="0px" color="black"
																					font-size="11px" margin="0px" padding="0px"
																					table-layout="fixed" width="100%" border-spacing="2pt">
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell border="0px"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<fo:inline-container>
																										<fo:block>
																											<xsl:text>&#x2029;</xsl:text>
																										</fo:block>
																									</fo:inline-container>
																									<fo:block color="#00008b" font-size="9pt"
																										font-weight="bold" height="10px" margin="0px"
																										padding="0px" text-align="left">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>RELATED PARTY </xsl:text>
																											</fo:inline>
																											<xsl:for-each select="Numbering">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:block>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table border="0px" color="black" font-size="11px"
																margin="0px" padding="0px" table-layout="fixed" width="100%"
																border-spacing="2pt">
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell border="0px" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="200" />
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-column column-width="50" />
																					<fo:table-column column-width="proportional-column-width(1)" />
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="#9edbaf"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Name</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#9edbaf"
																								font-size="8pt" border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Passport/IC No</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#9edbaf"
																								font-size="8pt" border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Date of Birth</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#9edbaf"
																								font-size="8pt" border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Nationality</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#9edbaf"
																								font-size="8pt" border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Relationship</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell font-size="8pt"
																								font-style="normal" font-variant="normal"
																								font-weight="normal" border="solid 1pt gray"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<xsl:for-each select="Name">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="IDNo1">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="DateBR">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="Nationality">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell font-size="8pt"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<xsl:for-each select="Relationship">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates />
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when
																												test="contains(string($value-of-template),'&#x2029;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template" />
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table border="0px" color="black" font-size="11px"
																margin="0px" padding="0px" table-layout="fixed" width="100%"
																border-spacing="2pt">
																<fo:table-column column-width="proportional-column-width(1)" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell border="0px" font-size="8pt"
																			padding="2pt" display-align="center">
																			<fo:block />
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell border="0px" font-size="8pt"
																			padding="2pt" display-align="center">
																			<fo:block />
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table border="0px" color="black" font-size="11px"
														margin="0px" padding="0px" table-layout="fixed" width="100%"
														border-spacing="2pt">
														<fo:table-column column-width="proportional-column-width(1)" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell border="0px" padding="2pt"
																	display-align="center">
																	<fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:table color="black" font-size="11px"
																					margin="0px" padding="0px" table-layout="fixed"
																					width="100%" border="solid 1pt gray"
																					border-spacing="2pt">
																					<fo:table-column column-width="250" />
																					<fo:table-column column-width="100" />
																					<fo:table-body start-indent="0pt">
																						<fo:table-row>
																							<fo:table-cell background-color="#9edbaf"
																								color="#2c2c2c" font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="bold"
																								number-columns-spanned="2" border="solid 1pt gray"
																								padding="2pt" display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Address Info</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																						<fo:table-row>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Address</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																							<fo:table-cell background-color="#e4fae6"
																								font-size="8pt" font-style="normal"
																								font-variant="normal" font-weight="normal"
																								border="solid 1pt gray" padding="2pt"
																								display-align="center">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Date Created</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</fo:table-body>
																				</fo:table>
																				<xsl:for-each select="CRSEntities">
																					<xsl:for-each select="CRSEntity">
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="250" />
																							<fo:table-column column-width="100" />
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="transparent"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="before">
																										<fo:block>
																											<xsl:for-each select="Add">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="transparent"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="before">
																										<fo:block>
																											<xsl:for-each select="DateCreated">
																												<xsl:variable name="value-of-template">
																													<xsl:apply-templates />
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when
																														test="contains(string($value-of-template),'&#x2029;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template" />
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:block>
																		</fo:block>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
													<fo:block>
														<fo:leader leader-pattern="space" />
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block />
													</fo:block>
													<xsl:if test="//Response/ReportAccess/IPLOANINFO =&apos;Y&apos;">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="proportional-column-width(1)" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="8pt"
																		padding="2pt" display-align="center">
																		<fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<xsl:for-each select="LoanInfo">
																						<xsl:for-each select="Warning">
																							<fo:table color="black" font-size="11px"
																								margin="0px" padding="0px" table-layout="fixed"
																								width="50%" border="solid 1pt gray"
																								border-spacing="2pt">
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-body start-indent="0pt">
																									<fo:table-row>
																										<fo:table-cell background-color="#9edbaf"
																											color="#2c2c2c" font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="bold"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center"
																											number-columns-spanned="4">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Subject Status</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Warning</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="left"
																											text-align="left" number-columns-spanned="3">
																											<fo:block>
																												<xsl:apply-templates />
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</fo:table-body>
																							</fo:table>
																							<fo:block>
																								<fo:leader leader-pattern="space" />
																							</fo:block>
																							<fo:inline-container>
																								<fo:block>
																									<xsl:text>&#x2029;</xsl:text>
																								</fo:block>
																							</fo:inline-container>
																						</xsl:for-each>
																						<!--CCRIS Summary Report - BIP -->
																						<xsl:for-each select="Summary">
																							<fo:table color="black" font-size="11px"
																								margin="0px" padding="0px" table-layout="fixed"
																								width="90%" border="solid 1pt gray"
																								border-spacing="2pt">
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-column column-width="proportional-column-width(1)" />
																								<fo:table-body start-indent="0pt">
																									<fo:table-row>
																										<fo:table-cell background-color="#9edbaf"
																											color="#2c2c2c" font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="bold"
																											number-columns-spanned="4" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Summary Credit Report</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell
																											number-columns-spanned="4" background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Total No. of Credit Applications</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>No. of Applications</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Total Amount (RM)</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>A. Approved for past 12 Months</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="ApprovedApp/No">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="ApprovedApp/TotalAmt">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>B. Pending</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="PendingApp/No">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="PendingApp/TotalAmt">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell
																											number-columns-spanned="4" background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Summary of Potential &#38; Current Liablities</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Outstanding (RM)</xsl:text>
																												</fo:inline>
																											</fo:block>
																											<fo:block font-size="6pt">
																												<fo:inline>
																													<xsl:text>(Exclude FEC)</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Total Limit (RM)</xsl:text>
																												</fo:inline>
																											</fo:block>
																											<fo:block font-size="6pt">
																												<fo:inline>
																													<xsl:text>(Exclude FEC)</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>FEC Limit (RM)</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>A. As Borrower</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Borrower/Outstanding">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Borrower/Limit">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Borrower/Fec">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>B. As Guarantor</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Guarantor/Limit">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Guarantor/Fec">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>C. Total</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center" text-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Total/Limit">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center"
																											text-align="center">
																											<fo:block>
																												<xsl:for-each select="Total/Fec">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Legal Action Taken</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" text-align="center"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<xsl:for-each select="LegSts">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text>Special Attention Account</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" text-align="center"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<xsl:for-each select="SpecAttn">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell background-color="#e4fae6"
																											font-size="8pt" font-style="normal"
																											font-variant="normal" font-weight="normal"
																											border="solid 1pt gray" padding="2pt"
																											display-align="center">
																											<fo:block>
																												<fo:inline>
																													<xsl:text></xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</fo:table-body>
																							</fo:table>
																						</xsl:for-each>
																						<!-- CCRIS Summary Report - BIP (End) -->
																						<fo:block>
																							<fo:leader leader-pattern="space" />
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block />
																						</fo:block>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="12"/>
																							<fo:table-column column-width="35"/>
																							<fo:table-column column-width="13"/>
																							<fo:table-column column-width="27"/>
																							<fo:table-column column-width="23"/>
																							<fo:table-column column-width="38"/>
																							<fo:table-column column-width="43"/>
																							<fo:table-column column-width="35"/>
																							<fo:table-column column-width="43"/>
																							<fo:table-column column-width="30"/>
																							<fo:table-column column-width="50"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="10"/>
																							<fo:table-column column-width="48"/>
																							<fo:table-column column-width="35"/>
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-weight="bold"
																										number-columns-spanned="25" border="solid 1pt gray"
																										padding="2pt" height="18" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Loan Information</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>No</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Date</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Sts</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Capacity</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:choose>
																												<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																													<xsl:text>Lender</xsl:text>
																												</xsl:when>
																												<xsl:otherwise>
																													<xsl:text>Lender Type</xsl:text>
																												</xsl:otherwise>
																												</xsl:choose>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Facility</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Total Outstanding Balance (RM)</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Date Balance Updated</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Limit (RM)</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Prin. Repmt. Term</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Col Type</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" number-columns-spanned="12"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Conduct Of Account For Last 12 Months</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>LGL STS</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Date Status Updated</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										number-columns-spanned="11" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										border="0px" font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										number-columns-spanned="10" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlYr">
																												<xsl:for-each select="Y1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										border="0px" font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										number-columns-spanned="2" padding="2pt"
																										text-align="right" display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlYr">
																												<xsl:for-each select="Y2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										number-columns-spanned="11" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline>
																												<xsl:text>Outstanding Credit</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M1">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M2">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M3">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M4">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M5">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M6">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M7">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M8">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M9">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M10">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M11">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<xsl:for-each select="InstlMth">
																												<xsl:for-each select="M12">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:for-each>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="6pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</xsl:for-each>
																				</fo:block>
																			</fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<xsl:for-each select="LoanInfo">
																						<xsl:for-each select="Accounts">
																							<xsl:for-each select="Account">
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:table color="black" font-size="11px"
																											margin="0px" padding="0px" table-layout="fixed"
																											width="100%" border="solid 1pt gray"
																											border-spacing="2pt">
																											<fo:table-column column-width="12"/>
																											<fo:table-column column-width="35"/>
																											<fo:table-column column-width="13"/>
																											<fo:table-column column-width="27"/>
																											<fo:table-column column-width="23"/>
																											<fo:table-column column-width="38"/>
																											<fo:table-column column-width="43"/>
																											<fo:table-column column-width="35"/>
																											<fo:table-column column-width="43"/>
																											<fo:table-column column-width="30"/>
																											<fo:table-column column-width="50"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="48"/>
																											<fo:table-column column-width="35"/>
																											<fo:table-body start-indent="0pt">
																												<fo:table-row>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="No">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="ApprovedDate">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="Capacity">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:choose>
																															<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																																<xsl:for-each select="Lender">
																																	<xsl:variable name="value-of-template">
																																		<xsl:apply-templates />
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when
																																			test="contains(string($value-of-template),'&#x2029;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template" />
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template" />
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:otherwise>
																																<xsl:for-each select="LenderType">
																																	<xsl:variable name="value-of-template">
																																		<xsl:apply-templates />
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when
																																			test="contains(string($value-of-template),'&#x2029;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template" />
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template" />
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:otherwise>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" text-align="right"
																														display-align="center">
																														<fo:block>
																															<xsl:for-each select="Limit">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="MColTyp">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="LegSts">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																														<xsl:for-each select="SubAccs">
																														<xsl:for-each select="SubAcc">
																																<xsl:variable name="count" select="count(InstlArr/*[number() &gt; 1])"/>
																																<xsl:if test="$count > 2">
																																	<xsl:attribute name="background-color">red</xsl:attribute>
																																	<xsl:attribute name="color">white</xsl:attribute>
																																</xsl:if>
																															</xsl:for-each>
																														</xsl:for-each>
																															<xsl:for-each select="LegDate">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																												</fo:table-row>
																											</fo:table-body>
																										</fo:table>
																									</fo:block>
																								</fo:block>
																								<xsl:for-each select="MCols">
																									<xsl:for-each select="MCol">
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<fo:inline-container>
																													<fo:block>
																														<xsl:text>&#x2029;</xsl:text>
																													</fo:block>
																												</fo:inline-container>
																												<fo:table color="black" font-size="11px"
																													margin="0px" padding="0px" table-layout="fixed"
																													width="100%" border="solid 1pt gray"
																													border-spacing="2pt">
																													<fo:table-column column-width="12"/>
																													<fo:table-column column-width="35"/>
																													<fo:table-column column-width="13"/>
																													<fo:table-column column-width="27"/>
																													<fo:table-column column-width="23"/>
																													<fo:table-column column-width="38"/>
																													<fo:table-column column-width="43"/>
																													<fo:table-column column-width="35"/>
																													<fo:table-column column-width="43"/>
																													<fo:table-column column-width="30"/>
																													<fo:table-column column-width="50"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="48"/>
																													<fo:table-column column-width="35"/>
																													<fo:table-body start-indent="0pt">
																														<fo:table-row>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" text-align="right"
																																display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:for-each select="MColTyp">
																																		<xsl:variable name="value-of-template">
																																			<xsl:apply-templates />
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when
																																				test="contains(string($value-of-template),'&#x2029;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																														</fo:table-row>
																													</fo:table-body>
																												</fo:table>
																											</fo:block>
																										</fo:block>
																									</xsl:for-each>
																								</xsl:for-each>
																								<xsl:for-each select="SubAccs">
																									<xsl:for-each select="SubAcc">
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:block margin="0pt">
																											<fo:block>
																												<fo:inline-container>
																													<fo:block>
																														<xsl:text>&#x2029;</xsl:text>
																													</fo:block>
																												</fo:inline-container>
																												<fo:table color="black" font-size="11px"
																													margin="0px" padding="0px" table-layout="fixed"
																													width="100%" border="solid 1pt gray"
																													border-spacing="2pt">
																													<fo:table-column column-width="12"/>
																													<fo:table-column column-width="35"/>
																													<fo:table-column column-width="12"/>
																													<fo:table-column column-width="27"/>
																													<fo:table-column column-width="23"/>
																													<fo:table-column column-width="40"/>
																													<fo:table-column column-width="45"/>
																													<fo:table-column column-width="35"/>
																													<fo:table-column column-width="45"/>
																													<fo:table-column column-width="30"/>
																													<fo:table-column column-width="50"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="10"/>
																													<fo:table-column column-width="50"/>
																													<fo:table-column column-width="35"/>
																													<fo:table-body start-indent="0pt">
																														<fo:table-row>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:for-each select="AccSts">
																																		<xsl:variable name="value-of-template">
																																			<xsl:apply-templates />
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when
																																				test="contains(string($value-of-template),'&#x2029;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:choose>
																																	<xsl:when test="//Response/ReportAccess/FACTYP = &apos;D&apos; or //Response/ReportType  = &apos;ICR-SELF&apos;">
																																		<xsl:for-each select="FacilityDescription">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<xsl:for-each select="Facility">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:otherwise>
																																	</xsl:choose>
																																
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" text-align="right"
																																display-align="center">
																																<fo:block>
																																	<xsl:for-each select="TotalOutstanding">
																																		<xsl:variable name="value-of-template">
																																			<xsl:apply-templates />
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when
																																				test="contains(string($value-of-template),'&#x2029;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:for-each select="CrPosDate">
																																		<xsl:variable name="value-of-template">
																																			<xsl:apply-templates />
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when
																																				test="contains(string($value-of-template),'&#x2029;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:value-of select="InstlAmt"/>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:for-each select="RepayTerm">
																																		<xsl:variable name="value-of-template">
																																			<xsl:apply-templates />
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when
																																				test="contains(string($value-of-template),'&#x2029;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block>
																																	<xsl:for-each select="SColTyp">
																																		<xsl:variable name="value-of-template">
																																			<xsl:apply-templates />
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when
																																				test="contains(string($value-of-template),'&#x2029;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template" />
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																																font-size="5pt" font-style="normal"
																																font-variant="normal" font-weight="normal"
																																border="solid 1pt gray" padding="0pt"
																																display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M1">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M2">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M3">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M4">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M5">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M6">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M7">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M8">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M9">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M10">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M11">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell background-color="white"
																															font-size="5pt" font-style="normal"
																															font-variant="normal" font-weight="normal"
																															border="solid 1pt gray" padding="0pt"
																															display-align="center" text-align="center">
																																<fo:block>
																																	<xsl:for-each select="InstlArr">
																																		<xsl:for-each select="M12">
																																			<xsl:variable name="value-of-template">
																																				<xsl:apply-templates />
																																			</xsl:variable>
																																			<xsl:if test="$value-of-template &gt; 1">
																																				<xsl:attribute name="background-color">red</xsl:attribute>
																																				<xsl:attribute name="color">white</xsl:attribute>
																																			</xsl:if>
																																			<xsl:choose>
																																				<xsl:when
																																					test="contains(string($value-of-template),'&#x2029;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template" />
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</fo:block>
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																															<fo:table-cell
																																background-color="white" font-size="6pt"
																																font-style="normal" font-variant="normal"
																																font-weight="normal" border="solid 1pt gray"
																																padding="2pt" display-align="center">
																																<fo:block />
																															</fo:table-cell>
																														</fo:table-row>
																													</fo:table-body>
																												</fo:table>
																											</fo:block>
																										</fo:block>
																										<xsl:for-each select="SCols">
																											<xsl:for-each select="SCol">
																												<fo:inline-container>
																													<fo:block>
																														<xsl:text>&#x2029;</xsl:text>
																													</fo:block>
																												</fo:inline-container>
																												<fo:block margin="0pt">
																													<fo:block>
																														<fo:inline-container>
																															<fo:block>
																																<xsl:text>&#x2029;</xsl:text>
																															</fo:block>
																														</fo:inline-container>
																														<fo:table color="black"
																															font-size="11px" margin="0px" padding="0px"
																															table-layout="fixed" width="100%"
																															border="solid 1pt gray" border-spacing="2pt">
																														<fo:table-column column-width="12"/>
																														<fo:table-column column-width="35"/>
																														<fo:table-column column-width="12"/>
																														<fo:table-column column-width="27"/>
																														<fo:table-column column-width="23"/>
																														<fo:table-column column-width="40"/>
																														<fo:table-column column-width="45"/>
																														<fo:table-column column-width="35"/>
																														<fo:table-column column-width="45"/>
																														<fo:table-column column-width="30"/>
																														<fo:table-column column-width="50"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="10"/>
																														<fo:table-column column-width="50"/>
																														<fo:table-column column-width="35"/>
																															<fo:table-body
																																start-indent="0pt">
																																<fo:table-row>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" text-align="right"
																																		display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block>
																																			<xsl:for-each select="SColTyp">
																																				<xsl:variable name="value-of-template">
																																					<xsl:apply-templates />
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when
																																						test="contains(string($value-of-template),'&#x2029;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template" />
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template" />
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</fo:block>
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																	<fo:table-cell
																																		background-color="white" font-size="6pt"
																																		font-style="normal" font-variant="normal"
																																		font-weight="normal" border="solid 1pt gray"
																																		padding="2pt" display-align="center">
																																		<fo:block />
																																	</fo:table-cell>
																																</fo:table-row>
																															</fo:table-body>
																														</fo:table>
																													</fo:block>
																												</fo:block>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<xsl:if
																							test="//Response/ReportAccess/IPLOANINFO =&apos;Y&apos;">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline-container>
																										<fo:block>
																											<xsl:text>&#x2029;</xsl:text>
																										</fo:block>
																									</fo:inline-container>
																									<fo:table color="black" font-size="11px"
																										margin="0px" padding="0px" table-layout="fixed"
																										width="100%" border="solid 1pt gray"
																										border-spacing="2pt">
																										<fo:table-column column-width="12"/>
																										<fo:table-column column-width="35"/>
																										<fo:table-column column-width="17"/>
																										<fo:table-column column-width="27"/>
																										<fo:table-column column-width="23"/>
																										<fo:table-column column-width="32"/>
																										<fo:table-column column-width="45"/>
																										<fo:table-column column-width="35"/>
																										<fo:table-column column-width="35"/>
																										<fo:table-column column-width="30"/>
																										<fo:table-column column-width="50"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="10"/>
																										<fo:table-column column-width="50"/>
																										<fo:table-column column-width="35"/>
																										<fo:table-body start-indent="0pt">
																											<fo:table-row>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block>
																														<fo:inline>
																															<xsl:text>Total Outstanding Balance (RM):</xsl:text>
																														</fo:inline>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" text-align="right"
																													display-align="center">
																													<fo:block>
																														<xsl:for-each select="TotalBal">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block>
																														<fo:inline>
																															<xsl:text>Total Limit:</xsl:text>
																														</fo:inline>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" text-align="right"
																													display-align="center">
																													<fo:block>
																														<xsl:for-each select="TotalLimit">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																												<fo:table-cell
																													background-color="white" font-size="6pt"
																													font-style="normal" font-variant="normal"
																													font-weight="normal" border="solid 1pt gray"
																													padding="2pt" display-align="center">
																													<fo:block />
																												</fo:table-cell>
																											</fo:table-row>
																										</fo:table-body>
																									</fo:table>
																								</fo:block>
																							</fo:block>
																						</xsl:if>
																					</xsl:for-each>
																				</fo:block>
																			</fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="354" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="50" />
																						<fo:table-column column-width="35" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="6pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Special Attention Account</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</fo:block>
																			</fo:block>
																			<xsl:for-each select="LoanInfo">
																				<xsl:for-each select="SpecAttnAccs">
																					<xsl:for-each select="SpecAttnAcc">
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:table color="black" font-size="11px"
																									margin="0px" padding="0px" table-layout="fixed"
																									width="100%" border="solid 1pt gray"
																									border-spacing="2pt">
																									<fo:table-column column-width="12"/>
																									<fo:table-column column-width="35"/>
																									<fo:table-column column-width="12"/>
																									<fo:table-column column-width="27"/>
																									<fo:table-column column-width="23"/>
																									<fo:table-column column-width="40"/>
																									<fo:table-column column-width="45"/>
																									<fo:table-column column-width="35"/>
																									<fo:table-column column-width="45"/>
																									<fo:table-column column-width="30"/>
																									<fo:table-column column-width="50"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="10"/>
																									<fo:table-column column-width="50"/>
																									<fo:table-column column-width="35"/>
																									<fo:table-body start-indent="0pt">
																										<fo:table-row>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="No">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="ApprovedDate">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="Capacity">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:choose>
																													<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																														<xsl:for-each select="Lender">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</xsl:when>
																													<xsl:otherwise>
																														<xsl:for-each select="LenderType">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</xsl:otherwise>
																													</xsl:choose>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:choose>
																													<xsl:when test="//Response/ReportAccess/FACTYP = &apos;D&apos; or //Response/ReportType  = &apos;ICR-SELF&apos;">
																														<xsl:for-each select="FacilityDescription">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</xsl:when>
																													<xsl:otherwise>
																														<xsl:for-each select="Facility">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>

																													</xsl:otherwise>
																													</xsl:choose>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="CrPosDate">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="LegSts">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="LegDate">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</fo:table-body>
																								</fo:table>
																							</fo:block>
																						</fo:block>
																						<xsl:for-each select="Facilities">
																							<xsl:for-each select="Facility">
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:block margin="0pt">
																									<fo:block>
																										<fo:inline-container>
																											<fo:block>
																												<xsl:text>&#x2029;</xsl:text>
																											</fo:block>
																										</fo:inline-container>
																										<fo:table color="black" font-size="11px"
																											margin="0px" padding="0px" table-layout="fixed"
																											width="100%" border="solid 1pt gray"
																											border-spacing="2pt">
																											<fo:table-column column-width="12"/>
																											<fo:table-column column-width="35"/>
																											<fo:table-column column-width="12"/>
																											<fo:table-column column-width="27"/>
																											<fo:table-column column-width="23"/>
																											<fo:table-column column-width="40"/>
																											<fo:table-column column-width="45"/>
																											<fo:table-column column-width="35"/>
																											<fo:table-column column-width="45"/>
																											<fo:table-column column-width="30"/>
																											<fo:table-column column-width="50"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="10"/>
																											<fo:table-column column-width="50"/>
																											<fo:table-column column-width="35"/>
																											<fo:table-body start-indent="0pt">
																												<fo:table-row>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="val">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" text-align="right"
																														display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block>
																															<xsl:for-each select="date">
																																<xsl:variable name="value-of-template">
																																	<xsl:apply-templates />
																																</xsl:variable>
																																<xsl:choose>
																																	<xsl:when
																																		test="contains(string($value-of-template),'&#x2029;')">
																																		<fo:block>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:block>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:copy-of select="$value-of-template" />
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:for-each>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																													<fo:table-cell
																														background-color="white" font-size="6pt"
																														font-style="normal" font-variant="normal"
																														font-weight="normal" border="solid 1pt gray"
																														padding="2pt" display-align="center">
																														<fo:block />
																													</fo:table-cell>
																												</fo:table-row>
																											</fo:table-body>
																										</fo:table>
																									</fo:block>
																								</fo:block>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:block />
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block>
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="11px"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="354" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="10" />
																						<fo:table-column column-width="50" />
																						<fo:table-column column-width="35" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="6pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block>
																										<fo:inline>
																											<xsl:text>Credit Application</xsl:text>
																										</fo:inline>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																								<fo:table-cell background-color="#e4fae6"
																									font-size="8pt" font-style="normal"
																									font-variant="normal" font-weight="normal"
																									border="solid 1pt gray" padding="2pt"
																									display-align="center">
																									<fo:block />
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</fo:block>
																			</fo:block>
																			<xsl:for-each select="LoanInfo">
																				<xsl:for-each select="Applications">
																					<xsl:for-each select="Application">
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline-container>
																									<fo:block>
																										<xsl:text>&#x2029;</xsl:text>
																									</fo:block>
																								</fo:inline-container>
																								<fo:table color="black" font-size="11px"
																									margin="0px" padding="0px" table-layout="fixed"
																									width="100%" border="solid 1pt gray"
																									border-spacing="2pt">
																								<fo:table-column column-width="12"/>
																								<fo:table-column column-width="35"/>
																								<fo:table-column column-width="12"/>
																								<fo:table-column column-width="27"/>
																								<fo:table-column column-width="23"/>
																								<fo:table-column column-width="40"/>
																								<fo:table-column column-width="45"/>
																								<fo:table-column column-width="35"/>
																								<fo:table-column column-width="45"/>
																								<fo:table-column column-width="30"/>
																								<fo:table-column column-width="50"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="10"/>
																								<fo:table-column column-width="50"/>
																								<fo:table-column column-width="35"/>
																									<fo:table-body start-indent="0pt">
																										<fo:table-row>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="No">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="Date">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="Sts">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="Capacity">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:choose>
																													<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																														<xsl:for-each select="Lender">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</xsl:when>
																													<xsl:otherwise>
																														<xsl:for-each select="LenderType">
																															<xsl:variable name="value-of-template">
																																<xsl:apply-templates />
																															</xsl:variable>
																															<xsl:choose>
																																<xsl:when
																																	test="contains(string($value-of-template),'&#x2029;')">
																																	<fo:block>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:block>
																																</xsl:when>
																																<xsl:otherwise>
																																	<fo:inline>
																																		<xsl:copy-of select="$value-of-template" />
																																	</fo:inline>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:for-each>
																													</xsl:otherwise>
																													</xsl:choose>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block>
																													<xsl:for-each select="AmtAppl">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates />
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when
																																test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template" />
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="6pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																											<fo:table-cell
																												background-color="white" font-size="8pt"
																												font-style="normal" font-variant="normal"
																												font-weight="normal" border="solid 1pt gray"
																												padding="2pt" display-align="center">
																												<fo:block />
																											</fo:table-cell>
																										</fo:table-row>

																										<fo:table-row>
																											<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																												<fo:block/>
																											</fo:table-cell>
																											<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																												<fo:block>
																													<fo:inline>
																														<xsl:text>Property Address:</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" number-columns-spanned="8" display-align="center">
																												<fo:block>
																													<xsl:for-each select="PropertyAddress">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates/>
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>																								
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
																												<fo:block>
																													<fo:inline>
																														<xsl:text>Property Status:</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell background-color="white" font-size="6pt" font-style="normal" font-variant="normal" font-weight="normal" border="solid 1pt gray" padding="2pt" number-columns-spanned="14" display-align="center">
																												<fo:block>
																													<xsl:for-each select="PropertyStatus">
																														<xsl:variable name="value-of-template">
																															<xsl:apply-templates/>
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template"/>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>																								
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>																												
																											</fo:table-body>
																								</fo:table>
																							</fo:block>
																						</fo:block>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:block />
																			<xsl:if
																				test="//Response/ReportAccess/IPLOANINFO =&apos;U&apos;">
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x2029;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:table color="black" font-size="11px"
																							margin="0px" padding="0px" table-layout="fixed"
																							width="100%" border="solid 1pt gray"
																							border-spacing="2pt">
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="30" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="35" />
																							<fo:table-column column-width="30" />
																							<fo:table-column column-width="40" />
																							<fo:table-column column-width="45" />
																							<fo:table-column column-width="35" />
																							<fo:table-column column-width="35" />
																							<fo:table-column column-width="35" />
																							<fo:table-column column-width="20" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="15" />
																							<fo:table-column column-width="25" />
																							<fo:table-column column-width="40" />
																							<fo:table-body start-indent="0pt">
																								<fo:table-row>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-family="Arial"
																												font-size="x-small" font-style="normal"
																												font-variant="normal" font-weight="normal">
																												<xsl:text>No</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-family="Arial"
																												font-size="x-small" font-style="normal"
																												font-variant="normal" font-weight="normal">
																												<xsl:text>Date</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-family="Arial"
																												font-size="x-small" font-style="normal"
																												font-variant="normal" font-weight="normal">
																												<xsl:text>Sts</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-family="Arial"
																												font-size="x-small" font-style="normal"
																												font-variant="normal" font-weight="normal">
																												<xsl:text>Capacity</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-family="Arial"
																												font-size="x-small" font-style="normal"
																												font-variant="normal" font-weight="normal">
																												<xsl:choose>
																												<xsl:when test="//Response/ReportAccess/ISFISUBSCRIBER = &apos;N&apos; or //Response/ReportAccess/LENDERTYP = &apos;D&apos;">
																													<xsl:text>Lender</xsl:text>																												</xsl:when>
																												<xsl:otherwise>
																													<xsl:text>Lender Type</xsl:text>																												</xsl:otherwise>
																												</xsl:choose>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Facility</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Total Outstanding Balance (RM)</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Date Balance Updated</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Limit (RM)</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Prin. Repmt. Term</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Col Type</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										number-columns-spanned="12" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline font-family="Arial"
																												font-size="x-small" font-style="normal"
																												font-variant="normal" font-weight="normal">
																												<xsl:text>Conduct Of Account For Last 12 Months</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>LGL STS</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#9edbaf"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="bold"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block>
																											<fo:inline font-weight="normal">
																												<xsl:text>Date Status Updated</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										number-columns-spanned="11" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										number-columns-spanned="11" border="solid 1pt gray"
																										padding="2pt" display-align="center">
																										<fo:block>
																											<fo:inline font-size="x-small"
																												font-weight="normal">
																												<xsl:text>Loan Information</xsl:text>
																											</fo:inline>
																										</fo:block>
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="#e4fae6"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																								<fo:table-row>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																									<fo:table-cell background-color="white"
																										font-size="8pt" font-style="normal"
																										font-variant="normal" font-weight="normal"
																										border="solid 1pt gray" padding="2pt"
																										display-align="center">
																										<fo:block />
																									</fo:table-cell>
																								</fo:table-row>
																							</fo:table-body>
																						</fo:table>
																					</fo:block>
																				</fo:block>
																				<fo:block>
																					<fo:leader leader-pattern="space" />
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block />
																				</fo:block>
																			</xsl:if>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</xsl:if>
													<xsl:if test="//Response/ReportAccess/IPDCHEQUES =&apos;Y&apos;">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="proportional-column-width(1)" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" padding="2pt"
																		display-align="center">
																		<fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block />
																			</fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:table border="0px" color="black"
																				font-size="11px" margin="0px" padding="0px"
																				table-layout="fixed" width="100%" border-spacing="2pt">
																				<fo:table-column column-width="550" />
																				<fo:table-body start-indent="0pt">
																					<fo:table-row>
																						<fo:table-cell border="0px" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="xx-small">
																									<xsl:text>DCHEQS information is no longer available starting 1st October 2020.</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																				</fo:table-body>
																			</fo:table>
																			<fo:table color="black" font-size="11px"
																				margin="0px" padding="0px" table-layout="fixed"
																				width="100%" border="solid 1pt gray" border-spacing="2pt">
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-body start-indent="0pt">
																					<fo:table-row>
																						<fo:table-cell background-color="#9edbaf"
																							number-columns-spanned="5" border="solid 1pt gray"
																							padding="2pt" display-align="center">
																							<fo:block>
																								<fo:inline font-size="8pt"
																									font-weight="bold">
																									<xsl:text>Dishonoured Cheque Information (Own Bank)</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small"
																									font-style="inherit">
																									<xsl:text>Account No</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small"
																									font-style="inherit">
																									<xsl:text>Issuance Date</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small"
																									font-style="inherit">
																									<xsl:text>Cheque No</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small">
																									<xsl:text>Amount</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small">
																									<xsl:text>Remark</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																				</fo:table-body>
																			</fo:table>
																			<xsl:for-each select="DChequesOwn">
																				<xsl:for-each select="DChequeOwn">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="x-small"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="AccNo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block font-size="x-small">
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="x-small">
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="IssueDt">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="ChequeNo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Amt">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Remarks">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block font-size="x-small">
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="x-small">
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:block>
																				<fo:leader leader-pattern="space" />
																			</fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block />
																			</fo:block>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:table color="black" font-size="11px"
																				margin="0px" padding="0px" table-layout="fixed"
																				width="100%" border="solid 1pt gray" border-spacing="2pt">
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-column column-width="proportional-column-width(1)" />
																				<fo:table-body start-indent="0pt">
																					<fo:table-row>
																						<fo:table-cell background-color="#9edbaf"
																							number-columns-spanned="4" border="solid 1pt gray"
																							padding="2pt" display-align="center">
																							<fo:block>
																								<fo:inline font-size="8pt"
																									font-weight="bold">
																									<xsl:text>Dishonoured Cheque Information (Commercial Bank)</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small">
																									<xsl:text>Bank</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small">
																									<xsl:text>Account No</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small">
																									<xsl:text>Issuance Date</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell background-color="#e4fae6"
																							border="solid 1pt gray" padding="2pt"
																							display-align="center">
																							<fo:block>
																								<fo:inline font-size="x-small">
																									<xsl:text>Remark</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																				</fo:table-body>
																			</fo:table>
																			<xsl:for-each select="DCheques">
																				<xsl:for-each select="DCheque">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x2029;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:table color="black" font-size="x-small"
																						margin="0px" padding="0px" table-layout="fixed"
																						width="100%" border="solid 1pt gray"
																						border-spacing="2pt">
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-column column-width="proportional-column-width(1)" />
																						<fo:table-body start-indent="0pt">
																							<fo:table-row>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="BankNo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block font-size="x-small">
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="x-small">
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="AccNo">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="IssuanceDate">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																								<fo:table-cell border="solid 1pt gray"
																									padding="2pt" display-align="center">
																									<fo:block>
																										<xsl:for-each select="Remarks">
																											<xsl:variable name="value-of-template">
																												<xsl:apply-templates />
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when
																													test="contains(string($value-of-template),'&#x2029;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template" />
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</fo:block>
																								</fo:table-cell>
																							</fo:table-row>
																						</fo:table-body>
																					</fo:table>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:inline-container>
																				<fo:block>
																					<xsl:text>&#x2029;</xsl:text>
																				</fo:block>
																			</fo:inline-container>
																			<fo:block margin="0pt">
																				<fo:block />
																			</fo:block>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
														<fo:block>
															<fo:leader leader-pattern="space" />
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block />
														</fo:block>
													</xsl:if>
												</fo:block>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:if>
						<fo:block />
						<xsl:if test="Response/ReportAccess/LTSUMMON =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>SUMMONS</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/SMEProfile/Litigation/Summons/Summon">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Action Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ActionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Amount</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Amount">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Case No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="CaseNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Plaintiff</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Plaintiff">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/Summons/Summon">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="80" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Action Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ActionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Amount</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Amount">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Case No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="CaseNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Plaintiff</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Plaintiff">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTCVLSUIT =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>CIVIL SUIT</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/SMEProfile/Litigation/CivilSuits/CivilSuit">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Action Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ActionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Amount</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Amount">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Case No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="CaseNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Plaintiff</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Plaintiff">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/CivilSuits/CivilSuit">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Action Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ActionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Amount</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Amount">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Case No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="CaseNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Plaintiff</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Plaintiff">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTCREDPET =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>CREDITOR PETITION</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/CreditorPetitions/CreditorPetition">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Notice Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NoticeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-rows-spanned="2"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="2"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Annulment</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Annulment">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Bankruptcy No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="BankruptcyNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Exparte</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Exparte">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTBANKNOT =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>BANKRUPTCY NOTICE</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Notice Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NoticeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-rows-spanned="2"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="2"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Annulment</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Annulment">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Bankruptcy No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="BankruptcyNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Exparte</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Exparte">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTRECORD =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>RECEIVING ORDER</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/ReceivingOrders/ReceivingOrder">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Order Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="OrderDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Bankruptcy No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="BankruptcyNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTADJNOT =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>ADJUDICATION ORDER</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/AdjudicationOrders/AdjudicationOrder">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Order Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="OrderDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-rows-spanned="2"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="2"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Annulment</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Annulment">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Bankruptcy No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="BankruptcyNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Exparte</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Exparte">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTDISCAO =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>DISCHARGED AO</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/Profile/Litigation/DischargedAos/DischargedAo">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Order Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="OrderDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-rows-spanned="2"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="2"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Annulment</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Annulment">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Bankruptcy No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="BankruptcyNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Exparte</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Exparte">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTWINDCOMP =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>WINDING UP COMPANY OR COMPLETE WOUND UP</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/SMEProfile/Litigation/BankruptcyNotices/BankruptcyNotice">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Incor. Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IncorporatedDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Order Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="OrderDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>In debt</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InDebt">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Object</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Object">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Case No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="CaseNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petitioner</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Petitioner">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Solicitor Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="SolicitorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SolicitorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<xsl:if test="Response/ReportAccess/LTWOUNDCOMP =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>VOLUNTARILY WOUND UP</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<xsl:for-each
										select="$XML/Response/Report/SMEProfile/Litigation/WoundCompanies/WoundCompany">
										<fo:table-row>
											<fo:table-cell border="0px" border-style="solid"
												font-size="8pt" padding="2pt" display-align="center">
												<fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="75" />
																<fo:table-column column-width="200" />
																<fo:table-column column-width="75" />
																<fo:table-column column-width="100" />
																<fo:table-column column-width="30" />
																<fo:table-column column-width="70" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="6" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<xsl:for-each select="Header">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Seq. No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SequenceNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>From</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="From">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>On</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="On">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>I/C B. Reg. No.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IcOrBusRegNum">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Refer to</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ReferTo">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>New I/C</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="NewIc">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Firm / Co.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="FirmOrCompany">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Name">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Incor. Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="IncorporatedDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Alias</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Alias">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petition Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="PetitionDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Address3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Wound up Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Woundupdate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Discharge Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="DischargeDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Search Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="SearchDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Object</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Object">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Share holder</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="ShareHolder">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Hearing Date</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="HearingDate">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Capital</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Capital">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Paid up</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Paidup">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>In debt</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="InDebt">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Case No</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="CaseNumber">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Court</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Court">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>State</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="State">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Petitioner</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Petitioner">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell number-columns-spanned="6"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="bold" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Liquidator</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Liquidator Name</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="LiquidatorName">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-rows-spanned="3"
																			background-color="#e4fae6" font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Address</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="3"
																			number-rows-spanned="3" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="normal" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="LiquidatorAddr1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="LiquidatorAddr2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="LiquidatorAddr3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Telephone</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="LiquidatorTel">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Reference</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell font-size="8pt"
																			font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<xsl:for-each select="Reference">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates />
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when
																							test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template" />
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline color="#3c3c3c" font-size="8pt">
																					<xsl:text>Remarks</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell number-columns-spanned="5"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks1">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks2">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x2029;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:block margin="0pt">
																					<fo:block>
																						<xsl:for-each select="Remarks3">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:for-each>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
						</xsl:if>
						<fo:block />
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						
						<fo:block>&#160;</fo:block>

						<!--Start LTLEGAL -->
						<xsl:variable name="sectioncount5_1" select="
								count(Response/ReportAccess[CURRBUSCOMP = 'Y' or PREVBUSCOMP = 'Y']) +
								count(Response/ReportAccess/PREVBUSCOMP[. = 'Y']) +
								(1 * $hasSummary) +
								(1 * $hasBothSummaryandLit) +
								count(Response/ReportAccess/LOANINFO[. = 'Y']) +
								count(Response/ReportAccess/TRADEREF[. = 'Y'])
								"/>
						<xsl:if test="//Response/ReportAccess/LTINDSUBJECT = &apos;Y&apos;">
						<xsl:if test="//Response/ReportAccess/LTLEGAL = &apos;Y&apos;">
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>	
							<fo:block text-align="center" font-size="10pt" color="black">
									<xsl:text>[this part of the page is intentionally left blank]</xsl:text>
								</fo:block>
						<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
								<fo:block page-break-before="always">
									<fo:inline>
										<xsl:value-of select="concat('SECTION ', $sectioncount5_1)"/>
									</fo:inline>
									<fo:inline font-weight="bold">
										<xsl:text>: LITIGATION INFORMATION</xsl:text>
									</fo:inline>
								</fo:block>
						</fo:block>
						<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-body start-indent="0pt">
									<fo:table-row font-size="xx-small">
										<!-- First line: DISCLAIMER -->
										<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" height="auto" display-align="start">
											<fo:block>
												<fo:inline font-size="xx-small" font-style="normal" font-variant="normal" font-weight="bold" text-align="justify" display-align="center">
													<xsl:text>Note:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row font-size="xx-small">
										<!-- First numbered item -->
										<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" height="auto" display-align="start" text-align="justify">
											<fo:block>
												<fo:inline font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" text-align="justify" display-align="center">
													<xsl:text>Please check with the Subject and/or relevant party(ies) for the latest details or you may contact us at helpdesk@creditbureau.com.my for purchase of detailed litigation report.</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>						
								</fo:table-body>
							</fo:table>
							<xsl:choose>
									<xsl:when test="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice) &gt; 0">
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
								height="10px" margin="0px" padding="0px" text-align="left">
								<fo:block>&#160;</fo:block>
								<fo:block color="#00008b" font-size="9pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left">
									<fo:block>	
											<fo:inline>
												<xsl:value-of select="concat($sectioncount5_1, '.1 ')" />
											</fo:inline>									
										<fo:inline>
											<xsl:text>LITIGATION OVERVIEW</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
							</fo:block>
							<!-- LITIGATION SUMMARY TABLE START HERE -->
								<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="5%"/>
											    <fo:table-column column-width="25%"/>
											    <fo:table-column column-width="12%"/>
											    <fo:table-column column-width="30%"/>
											    <fo:table-column column-width="15%"/>
											    <fo:table-column column-width="13%"/>
												<fo:table-header>												
													<fo:table-row>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>No.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" >
																<xsl:text>Case Type</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Subject's Role</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" >
																<xsl:text>Counterparty</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Last Updated Date by CBM</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" >
																<xsl:text>Amount (RM)</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-header>
												 <!-- TABLE BODY -->
												<fo:table-body>
												
												 <!-- Table Body: Active Cases -->
												 <xsl:if test="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST']) &gt; 0">
												   <fo:table-row background-color="#e4fae6" font-size="8pt"
											font-style="normal" font-variant="normal" font-weight="bold"
											border="solid 1pt gray" padding="2pt" number-columns-spanned="6"
											display-align="center">
													  <fo:table-cell number-columns-spanned="6">
														<fo:block>Active case(s)</fo:block>
													  </fo:table-cell>
													</fo:table-row>
													</xsl:if>
													<!-- Loop for active cases -->
													<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST']">
														<fo:table-row>
															<!-- No. -->
															<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																	<xsl:value-of select="position()"/>
																</fo:block>
															</fo:table-cell>
															 <!-- Case Type -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
																	        <xsl:text>CIVIL - </xsl:text>
																	    </xsl:when>
																	    <xsl:otherwise>
																	        <xsl:text>CRIMINAL - </xsl:text>
																	    </xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUP'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
																	</xsl:choose>
																</fo:block>																
															</fo:table-cell>
															<!-- Subject's Role-->
															<fo:table-cell
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																	<xsl:for-each select="EntityType">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															 <!-- Counterparty -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																		<xsl:when test="SubjectRole = 'DEFENDANT'">
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="SubjectRole = 'PLAINTIFF'">
																			<xsl:for-each select="DefendantName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>															
															</fo:table-cell>
															<!-- Last Updated-->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="(Sources/Source/Date)[1]">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>		
															</fo:table-cell>
															<!-- Amount -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center" text-align="right">
																<fo:block>
																<xsl:for-each select="Amount">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>														
																			<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																			</xsl:when>																	
																			
																			<xsl:when test="contains($value-of-template, '&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>																	
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>	
													
													<!-- Table Body: Inactive Cases -->
												<xsl:if test="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) = 'ST' and SubjectRole='DEFENDANT']) &gt; 0">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6" font-size="8pt"
															font-style="normal" font-variant="normal" font-weight="bold"
															border="solid 1pt gray" padding="2pt" number-columns-spanned="6"
															display-align="center">			
															<fo:block>
																<fo:inline>Inactive case(s)</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:if>
													<!-- Loop for Inactive cases -->
													<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) = 'ST' and SubjectRole='DEFENDANT']">
														<fo:table-row>
															<!-- No. -->
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																<xsl:value-of select="position()"/>
																</fo:block>
															</fo:table-cell>
															 <!-- Case Type -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
																	        <xsl:text>CIVIL - </xsl:text>
																	    </xsl:when>
																	    <xsl:otherwise>
																	        <xsl:text>CRIMINAL - </xsl:text>
																	    </xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
																	</xsl:choose>
																</fo:block>
															</fo:table-cell>
															<!-- Subject's Role -->
															<fo:table-cell
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																	<xsl:for-each select="EntityType">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															 <!-- Counterparty -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																		<xsl:when test="SubjectRole = 'DEFENDANT'">
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="SubjectRole = 'PLAINTIFF'">
																			<xsl:for-each select="DefendantName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>														
															</fo:table-cell>
															<!-- Last Updated (pinjam dulu)-->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:text>Settled</xsl:text>
																</fo:block>		
															</fo:table-cell>
															<!-- Amount -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center" text-align="right">
																<fo:block>
																	<xsl:for-each select="Amount">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:variable name="normalized-amount">
																		<xsl:choose>
																			<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="normalize-space($value-of-template)" />
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="number($normalized-amount) = 0">
																			<fo:inline>-</fo:inline>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>																	
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>	
													
													<!-- Total Row -->
													<fo:table-row>
													  <fo:table-cell background-color="#e4fae6" font-size="8pt"
											font-style="normal" font-variant="normal" font-weight="bold"
											border="solid 1pt gray" padding="2pt" number-columns-spanned="5"
											display-align="center" text-align="right">
														<fo:block>Total Outstanding Amount (Subject as Defendant and Guarantor) (RM)</fo:block>
													  </fo:table-cell>
													  <fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center" text-align="end">
													  <xsl:variable name="totalAmount" select="
													  sum($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST' and Amount != '-' and string(number(Amount)) != 'NaN']/Amount)
													  -
													  sum($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[
														normalize-space(OCRStatus) != 'ST' and normalize-space(SubjectRole) = 'PLAINTIFF' and Amount != '-' and string(number(Amount)) != 'NaN']/Amount)
													  "/>
														<fo:block>
														   <xsl:choose>
																<xsl:when test="not($totalAmount) or $totalAmount = 0">
																	<xsl:text>-</xsl:text>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number($totalAmount, '###,##0.00')" />
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													  </fo:table-cell>
													</fo:table-row>
													
												</fo:table-body>
											</fo:table>
											<fo:block>&#160;</fo:block>
											
											<!-- LITIGATION SUMMARY TABLE END HERE -->
											<xsl:variable name="subsectioncount51_1" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST'
								  and normalize-space(SubjectRole) = 'DEFENDANT']) &gt; 0)"/>	
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
							height="20px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline>
										<xsl:value-of select="concat($sectioncount5_1, '.2 ')" />
									</fo:inline>
									<fo:inline>
										<xsl:text>LITIGATION INFORMATION (SUBJECT AS DEFENDANT)</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block>
							<xsl:choose>
									<!-- If there *is* matching data -->
							<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='DEFENDANT']">
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='DEFENDANT']">
									<!-- <fo:block>&#160;</fo:block> -->
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">						
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell	number-columns-spanned="4"
																background-color="#9edbaf" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="bold" border="solid 1pt gray"
																padding="2pt" display-align="center">
														<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.2.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Creditor/Plaintiff/Appellant</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!--<xsl:text>Court</xsl:text>-->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<!-- <xsl:for-each select="Court"> -->
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
												<!--<fo:table-row><fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center"><fo:block font-weight="bold"><xsl:text>Case Date</xsl:text></fo:block></fo:table-cell><fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center"><fo:block><xsl:for-each select="CaseDate"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row>-->
											</fo:table-body>
										</fo:table>
									<xsl:choose>
									<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block font-weight="bold" text-decoration="underline">
																		<xsl:text>Solicitor (Defendant)</xsl:text>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block font-weight="bold">
																		<xsl:text>Name</xsl:text>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="SolicitorName">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</xsl:when>
												<!-- Otherwise, just use SolicitorName -->
										<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>
										
										<xsl:otherwise>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Solicitor</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Liquidator</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>

													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="LitigationType = 'AUC'">									
								<!-- Property Details -->
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-body start-indent="0pt">										
										<fo:table-row>
											<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold" text-decoration="underline">
													<xsl:text>Auction Details</xsl:text>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Address</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="AddressOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block>															
													<xsl:for-each select="Sources/Source[1]">
														<xsl:variable name="publication">
															<xsl:for-each select="Publication[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<xsl:variable name="date">
															<xsl:for-each select="Date[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<fo:block>
															<xsl:value-of select="normalize-space($publication)" />
															<xsl:text> </xsl:text>
															<xsl:value-of select="normalize-space($date)" />
														</fo:block>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										<!-- <fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Title No.</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="SolicitorAddr">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row> -->
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Type</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="ParticularsTitleOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Reserve Price (RM)</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ReservePrice">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:variable name="normalized-amount">
																			<xsl:choose>
																				<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="normalize-space($value-of-template)" />
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="number($normalized-amount) = 0">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Auction Date/Time</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="AuctionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
									</fo:table-body>
								</fo:table>
								</xsl:if>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow-->
										<!--<xsl:if test="CaseStages/CaseStage[normalize-space(Date) != ''] and not(CaseStages/CaseStage[StageCode='WWOS'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WUBJUD'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WEFILING'and normalize-space(Date) != ''])">-->
										<xsl:if test="not(Sources/Source[StageCode = 'WWOS'] or Sources/Source[StageCode = 'WUBJUD'] or Sources/Source[StageCode = 'WEFILING'])">
											<fo:instream-foreign-object>
												<svg version="1.0"
													xmlns="http://www.w3.org/2000/svg" height="110" width="700">
													<xsl:for-each select="CaseStages">
														<xsl:for-each select="CaseStage[not(contains(StageDesc, 'WRIT OF SUMMON') or contains(StageDesc, 'JUDGEMENT') or contains(StageDesc, 'eCause List') or contains(StageDesc, 'EFILING SYSTEM'))]">
															<xsl:if test="position() = 1">
																<xsl:variable name="Size1" select="(position() * 10)"/>
																<xsl:variable name="Size2" select="(position() * 60)"/>
																<xsl:variable name="Size3" select="(position() * 80)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
															<xsl:if test="position() > 1">
																<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
																<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
																<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
																<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
																<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:if test="position() = last()">
																	<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																	<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																		<xsl:value-of select="$estimateDuration"/>
																		<xsl:choose>
																			<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																			<xsl:otherwise>
																			year
																		</xsl:otherwise>
																		</xsl:choose>
																	</text>
																</xsl:if>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="Duration">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
														</text>
													</xsl:for-each>
												</svg>
											</fo:instream-foreign-object>
										</xsl:if>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
									<!-- <fo:block>&#160;</fo:block> -->
									<!-- <fo:block>&#160;</fo:block> -->
								</xsl:for-each>
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
							</xsl:choose>
								<fo:block>&#160;</fo:block>
								
							<xsl:variable name="subsectioncount51_2" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST'
								  and normalize-space(SubjectRole) = 'CORPORATE']) &gt; 0)"/>	
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
							height="20px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline>
										<xsl:value-of select="concat($sectioncount5_1, '.3 ')" />
									</fo:inline>
									<fo:inline>
										<xsl:text>LITIGATION INFORMATION (SUBJECT AS GUARANTOR)</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block>
							<xsl:choose>
									<!-- If there *is* matching data -->
							<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='CORPORATE']">
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='CORPORATE']">
									<fo:block>&#160;</fo:block>
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell	number-columns-spanned="4"
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="bold" border="solid 1pt gray"
															padding="2pt" display-align="center">
													<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.3.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Creditor/Plaintiff/Appellant</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!--<xsl:text>Court</xsl:text>-->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<!-- <xsl:for-each select="Court"> -->
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>

														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											</fo:table-body>
										</fo:table>
									<xsl:choose>
									<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block font-weight="bold" text-decoration="underline">
																		<xsl:text>Solicitor (Defendant)</xsl:text>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block font-weight="bold">
																		<xsl:text>Name</xsl:text>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="SolicitorName">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</xsl:when>
									<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>
									<xsl:otherwise>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Solicitor</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Liquidator</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>

													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="LitigationType = 'AUC'">									
								<!-- Property Details -->
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-body start-indent="0pt">										
										<fo:table-row>
											<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold" text-decoration="underline">
													<xsl:text>Auction Details</xsl:text>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Address</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="AddressOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="Sources/Source[1]">
														<xsl:variable name="publication">
															<xsl:for-each select="Publication[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<xsl:variable name="date">
															<xsl:for-each select="Date[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<fo:block>
															<xsl:value-of select="normalize-space($publication)" />
															<xsl:text> </xsl:text>
															<xsl:value-of select="normalize-space($date)" />
														</fo:block>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										<!-- <fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Title No.</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="SolicitorAddr">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row> -->
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Type</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="ParticularsTitleOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Reserve Price (RM)</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ReservePrice">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:variable name="normalized-amount">
																			<xsl:choose>
																				<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="normalize-space($value-of-template)" />
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="number($normalized-amount) = 0">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Auction Date/Time</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="AuctionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
									</fo:table-body>
								</fo:table>
								</xsl:if>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow-->
										<!--<xsl:if test="CaseStages/CaseStage[normalize-space(Date) != ''] and not(CaseStages/CaseStage[StageCode='WWOS'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WUBJUD'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WEFILING'and normalize-space(Date) != ''])">-->
										<xsl:if test="not(Sources/Source[StageCode = 'WWOS'] or Sources/Source[StageCode = 'WUBJUD'] or Sources/Source[StageCode = 'WEFILING'])">
											<fo:instream-foreign-object>
												<svg version="1.0"
													xmlns="http://www.w3.org/2000/svg" height="110" width="700">
													<xsl:for-each select="CaseStages">
														<xsl:for-each select="CaseStage[not(contains(StageDesc, 'WRIT OF SUMMON') or contains(StageDesc, 'JUDGEMENT') or contains(StageDesc, 'eCause List') or contains(StageDesc, 'EFILING SYSTEM'))]">
															<xsl:if test="position() = 1">
																<xsl:variable name="Size1" select="(position() * 10)"/>
																<xsl:variable name="Size2" select="(position() * 60)"/>
																<xsl:variable name="Size3" select="(position() * 80)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
															<xsl:if test="position() > 1">
																<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
																<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
																<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
																<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
																<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:if test="position() = last()">
																	<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																	<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																		<xsl:value-of select="$estimateDuration"/>
																		<xsl:choose>
																			<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																			<xsl:otherwise>
																			year
																		</xsl:otherwise>
																		</xsl:choose>
																	</text>
																</xsl:if>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="Duration">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
														</text>
													</xsl:for-each>
												</svg>
											</fo:instream-foreign-object>
										</xsl:if>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
									<!-- <fo:block>&#160;</fo:block> -->
									<!-- <fo:block>&#160;</fo:block> -->
								</xsl:for-each>
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
							</xsl:choose>
								<fo:block>&#160;</fo:block>
								
								<xsl:variable name="subsectioncount51_3" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST'
								  and normalize-space(SubjectRole) = 'PLAINTIFF']) &gt; 0)"/>								
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
							height="20px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline>
										<xsl:value-of select="concat($sectioncount5_1, '.4 ')" />
									</fo:inline>
									<fo:inline>
										<xsl:text>LITIGATION INFORMATION (SUBJECT AS PLAINTIFF)</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block>
							<xsl:choose>
									<!-- If there *is* matching data -->
							<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='PLAINTIFF']">
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='PLAINTIFF']">
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">									
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell	number-columns-spanned="4"
																background-color="#9edbaf" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="bold" border="solid 1pt gray"
																padding="2pt" display-align="center">
														<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.4.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>											
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Debtor/Defendant/Respondent</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!--<xsl:text>Court</xsl:text>-->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<!-- <xsl:for-each select="Court"> -->
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="DefendantName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="DefendantID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="DefendantAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
												<!--<fo:table-row><fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center"><fo:block font-weight="bold"><xsl:text>Case Date</xsl:text></fo:block></fo:table-cell><fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center"><fo:block><xsl:for-each select="CaseDate"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row>-->
											</fo:table-body>
										</fo:table>
									<xsl:choose>
									<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block font-weight="bold" text-decoration="underline">
																		<xsl:text>Solicitor (Defendant)</xsl:text>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block font-weight="bold">
																		<xsl:text>Name</xsl:text>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="SolicitorName">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</xsl:when>
										
										<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>
										<xsl:otherwise>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Solicitor</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Liquidator</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>

													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="LitigationType = 'AUC'">									
								<!-- Property Details -->
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-body start-indent="0pt">										
										<fo:table-row>
											<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold" text-decoration="underline">
													<xsl:text>Auction Details</xsl:text>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Address</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="AddressOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="Sources/Source[1]">
														<xsl:variable name="publication">
															<xsl:for-each select="Publication[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<xsl:variable name="date">
															<xsl:for-each select="Date[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<fo:block>
															<xsl:value-of select="normalize-space($publication)" />
															<xsl:text> </xsl:text>
															<xsl:value-of select="normalize-space($date)" />
														</fo:block>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										<!-- <fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Title No.</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="SolicitorAddr">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row> -->
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Type</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="ParticularsTitleOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Reserve Price (RM)</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ReservePrice">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:variable name="normalized-amount">
																			<xsl:choose>
																				<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="normalize-space($value-of-template)" />
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="number($normalized-amount) = 0">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Auction Date/Time</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="AuctionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
									</fo:table-body>
								</fo:table>
								</xsl:if>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow-->
										<!--<xsl:if test="CaseStages/CaseStage[normalize-space(Date) != ''] and not(CaseStages/CaseStage[StageCode='WWOS'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WUBJUD'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WEFILING'and normalize-space(Date) != ''])">-->
										<xsl:if test="not(Sources/Source[StageCode = 'WWOS'] or Sources/Source[StageCode = 'WUBJUD'] or Sources/Source[StageCode = 'WEFILING'])">
											<fo:instream-foreign-object>
												<svg version="1.0"
													xmlns="http://www.w3.org/2000/svg" height="110" width="700">
													<xsl:for-each select="CaseStages">
														<xsl:for-each select="CaseStage[not(contains(StageDesc, 'WRIT OF SUMMON') or contains(StageDesc, 'JUDGEMENT') or contains(StageDesc, 'eCause List') or contains(StageDesc, 'EFILING SYSTEM'))]">
															<xsl:if test="position() = 1">
																<xsl:variable name="Size1" select="(position() * 10)"/>
																<xsl:variable name="Size2" select="(position() * 60)"/>
																<xsl:variable name="Size3" select="(position() * 80)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
															<xsl:if test="position() > 1">
																<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
																<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
																<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
																<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
																<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:if test="position() = last()">
																	<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																	<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																		<xsl:value-of select="$estimateDuration"/>
																		<xsl:choose>
																			<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																			<xsl:otherwise>
																			year
																		</xsl:otherwise>
																		</xsl:choose>
																	</text>
																</xsl:if>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="Duration">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
														</text>
													</xsl:for-each>
												</svg>
											</fo:instream-foreign-object>
										</xsl:if>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
									<!-- <fo:block>&#160;</fo:block> -->
									<!-- <fo:block>&#160;</fo:block> -->
								</xsl:for-each>
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
							</xsl:choose>
									<xsl:if test="$plaintiffBankruptCount &gt;= 30">
										<!-- Add note table when there are 30 or more plaintiffs  -->
										<fo:table color="black" font-size="9px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(49)" />  
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<!-- First line: DISCLAIMER -->
												<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="bold" padding="0pt" height="5" display-align="center">
													<fo:block>
														<fo:inline font-weight="bold" background-color="yellow" color="black">
															<xsl:text>Note:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<!-- Second line: The rest of the disclaimer text -->
												<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" height="0" display-align="center" text-align="justify">
													<fo:block>
														<fo:inline background-color="yellow" color="black">
															<xsl:text>This report displays the first thirty (30) litigation information where Subject is Plaintiff. To obtain information on the other litigation information, please contact helpdesk@creditbureau.com.my.</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
										</fo:table>
									</xsl:if>
									<fo:block>&#160;</fo:block>
								
								
								 <xsl:variable name="subsectioncount51_4" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) = 'ST'
								  and normalize-space(SubjectRole) = 'DEFENDANT']) &gt; 0)"/>	
									<fo:block color="#00008b" font-size="9pt" font-weight="bold"
								height="20px" margin="0px" padding="0px" text-align="left">
									<fo:block>
										<fo:inline>
											<xsl:value-of select="concat($sectioncount5_1, '.5 ')" />
										</fo:inline>
										<fo:inline>
											<xsl:text>LITIGATION INFORMATION (SUBJECT AS A DEFENDANT - SETTLED/ WITHDRAWN/ STRIKE OUT/ STRUCK OFF/ DISCONTINUED/ DISCHARGED)</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
								<xsl:choose>
									<!-- If there *is* matching data -->
								<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)='ST' and normalize-space(SubjectRole)='DEFENDANT']">
										<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)='ST' and normalize-space(SubjectRole)='DEFENDANT']">
									<!-- <fo:block>&#160;</fo:block> -->
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<!-- Display Winding Up Table -->
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">									
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
												<!--<xsl:if test="$XML/Response/Subject/ConstitutionType = 24"><fo:table-row><fo:table-cell number-columns-spanned="4"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center"><fo:block font-weight="normal"><fo:inline font-weight="bold"><xsl:text>Mode of Identification: </xsl:text></fo:inline><xsl:for-each select="MatchType"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row></xsl:if>-->
												<fo:table-row>
													<fo:table-cell	number-columns-spanned="4"
																background-color="#9edbaf" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="bold" border="solid 1pt gray"
																padding="2pt" display-align="center">
														<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.5.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>												
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Creditor/Plaintiff/Appellant</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!-- <xsl:text>Court</xsl:text> -->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>

														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
												<!--<fo:table-row><fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center"><fo:block font-weight="bold"><xsl:text>Case Date</xsl:text></fo:block></fo:table-cell><fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center"><fo:block><xsl:for-each select="CaseDate"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row>-->
											</fo:table-body>
										</fo:table>
										<xsl:choose>
											<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
												<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor (Defendant)</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</xsl:when>
											<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>
											<xsl:otherwise>
												<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Liquidator</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</xsl:otherwise>
										</xsl:choose>
										<xsl:if test="LitigationType = 'AUC'">
											<!-- Property Details -->
											<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Auction Details</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Property Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="AddressOfProperty">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<!-- <fo:table-row>
														<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Title No.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row> -->
													<fo:table-row>
														<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Property Type</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="ParticularsTitleOfProperty">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Reserve Price (RM)</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="ReservePrice">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:variable name="normalized-amount">
																		<xsl:choose>
																			<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="normalize-space($value-of-template)" />
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="number($normalized-amount) = 0">
																			<fo:inline>-</fo:inline>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Auction Date/Time</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="AuctionDate">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:if>
										<xsl:for-each select="SettlementDate">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Settlement Date</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = ''">
																		<xsl:text>-</xsl:text>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</xsl:otherwise>
																</xsl:choose>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow1-->
										<fo:instream-foreign-object>
											<svg version="1.0"
												xmlns="http://www.w3.org/2000/svg" height="110" width="700">
												<xsl:for-each select="CaseStages">
													<xsl:for-each select="CaseStage">
														<xsl:if test="position() = 1">
															<xsl:variable name="Size1" select="(position() * 10)"/>
															<xsl:variable name="Size2" select="(position() * 60)"/>
															<xsl:variable name="Size3" select="(position() * 80)"/>
															<xsl:choose>
																<xsl:when test="contains((StageDesc),'(NA)')">
																	<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																			</text>
																			<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:choose>
																				<xsl:when test="string-length(StageDesc) > 15">
																					<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																					</text>
																					<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																					</text>
																					<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																				</xsl:when>
																				<xsl:otherwise>
																					<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																					</text>
																					<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:otherwise>
																	<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																		<xsl:when test="Date = ''">
																			<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																				<xsl:value-of select="Date"/>
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:if>
														<xsl:if test="position() > 1">
															<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
															<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
															<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
															<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
															<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
															<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
															<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
															<xsl:choose>
																<xsl:when test="contains((StageDesc),'(NA)')">
																	<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																			</text>
																			<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:choose>
																				<xsl:when test="string-length(StageDesc) > 15">
																					<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																					</text>
																					<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																					</text>
																					<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																				</xsl:when>
																				<xsl:otherwise>
																					<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																					</text>
																					<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:otherwise>
																	<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																		<xsl:when test="Date = ''">
																			<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				<xsl:value-of select="Date"/>
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:otherwise>
															</xsl:choose>
															<xsl:if test="position() = last()">
																<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																	<xsl:value-of select="$estimateDuration"/>
																	<xsl:choose>
																		<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																		<xsl:otherwise>
																			year
																		</xsl:otherwise>
																	</xsl:choose>
																</text>
															</xsl:if>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
												<xsl:for-each select="Duration">
													<xsl:variable name="value-of-template">
														<xsl:apply-templates />
													</xsl:variable>
													<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
														<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
													</text>
												</xsl:for-each>
											</svg>
										</fo:instream-foreign-object>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<xsl:for-each select="Sources/Source[1]">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:value-of select="StageDesc"/>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="Publication/text()"/> / 
																	
																<xsl:value-of select="Date"/>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
												<xsl:if test="not(Sources/Source)">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2" font-size="8pt"
																font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																text-align="center">
															<fo:block>
																<xsl:text>NA</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:if>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Status</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="Status"/>
															<xsl:if test="Status = ''">
																<xsl:if test="StatusDate = ''">
																	<xsl:text>-</xsl:text>
																</xsl:if>
															</xsl:if>
															<xsl:if test="Status != ''">
																<xsl:if test="StatusDate != ''">
																	<xsl:text> / </xsl:text>
																</xsl:if>
															</xsl:if>
															<xsl:value-of select="StatusDate"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
										</xsl:for-each>
									</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>
										<!-- <fo:block>&#160;</fo:block>										 -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>										
									  </xsl:otherwise>
								</xsl:choose>
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[LitigationType='CRI']">
									<!-- Show Title One Time Only -->
									<xsl:if test="(position()) = 1">
										<fo:block>&#160;</fo:block>
										<fo:block font-size="9pt" font-weight="bold" text-decoration="underline">
											<xsl:text>CRIMINAL JUDGMENT</xsl:text>
										</fo:block>
									</xsl:if>
									<xsl:for-each select="CaseNo">
										<xsl:variable name="value-of-template">
											<xsl:apply-templates />
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="contains(string($value-of-template),'&#x2029;')">
												<fo:block font-size="9pt" font-weight="bold">
													<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
												</fo:block>
											</xsl:when>
											<xsl:otherwise>
												<fo:block font-size="9pt" font-weight="bold">
													<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
												</fo:block>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
									<!-- Court Details/Plaintiff -->
									<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
										<fo:table-column column-width="15%" />
										<fo:table-column column-width="35%" />
										<fo:table-column column-width="15%" />
										<fo:table-column column-width="35%" />
										<fo:table-body start-indent="0pt">
											<!-- Row 3 -->
											<fo:table-row>
												<fo:table-cell number-columns-spanned="2"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-decoration="underline">
														<xsl:text>Case Details</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell number-columns-spanned="2"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-decoration="underline">
														<xsl:text>Prosecutor / Appellant</xsl:text>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Row 4 -->
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block>
														<fo:inline font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="Court">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>Name</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="PlaintiffName">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block></fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Row 5 -->
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>City</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="City">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>ID</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="PlaintiffID">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Row 6 -->
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>State</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="State">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" number-columns-spanned="2">
													<fo:block></fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<!-- Source of Information -->
									<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
										<fo:table-column column-width="15%" />
										<fo:table-column column-width="85%" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell number-columns-spanned="2"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-decoration="underline">
														<xsl:text>Source of Information</xsl:text>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<xsl:for-each select="Sources/Source[1]">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Date of Publication</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Date">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																	test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Source of Publication</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Publication">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																	test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Date of Access</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="AccessDate">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																	test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:for-each>
											<xsl:if test="not(Sources/Source)">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2" font-size="8pt"
													font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													text-align="center">
														<fo:block>
															<xsl:text>NA</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
										</fo:table-body>
									</fo:table>
									<!-- Remarks -->
									<xsl:for-each select="Remarks">
										<xsl:variable name="value-of-template">
											<xsl:apply-templates />
										</xsl:variable>
										<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
									</xsl:for-each>
									<fo:block>&#160;</fo:block>
									<fo:block>&#160;</fo:block>
									<fo:block>&#160;</fo:block>
								</xsl:for-each>
								</xsl:when>									
									<xsl:otherwise>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1pt black"
									border-spacing="2pt">
											<fo:table-column column-width="100%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell
													background-color="#e4fae6" font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block font-weight="normal">
															<xsl:text>NO INFORMATION IS AVAILABLE</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block>&#160;</fo:block>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:if>
						</xsl:if>
						<!--End LTLEGAL -->
						
						<!--Start LTLEGAL -->
							<xsl:if test="//Response/ReportAccess/LTINDSUBJECT = &apos;N&apos;">
								<xsl:if test="//Response/ReportAccess/LTLEGAL = &apos;Y&apos;">
							<xsl:variable name="sectioncount0_7" select="
									count(Response/ReportAccess[CURRBUSCOMP = 'Y' or PREVBUSCOMP = 'Y']) +
									count(Response/ReportAccess/PREVBUSCOMP[. = 'Y']) +
									(1 * $hasSummary) +
									(1 * $hasBothSummaryandLit) +
									count(Response/ReportAccess/LOANINFO[. = 'Y']) +
									count(Response/ReportAccess/TRADEREF[. = 'Y'])
									"/>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>	
							<fo:block text-align="center" font-size="10pt" color="black">
									<xsl:text>[this part of the page is intentionally left blank]</xsl:text>
								</fo:block>
								<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
										<fo:block page-break-before="always">
											<fo:inline>
												<xsl:value-of select="concat('SECTION ', $sectioncount0_7)"/>
											</fo:inline>
											<fo:inline font-weight="bold">
												<xsl:text>: LITIGATION INFORMATION</xsl:text>
											</fo:inline>
										</fo:block>
								</fo:block>
								<fo:table color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-body start-indent="0pt">
									<fo:table-row font-size="xx-small">
										<!-- First line: DISCLAIMER -->
										<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" height="auto" display-align="start">
											<fo:block>
												<fo:inline font-size="xx-small" font-style="normal" font-variant="normal" font-weight="bold" text-align="justify" display-align="center">
													<xsl:text>Note:</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row font-size="xx-small">
										<!-- First numbered item -->
										<fo:table-cell border="0px" border-style="solid" font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" height="auto" display-align="start" text-align="justify">
											<fo:block>
												<fo:inline font-size="xx-small" font-style="normal" font-variant="normal" font-weight="normal" text-align="justify" display-align="center">
													<xsl:text>Please check with the Subject and/or relevant party(ies) for the latest details or you may contact us at helpdesk@creditbureau.com.my for purchase of detailed litigation report.</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>						
								</fo:table-body>
							</fo:table>
							<xsl:choose>
									<xsl:when test="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice) &gt; 0">
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
								height="10px" margin="0px" padding="0px" text-align="left">
								<fo:block>&#160;</fo:block>
								<fo:block color="#00008b" font-size="9pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left">
									<fo:block>	
											<fo:inline>
												<xsl:value-of select="concat($sectioncount0_7, '.1 ')" />
											</fo:inline>									
										<fo:inline>
											<xsl:text>LITIGATION OVERVIEW</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
							</fo:block>
									<!-- LITIGATION SUMMARY TABLE START HERE -->
								<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="5%"/>
											    <fo:table-column column-width="25%"/>
											    <fo:table-column column-width="12%"/>
											    <fo:table-column column-width="30%"/>
											    <fo:table-column column-width="15%"/>
											    <fo:table-column column-width="13%"/>
												<fo:table-header>												
													<fo:table-row>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>No.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" >
																<xsl:text>Case Type</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Subject's Role</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" >
																<xsl:text>Counterparty</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Last Updated Date by CBM</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell 
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" >
																<xsl:text>Amount (RM)</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-header>
												 <!-- TABLE BODY -->
												<fo:table-body>
												
												 <!-- Table Body: Active Cases -->
												 <xsl:if test="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST']) &gt; 0">
												   <fo:table-row background-color="#e4fae6" font-size="8pt"
											font-style="normal" font-variant="normal" font-weight="bold"
											border="solid 1pt gray" padding="2pt" number-columns-spanned="6"
											display-align="center">
													  <fo:table-cell number-columns-spanned="6">
														<fo:block>Active case(s)</fo:block>
													  </fo:table-cell>
													</fo:table-row>
													</xsl:if>
													<!-- Loop for active cases -->
													<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST']">
														<fo:table-row>
															<!-- No. -->
															<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																	<xsl:value-of select="position()"/>
																</fo:block>
															</fo:table-cell>
															 <!-- Case Type -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
																	        <xsl:text>CIVIL - </xsl:text>
																	    </xsl:when>
																	    <xsl:otherwise>
																	        <xsl:text>CRIMINAL - </xsl:text>
																	    </xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
																	</xsl:choose>
																</fo:block>																
															</fo:table-cell>
															<!-- Subject's Role-->
															<fo:table-cell
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																	<xsl:for-each select="EntityType">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															 <!-- Counterparty -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																		<xsl:when test="SubjectRole = 'DEFENDANT'">
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="SubjectRole = 'PLAINTIFF'">
																			<xsl:for-each select="DefendantName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>															
															</fo:table-cell>
															<!-- Last Updated-->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="(Sources/Source/Date)[1]">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>		
															</fo:table-cell>
															<!-- Amount -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center" text-align="right">
																<fo:block>
																<xsl:for-each select="Amount">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>														
																			<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																			</xsl:when>																	
																			
																			<xsl:when test="contains($value-of-template, '&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>																	
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>	
													
													<!-- Table Body: Inactive Cases -->
												<xsl:if test="count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) = 'ST' and SubjectRole='DEFENDANT']) &gt; 0">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6" font-size="8pt"
															font-style="normal" font-variant="normal" font-weight="bold"
															border="solid 1pt gray" padding="2pt" number-columns-spanned="6"
															display-align="center">			
															<fo:block>
																<fo:inline>Inactive case(s)</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:if>
													<!-- Loop for Inactive cases -->
													<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) = 'ST' and SubjectRole='DEFENDANT']">
														<fo:table-row>
															<!-- No. -->
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																<xsl:value-of select="position()"/>
																</fo:block>
															</fo:table-cell>
															 <!-- Case Type -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
																	        <xsl:text>CIVIL - </xsl:text>
																	    </xsl:when>
																	    <xsl:otherwise>
																	        <xsl:text>CRIMINAL - </xsl:text>
																	    </xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																	    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
																	</xsl:choose>
																</fo:block>
															</fo:table-cell>
															<!-- Subject's Role -->
															<fo:table-cell
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block>
																	<xsl:for-each select="EntityType">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															 <!-- Counterparty -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:choose>
																		<xsl:when test="EntityType = 'Defendant'">
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="EntityType = 'Plaintiff'">
																			<xsl:for-each select="DefendantName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="PlaintiffName">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates />
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>														
															</fo:table-cell>
															<!-- Last Updated (pinjam dulu)-->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:text>Settled</xsl:text>
																</fo:block>		
															</fo:table-cell>
															<!-- Amount -->
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center" text-align="right">
																<fo:block>
																	<xsl:for-each select="Amount">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="normalize-space($value-of-template) = '-' or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:when test="contains($value-of-template, '&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>	
													
													<!-- Total Row -->
													<fo:table-row>
													  <fo:table-cell background-color="#e4fae6" font-size="8pt"
											font-style="normal" font-variant="normal" font-weight="bold"
											border="solid 1pt gray" padding="2pt" number-columns-spanned="5"
											display-align="center" text-align="right">
														<fo:block>Total Outstanding Amount (Subject as Defendant and Guarantor) (RM)</fo:block>
													  </fo:table-cell>
													  <fo:table-cell background-color="#e4fae6"  font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center" text-align="end">
													  <xsl:variable name="totalAmount" select="sum($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST' and Amount != '-' and string(number(Amount)) != 'NaN']/Amount)
													  -
													  sum($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[
														normalize-space(OCRStatus) != 'ST' and normalize-space(SubjectRole) = 'PLAINTIFF' and Amount != '-' and string(number(Amount)) != 'NaN']/Amount)
													  "/>
														<fo:block>
														   <xsl:choose>
																<xsl:when test="not($totalAmount) or $totalAmount = 0">
																	<xsl:text>-</xsl:text>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="format-number($totalAmount, '###,##0.00')" />
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													  </fo:table-cell>
													</fo:table-row>
													
												</fo:table-body>
											</fo:table>
											<fo:block>&#160;</fo:block>
											
											<!-- LITIGATION SUMMARY TABLE END HERE -->
									<xsl:variable name="subsectioncount51_1" select="
														count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
														number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST'
														and normalize-space(SubjectRole) = 'DEFENDANT']) &gt; 0)"/>	
									<!-- <fo:block>&#160;</fo:block>	 -->
									<fo:block color="#00008b" font-size="9pt" font-weight="bold"
									height="20px" margin="0px" padding="0px" text-align="left">
										<fo:block>
											<fo:inline>
												<xsl:value-of select="concat($sectioncount0_7, '.2 ')" />
											</fo:inline>
											<fo:inline>
												<xsl:text>LITIGATION INFORMATION (SUBJECT AS DEFENDANT)</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:block>
									<xsl:choose>
									<!-- If there *is* matching data -->
							<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='DEFENDANT']">
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='DEFENDANT']">
									<!-- <fo:block>&#160;</fo:block> -->
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">						
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell	number-columns-spanned="4"
																background-color="#9edbaf" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="bold" border="solid 1pt gray"
																padding="2pt" display-align="center">
														<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.2.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Creditor/Plaintiff/Appellant</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!--<xsl:text>Court</xsl:text>-->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<!-- <xsl:for-each select="Court"> -->
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>

														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
												<!--<fo:table-row><fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center"><fo:block font-weight="bold"><xsl:text>Case Date</xsl:text></fo:block></fo:table-cell><fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center"><fo:block><xsl:for-each select="CaseDate"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row>-->
											</fo:table-body>
										</fo:table>
									<xsl:choose>
									<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block font-weight="bold" text-decoration="underline">
																		<xsl:text>Solicitor (Defendant)</xsl:text>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block font-weight="bold">
																		<xsl:text>Name</xsl:text>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="SolicitorName">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</xsl:when>
										<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>
										<xsl:otherwise>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Solicitor</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Liquidator</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>

													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="LitigationType = 'AUC'">									
								<!-- Property Details -->
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-body start-indent="0pt">										
										<fo:table-row>
											<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold" text-decoration="underline">
													<xsl:text>Auction Details</xsl:text>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Address</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="AddressOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="Sources/Source[1]">
														<xsl:variable name="publication">
															<xsl:for-each select="Publication[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<xsl:variable name="date">
															<xsl:for-each select="Date[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<fo:block>
															<xsl:value-of select="normalize-space($publication)" />
															<xsl:text> </xsl:text>
															<xsl:value-of select="normalize-space($date)" />
														</fo:block>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										<!-- <fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Title No.</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="SolicitorAddr">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row> -->
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Type</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="ParticularsTitleOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Reserve Price (RM)</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ReservePrice">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:variable name="normalized-amount">
																			<xsl:choose>
																				<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="normalize-space($value-of-template)" />
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="number($normalized-amount) = 0">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Auction Date/Time</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="AuctionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
									</fo:table-body>
								</fo:table>
								</xsl:if>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow-->
										<!--<xsl:if test="CaseStages/CaseStage[normalize-space(Date) != ''] and not(CaseStages/CaseStage[StageCode='WWOS'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WUBJUD'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WEFILING'and normalize-space(Date) != ''])">-->
										<xsl:if test="not(Sources/Source[StageCode = 'WWOS'] or Sources/Source[StageCode = 'WUBJUD'] or Sources/Source[StageCode = 'WEFILING'])">
											<fo:instream-foreign-object>
												<svg version="1.0"
													xmlns="http://www.w3.org/2000/svg" height="110" width="700">
													<xsl:for-each select="CaseStages">
														<xsl:for-each select="CaseStage[not(contains(StageDesc, 'WRIT OF SUMMON') or contains(StageDesc, 'JUDGEMENT') or contains(StageDesc, 'eCause List') or contains(StageDesc, 'EFILING SYSTEM'))]">
															<xsl:if test="position() = 1">
																<xsl:variable name="Size1" select="(position() * 10)"/>
																<xsl:variable name="Size2" select="(position() * 60)"/>
																<xsl:variable name="Size3" select="(position() * 80)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
															<xsl:if test="position() > 1">
																<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
																<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
																<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
																<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
																<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:if test="position() = last()">
																	<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																	<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																		<xsl:value-of select="$estimateDuration"/>
																		<xsl:choose>
																			<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																			<xsl:otherwise>
																			year
																		</xsl:otherwise>
																		</xsl:choose>
																	</text>
																</xsl:if>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="Duration">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
														</text>
													</xsl:for-each>
												</svg>
											</fo:instream-foreign-object>
										</xsl:if>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
									<!-- <fo:block>&#160;</fo:block> -->
									<!-- <fo:block>&#160;</fo:block> -->
								</xsl:for-each>
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
							</xsl:choose>
								<fo:block>&#160;</fo:block>
								
							<xsl:variable name="subsectioncount51_2" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST'
								  and normalize-space(SubjectRole) = 'CORPORATE']) &gt; 0)"/>	
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
							height="20px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline>
										<xsl:value-of select="concat($sectioncount0_7, '.3 ')" />
									</fo:inline>
									<fo:inline>
										<xsl:text>LITIGATION INFORMATION (SUBJECT AS GUARANTOR)</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block>
							<xsl:choose>
									<!-- If there *is* matching data -->
							<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='CORPORATE']">
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='CORPORATE']">
									<fo:block>&#160;</fo:block>
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell	number-columns-spanned="4"
															background-color="#9edbaf" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="bold" border="solid 1pt gray"
															padding="2pt" display-align="center">
													<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.3.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Creditor/Plaintiff/Appellant</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!--<xsl:text>Court</xsl:text>-->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<!-- <xsl:for-each select="Court"> -->
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>

														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											</fo:table-body>
										</fo:table>
									<xsl:choose>
									<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block font-weight="bold" text-decoration="underline">
																		<xsl:text>Solicitor (Defendant)</xsl:text>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block font-weight="bold">
																		<xsl:text>Name</xsl:text>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="SolicitorName">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</xsl:when>
									<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>	
										<xsl:otherwise>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Solicitor</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Liquidator</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>

													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="LitigationType = 'AUC'">									
								<!-- Property Details -->
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-body start-indent="0pt">										
										<fo:table-row>
											<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold" text-decoration="underline">
													<xsl:text>Auction Details</xsl:text>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Address</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="AddressOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="Sources/Source[1]">
														<xsl:variable name="publication">
															<xsl:for-each select="Publication">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<xsl:variable name="date">
															<xsl:for-each select="Date">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<fo:block>
															<xsl:value-of select="normalize-space($publication)" />
															<xsl:text> </xsl:text>
															<xsl:value-of select="normalize-space($date)" />
														</fo:block>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										<!-- <fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Title No.</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="SolicitorAddr">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row> -->
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Type</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="ParticularsTitleOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Reserve Price (RM)</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ReservePrice">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:variable name="normalized-amount">
																			<xsl:choose>
																				<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="normalize-space($value-of-template)" />
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="number($normalized-amount) = 0">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Auction Date/Time</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="AuctionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
									</fo:table-body>
								</fo:table>
								</xsl:if>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow-->
										<!--<xsl:if test="CaseStages/CaseStage[normalize-space(Date) != ''] and not(CaseStages/CaseStage[StageCode='WWOS'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WUBJUD'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WEFILING'and normalize-space(Date) != ''])">-->
										<xsl:if test="not(Sources/Source[StageCode = 'WWOS'] or Sources/Source[StageCode = 'WUBJUD'] or Sources/Source[StageCode = 'WEFILING'])">
											<fo:instream-foreign-object>
												<svg version="1.0"
													xmlns="http://www.w3.org/2000/svg" height="110" width="700">
													<xsl:for-each select="CaseStages">
														<xsl:for-each select="CaseStage[not(contains(StageDesc, 'WRIT OF SUMMON') or contains(StageDesc, 'JUDGEMENT') or contains(StageDesc, 'eCause List') or contains(StageDesc, 'EFILING SYSTEM'))]">
															<xsl:if test="position() = 1">
																<xsl:variable name="Size1" select="(position() * 10)"/>
																<xsl:variable name="Size2" select="(position() * 60)"/>
																<xsl:variable name="Size3" select="(position() * 80)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
															<xsl:if test="position() > 1">
																<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
																<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
																<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
																<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
																<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:if test="position() = last()">
																	<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																	<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																		<xsl:value-of select="$estimateDuration"/>
																		<xsl:choose>
																			<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																			<xsl:otherwise>
																			year
																		</xsl:otherwise>
																		</xsl:choose>
																	</text>
																</xsl:if>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="Duration">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
														</text>
													</xsl:for-each>
												</svg>
											</fo:instream-foreign-object>
										</xsl:if>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
									<!-- <fo:block>&#160;</fo:block> -->
									<!-- <fo:block>&#160;</fo:block> -->
								</xsl:for-each>
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
							</xsl:choose>
								<fo:block>&#160;</fo:block>
								
								<xsl:variable name="subsectioncount51_3" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) != 'ST'
								  and normalize-space(SubjectRole) = 'PLAINTIFF']) &gt; 0)"/>								
							<fo:block color="#00008b" font-size="9pt" font-weight="bold"
							height="20px" margin="0px" padding="0px" text-align="left">
								<fo:block>
									<fo:inline>
										<xsl:value-of select="concat($sectioncount0_7, '.4 ')" />
									</fo:inline>
									<fo:inline>
										<xsl:text>LITIGATION INFORMATION (SUBJECT AS PLAINTIFF)</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block>
							<xsl:choose>
									<!-- If there *is* matching data -->
							<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='PLAINTIFF']">
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)!='ST' and normalize-space(SubjectRole)='PLAINTIFF']">
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">									
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell	number-columns-spanned="4"
																background-color="#9edbaf" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="bold" border="solid 1pt gray"
																padding="2pt" display-align="center">
														<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.4.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>											
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Debtor/Defendant/Respondent</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!--<xsl:text>Court</xsl:text>-->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<!-- <xsl:for-each select="Court"> -->
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="DefendantName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="DefendantID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="DefendantAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>

														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
												<!--<fo:table-row><fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center"><fo:block font-weight="bold"><xsl:text>Case Date</xsl:text></fo:block></fo:table-cell><fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center"><fo:block><xsl:for-each select="CaseDate"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row>-->
											</fo:table-body>
										</fo:table>
									<xsl:choose>
									<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
													<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-column column-width="15%" />
														<fo:table-column column-width="35%" />
														<fo:table-body start-indent="0pt">
															<fo:table-row>
																<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block font-weight="bold" text-decoration="underline">
																		<xsl:text>Solicitor (Defendant)</xsl:text>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																	<fo:block font-weight="bold">
																		<xsl:text>Name</xsl:text>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																	<fo:block>
																		<xsl:for-each select="SolicitorName">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates />
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</fo:table-body>
													</fo:table>
												</xsl:when>
									<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />													
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>		
													</fo:table-body>
												</fo:table>
											</xsl:when>	
										<xsl:otherwise>
											<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Solicitor</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Liquidator</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>

													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Tel</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorTelNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Ref no.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="LiquidatorRefNo">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="LitigationType = 'AUC'">									
								<!-- Property Details -->
								<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-column column-width="15%" />
									<fo:table-column column-width="35%" />
									<fo:table-body start-indent="0pt">										
										<fo:table-row>
											<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold" text-decoration="underline">
													<xsl:text>Auction Details</xsl:text>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Address</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="AddressOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="Sources/Source[1]">
														<xsl:variable name="publication">
															<xsl:for-each select="Publication[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<xsl:variable name="date">
															<xsl:for-each select="Date[1]">
																<xsl:apply-templates />
															</xsl:for-each>
														</xsl:variable>
														<fo:block>
															<xsl:value-of select="normalize-space($publication)" />
															<xsl:text> </xsl:text>
															<xsl:value-of select="normalize-space($date)" />
														</fo:block>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>										
										<!-- <fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Title No.</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="SolicitorAddr">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row> -->
										<fo:table-row>
											<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block font-weight="bold">
													<xsl:text>Property Type</xsl:text>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
												<fo:block>
													<xsl:for-each select="ParticularsTitleOfProperty">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<xsl:choose>
															<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																<fo:block>
																	<xsl:copy-of select="$value-of-template" />
																</fo:block>
															</xsl:when>
															<xsl:otherwise>
																<fo:inline>
																	<xsl:copy-of select="$value-of-template" />
																</fo:inline>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Reserve Price (RM)</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ReservePrice">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:variable name="normalized-amount">
																			<xsl:choose>
																				<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="normalize-space($value-of-template)" />
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="number($normalized-amount) = 0">
																				<fo:inline>-</fo:inline>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Auction Date/Time</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="AuctionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
									</fo:table-body>
								</fo:table>
								</xsl:if>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow-->
										<!--<xsl:if test="CaseStages/CaseStage[normalize-space(Date) != ''] and not(CaseStages/CaseStage[StageCode='WWOS'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WUBJUD'and normalize-space(Date) != ''] or CaseStages/CaseStage[StageCode='WEFILING'and normalize-space(Date) != ''])">-->
										<xsl:if test="not(Sources/Source[StageCode = 'WWOS'] or Sources/Source[StageCode = 'WUBJUD'] or Sources/Source[StageCode = 'WEFILING'])">
											<fo:instream-foreign-object>
												<svg version="1.0"
													xmlns="http://www.w3.org/2000/svg" height="110" width="700">
													<xsl:for-each select="CaseStages">
														<xsl:for-each select="CaseStage[not(contains(StageDesc, 'WRIT OF SUMMON') or contains(StageDesc, 'JUDGEMENT') or contains(StageDesc, 'eCause List') or contains(StageDesc, 'EFILING SYSTEM'))]">
															<xsl:if test="position() = 1">
																<xsl:variable name="Size1" select="(position() * 10)"/>
																<xsl:variable name="Size2" select="(position() * 60)"/>
																<xsl:variable name="Size3" select="(position() * 80)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:if>
															<xsl:if test="position() > 1">
																<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
																<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
																<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
																<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
																<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
																<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
																<xsl:choose>
																	<xsl:when test="contains((StageDesc),'(NA)')">
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																				</text>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:choose>
																					<xsl:when test="string-length(StageDesc) > 15">
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																						</text>
																						<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:when>
																					<xsl:otherwise>
																						<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																							<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																						</text>
																						<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise>
																		<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																		<xsl:choose>
																			<xsl:when test="string-length(StageDesc) > 30">
																				<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																				</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																				<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																					<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																		<xsl:choose>
																			<xsl:when test="Date = ''">
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																			</xsl:when>
																			<xsl:otherwise>
																				<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					<xsl:value-of select="Date"/>
																				</text>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:if test="position() = last()">
																	<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																	<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																		<xsl:value-of select="$estimateDuration"/>
																		<xsl:choose>
																			<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																			<xsl:otherwise>
																			year
																		</xsl:otherwise>
																		</xsl:choose>
																	</text>
																</xsl:if>
															</xsl:if>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="Duration">
														<xsl:variable name="value-of-template">
															<xsl:apply-templates />
														</xsl:variable>
														<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
														</text>
													</xsl:for-each>
												</svg>
											</fo:instream-foreign-object>
										</xsl:if>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<xsl:if test="normalize-space($value-of-template) != '' and normalize-space($value-of-template) != '-'">
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
									<!-- <fo:block>&#160;</fo:block> -->
									<!-- <fo:block>&#160;</fo:block> -->
								</xsl:for-each>
								</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>								
										<!-- <fo:block>&#160;</fo:block> -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
										</fo:table>										
									  </xsl:otherwise>
							</xsl:choose>
								<fo:block>&#160;</fo:block>
								
								 <xsl:variable name="subsectioncount51_4" select="
								  count(Response/ReportAccess/LTLEGAL[. = 'Y']) +
								  number(count($XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus) = 'ST'
								  and normalize-space(SubjectRole) = 'DEFENDANT']) &gt; 0)"/>	
									<fo:block color="#00008b" font-size="9pt" font-weight="bold"
								height="20px" margin="0px" padding="0px" text-align="left">
									<fo:block>
										<fo:inline>
											<xsl:value-of select="concat($sectioncount0_7, '.5 ')" />
										</fo:inline>
										<fo:inline>
											<xsl:text>LITIGATION INFORMATION (SUBJECT AS A DEFENDANT - SETTLED/ WITHDRAWN/ STRIKE OUT/ STRUCK OFF/ DISCONTINUED/ DISCHARGED)</xsl:text>
										</fo:inline>
									</fo:block>
								</fo:block>
								<xsl:choose>
									<!-- If there *is* matching data -->
								<xsl:when test="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)='ST' and normalize-space(SubjectRole)='DEFENDANT']">
										<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[normalize-space(OCRStatus)='ST' and normalize-space(SubjectRole)='DEFENDANT']">
									<!-- <fo:block>&#160;</fo:block> -->
									<xsl:variable name="caseNumber" select="CaseNo" />
									<xsl:variable name="estimateDuration" select="EstimateDuration" />
									<!-- Display Winding Up Table -->
									<xsl:if test="not(contains($caseNumber, 'Voluntary'))">									
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="35%" />
											<fo:table-body start-indent="0pt">
												<!--<xsl:if test="$XML/Response/Subject/ConstitutionType = 24"><fo:table-row><fo:table-cell number-columns-spanned="4"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center"><fo:block font-weight="normal"><fo:inline font-weight="bold"><xsl:text>Mode of Identification: </xsl:text></fo:inline><xsl:for-each select="MatchType"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row></xsl:if>-->
												<fo:table-row>
													<fo:table-cell	number-columns-spanned="4"
																background-color="#9edbaf" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="bold" border="solid 1pt gray"
																padding="2pt" display-align="center">
														<fo:block font-size="9pt" font-weight="bold">
															<fo:inline>
																<xsl:value-of select="concat($sectioncount5_1, '.5.')" />
															</fo:inline>
															<xsl:value-of select="position()" />
															<xsl:text>. </xsl:text>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'CRI'">
															        <xsl:text>CIVIL - </xsl:text>
															    </xsl:when>
															    <xsl:otherwise>
															        <xsl:text>CRIMINAL - </xsl:text>
															    </xsl:otherwise>
															</xsl:choose>
															<xsl:choose>
															    <xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING' or Sources/Source[1]/StageCode = 'AUC'">
																		  <xsl:variable name="nextValidSource" select="Sources/Source[position() &gt; 1 and not(StageCode = 'WEFILING' or StageCode = 'BEFILING' or StageCode = 'AUC')][1]" />
																		  <xsl:choose>
																				<xsl:when test="$nextValidSource">
																					<xsl:choose>
																						<xsl:when test="$nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																							or $nextValidSource/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																							or $nextValidSource/StageDesc = 'Kes Jenayah Komersial'">
																							<xsl:text>Commercial Crime</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																							or $nextValidSource/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																							<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BDIS'">
																						  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BFINM' or $nextValidSource/StageCode = 'BSSM' or $nextValidSource/StageCode = 'BDOD' or $nextValidSource/StageCode = 'BFM'">
																						  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BAOO'">
																						  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BARO'">
																						  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'BCP' or $nextValidSource/StageCode = 'BN'">
																						  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WDIS'">
																						  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WFM' or $nextValidSource/StageCode = 'WDOD' or $nextValidSource/StageCode = 'WSSM' or $nextValidSource/StageCode = 'WFINM'">
																						  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUAOR'">
																						  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUO'">
																						  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WUBJUD'">
																						  <xsl:text>JUDGMENT ISSUED</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS'">
																						  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																						</xsl:when>
																						<xsl:when test="$nextValidSource/StageCode = 'WWOS' or $nextValidSource/StageCode = 'BWOS'">
																						  <xsl:text>SUMMONS ISSUED</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:text>SUMMONS ISSUED</xsl:text>
																					<xsl:choose>
																						<xsl:when test="Sources/Source[1]/StageCode = 'WEFILING' or Sources/Source[1]/StageCode = 'BEFILING'">
																							<xsl:if test="normalize-space(CaseStmt) != '-'">
																							  <xsl:text> - </xsl:text>																							  
																								<xsl:value-of select="translate(CaseStmt, $smallcase, $uppercase)" />																						  
																							</xsl:if>
																						</xsl:when>
																						<xsl:when test="Sources/Source[1]/StageCode = 'AUC'">
																							<xsl:text> - AUCTION</xsl:text>
																						</xsl:when>
																					</xsl:choose>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen'
																			or Sources/Source[1]/StageDesc = 'Rayuan kes Jenayah Komersial dari Mahkamah Sesyen (Perkhidmat Awam)'
																			or Sources/Source[1]/StageDesc = 'Kes Jenayah Komersial'">
																			<xsl:text>Commercial Crime</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952'
																			or Sources/Source[1]/StageDesc = 'Seksyen 39B Akta Dadah Berbahaya 1952 (Perkhidmat Awam)'">
																			<xsl:text>Dangerous Drugs Act 1952</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BDIS'">
																		  <xsl:text>BANKRUPTCY  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BFINM' or Sources/Source[1]/StageCode = 'BSSM' or Sources/Source[1]/StageCode = 'BDOD' or Sources/Source[1]/StageCode = 'BFM'">
																		  <xsl:text>BANKRUPTCY  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BAOO'">
																		  <xsl:text>BANKRUPTCY  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BARO'">
																		  <xsl:text>BANKRUPTCY  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'BCP' or Sources/Source[1]/StageCode = 'BN'">
																		  <xsl:text>BANKRUPTCY  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WDIS'">
																		  <xsl:text>COMPANIES WINDING UP  - DISCHARGED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WFM' or Sources/Source[1]/StageCode = 'WDOD' or Sources/Source[1]/StageCode = 'WSSM' or Sources/Source[1]/StageCode = 'WFINM'">
																		  <xsl:text>COMPANIES WINDING UP  - SUBSEQUENT MEETING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUAOR'">
																		  <xsl:text>COMPANIES WINDING UP  - APPOINTMENT OF OFFICIAL RECEIVER</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUO'">
																		  <xsl:text>COMPANIES WINDING UP  - ORDER ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUBJUD'">
																		  <xsl:text>JUDGMENT ISSUED</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WUP'">
																		  <xsl:text>COMPANIES WINDING UP  - PROCEEDING</xsl:text>
																		</xsl:when>
																		<xsl:when test="Sources/Source[1]/StageCode = 'WWOS' or Sources/Source[1]/StageCode = 'BWOS'">
																		  <xsl:text>SUMMONS ISSUED</xsl:text>
																		</xsl:when>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>												
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Case Details</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Creditor/Plaintiff/Appellant</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<!-- <xsl:text>Court</xsl:text> -->
																<xsl:text>Case No.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="CaseNo">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block></fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:block>
													</fo:table-cell>
													<!--<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center"><fo:block><xsl:for-each select="City"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell>-->
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(Court) or normalize-space(City) or normalize-space(State)">
																	<xsl:if test="normalize-space(Court)">
																		 <xsl:value-of select="translate(normalize-space(Court), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(City) or normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(City)">
																		 <xsl:value-of select="translate(normalize-space(City), $smallcase, $uppercase)" />
																		<xsl:if test="normalize-space(State)">
																			<xsl:text>, </xsl:text>
																		</xsl:if>
																	</xsl:if>
																	<xsl:if test="normalize-space(State)">
																		<xsl:value-of select="translate(normalize-space(State), $smallcase, $uppercase)" />
																	</xsl:if>
																</xsl:when>
																<xsl:otherwise>-</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>IC/Passport/Registration No.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffID">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Amount (RM)</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Amount">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = '-' or number(translate($value-of-template, '&#x2029;', '')) = 0 or not($value-of-template)">
																				<fo:inline>-</fo:inline>
																	</xsl:when>		
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="format-number(number($value-of-template), '###,##0.00')" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block>
															<xsl:for-each select="PlaintiffAddr">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											<xsl:if test="
												(normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-') 
												or (normalize-space(CaseDate) and normalize-space(CaseDate) != '-')
												or (
													(not(normalize-space(PetitionDate)) or normalize-space(PetitionDate) = '-') and
													(not(normalize-space(CaseDate)) or normalize-space(CaseDate) = '-') and
													(not(normalize-space(HearingDate)) or normalize-space(HearingDate) = '-') and
													(not(normalize-space(MeetingDate)) or normalize-space(MeetingDate) = '-') and
													(not(normalize-space(OrderDate)) or normalize-space(OrderDate) = '-') and
													(not(normalize-space(DischargedDate)) or normalize-space(DischargedDate) = '-')
												)
											">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Petition/Summon/ Case Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(PetitionDate) and normalize-space(PetitionDate) != '-'">
																	<xsl:for-each select="PetitionDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(CaseDate)">
																	<xsl:for-each select="CaseDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(HearingDate) and normalize-space(HearingDate) != '-') or (normalize-space(MeetingDate) and normalize-space(MeetingDate) != '-')">											
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Hearing/Meeting Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(HearingDate) and normalize-space(HearingDate) != '-'">
																	<xsl:for-each select="HearingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="normalize-space(MeetingDate)">
																	<xsl:for-each select="MeetingDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Sources/Source[1]">
																<xsl:variable name="publication">
																	<xsl:for-each select="Publication[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<xsl:variable name="date">
																	<xsl:for-each select="Date[1]">
																		<xsl:apply-templates />
																	</xsl:for-each>
																</xsl:variable>
																<fo:block>
																	<xsl:value-of select="normalize-space($publication)" />
																	<xsl:text> </xsl:text>
																	<xsl:value-of select="normalize-space($date)" />
																</fo:block>
															</xsl:for-each>

														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(OrderDate) and normalize-space(OrderDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Judgement/Order Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(OrderDate) and normalize-space(OrderDate) != '-'">
																	<xsl:for-each select="OrderDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
											<xsl:if test="(normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-')">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Dissolution/Discharged Date</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<xsl:choose>
																<xsl:when test="normalize-space(DischargedDate) and normalize-space(DischargedDate) != '-'">
																	<xsl:for-each select="DischargedDate">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:when>																
																<xsl:otherwise>
																  <fo:inline>-</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>															
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
												<!--<fo:table-row><fo:table-cell background-color="#e4fae6" font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center"><fo:block font-weight="bold"><xsl:text>Case Date</xsl:text></fo:block></fo:table-cell><fo:table-cell font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal"
															border="solid 1pt gray" padding="2pt" display-align="center"><fo:block><xsl:for-each select="CaseDate"><xsl:variable name="value-of-template"><xsl:apply-templates /></xsl:variable><xsl:choose><xsl:when test="contains(string($value-of-template),'&#x2029;')"><fo:block><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:block></xsl:when><xsl:otherwise><fo:inline><xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /></fo:inline></xsl:otherwise></xsl:choose></xsl:for-each></fo:block></fo:table-cell></fo:table-row>-->
											</fo:table-body>
										</fo:table>
										<xsl:choose>
											<xsl:when test="LitigationType = 'WEFILING' or LitigationType = 'BEFILING'">
												<fo:table color="black" font-size="11px" margin="0px"
														padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
														border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="4"
																	background-color="#e4fae6" font-size="8pt" font-style="normal"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor (Defendant)</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																	font-size="8pt" font-style="normal" font-variant="normal"
																	font-weight="normal" border="solid 1pt gray" padding="2pt"
																	display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="3"
																	font-variant="normal" font-weight="normal" border="solid 1pt gray"
																	padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</xsl:when>
											<xsl:when test="not(LiquidatorName) or normalize-space(LiquidatorName) = '-'">
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="85%" />													
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
																background-color="#e4fae6" font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal" number-columns-spanned="1"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>														
													</fo:table-body>
												</fo:table>
											</xsl:when>
											<xsl:otherwise>
												<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-column column-width="15%" />
													<fo:table-column column-width="35%" />
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Solicitor</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold" text-decoration="underline">
																	<xsl:text>Liquidator</xsl:text>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Name</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="20px"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" height="25px"
															padding="2pt" display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Address</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorAddr">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Tel</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorTelNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="SolicitorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
																<fo:block font-weight="bold">
																	<xsl:text>Ref no.</xsl:text>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="LiquidatorRefNo">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates />
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</xsl:otherwise>
										</xsl:choose>
										<xsl:if test="LitigationType = 'AUC'">
											<!-- Property Details -->
											<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="35%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="4"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold" text-decoration="underline">
																<xsl:text>Auction Details</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Property Address</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="AddressOfProperty">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#e4fae6"  number-rows-spanned="4" 
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Source of Information</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal" number-rows-spanned="4"
												font-variant="normal" font-weight="normal"
												border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="Sources/Source[1]">
																	<xsl:variable name="publication">
																		<xsl:for-each select="Publication[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:variable name="date">
																		<xsl:for-each select="Date[1]">
																			<xsl:apply-templates />
																		</xsl:for-each>
																	</xsl:variable>
																	<fo:block>
																		<xsl:value-of select="normalize-space($publication)" />
																		<xsl:text> </xsl:text>
																		<xsl:value-of select="normalize-space($date)" />
																	</fo:block>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<!-- <fo:table-row>
														<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Title No.</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="SolicitorAddr">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row> -->
													<fo:table-row>
														<fo:table-cell 
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Property Type</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal" 
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="ParticularsTitleOfProperty">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Reserve Price (RM)</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="ReservePrice">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:variable name="normalized-amount">
																		<xsl:choose>
																			<xsl:when test="normalize-space($value-of-template) = '-'">0</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="normalize-space($value-of-template)" />
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="number($normalized-amount) = 0">
																			<fo:inline>-</fo:inline>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:value-of select="format-number(number($normalized-amount), '#,###.00')" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" height="20px"
																padding="2pt" display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Auction Date/Time</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="AuctionDate">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template" />
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:if>
										<xsl:for-each select="SettlementDate">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Settlement Date</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:choose>
																	<xsl:when test="normalize-space($value-of-template) = ''">
																		<xsl:text>-</xsl:text>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</xsl:otherwise>
																</xsl:choose>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:for-each>
									</xsl:if>
									<!-- Display Voluntary Winding Up Table -->
									<xsl:if test="contains($caseNumber, 'Voluntary')">
										<!-- Start Arrow1-->
										<fo:instream-foreign-object>
											<svg version="1.0"
												xmlns="http://www.w3.org/2000/svg" height="110" width="700">
												<xsl:for-each select="CaseStages">
													<xsl:for-each select="CaseStage">
														<xsl:if test="position() = 1">
															<xsl:variable name="Size1" select="(position() * 10)"/>
															<xsl:variable name="Size2" select="(position() * 60)"/>
															<xsl:variable name="Size3" select="(position() * 80)"/>
															<xsl:choose>
																<xsl:when test="contains((StageDesc),'(NA)')">
																	<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																			</text>
																			<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																					</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:choose>
																				<xsl:when test="string-length(StageDesc) > 15">
																					<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																					</text>
																					<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																					</text>
																					<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																				</xsl:when>
																				<xsl:otherwise>
																					<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																					</text>
																					<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																							-No info yet-
																						</text>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:otherwise>
																	<polygon points="{$Size1} 40, {$Size2} 40, {$Size3} 68, {$Size2} 95, {$Size1} 95" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="20" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5" x="20" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="20" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																		<xsl:when test="Date = ''">
																			<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																						-No info-
																					</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5.5" x="20" y="80" style="fill:black;" font-weight= "bolder">
																				<xsl:value-of select="Date"/>
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:if>
														<xsl:if test="position() > 1">
															<xsl:variable name="SizeA" select="((position()-1) * 60)"/>
															<xsl:variable name="SizeB" select="((position() * 60)+5)"/>
															<xsl:variable name="SizeC" select="((position() * 60)+20)"/>
															<xsl:variable name="SizeD" select="(((position()-1) * 60)+20)"/>
															<xsl:variable name="SizeE" select="(((position()-1) * 60)+25)"/>
															<xsl:variable name="SizeF" select="(((position()-1) * 60)+25)"/>
															<xsl:variable name="SizeG" select="((position() * 60)+12)"/>
															<xsl:choose>
																<xsl:when test="contains((StageDesc),'(NA)')">
																	<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:white;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after(translate(StageDesc,'(NA)',''),  ' '),  ' '),  ' ')"/>
																			</text>
																			<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																			-No info yet-
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:choose>
																				<xsl:when test="string-length(StageDesc) > 15">
																					<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																					</text>
																					<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-after(substring-before(StageDesc,'(' ) , ' ')" />
																					</text>
																					<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																				</xsl:when>
																				<xsl:otherwise>
																					<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																						<xsl:copy-of select="substring-before(StageDesc,'(' )" />
																					</text>
																					<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																					-No info yet-
																				</text>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:otherwise>
																	<polygon points="{$SizeA} 40, {$SizeB} 40, {$SizeC} 68, {$SizeB} 95, {$SizeA} 95, {$SizeD} 68" style="fill:#B1B1B1;stroke:black;stroke-width:1;fill-rule:evenodd;"/>
																	<xsl:choose>
																		<xsl:when test="string-length(StageDesc) > 30">
																			<text font-size="5" x="{$SizeF}" y="50" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before(substring-after (concat(StageDesc,  ' '),  ' '), ' O')"/>
																			</text>
																			<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after ( substring-after (substring-after (StageDesc,  ' '),  ' '),  ' ')"/>
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5" x="{$SizeF}" y="60" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-before( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																			<text font-size="5" x="{$SizeF}" y="70" style="fill:black;" font-weight= "bolder">
																				<xsl:copy-of select="substring-after( concat(StageDesc, ' ' ) , ' ' )" />
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																	<xsl:choose>
																		<xsl:when test="Date = ''">
																			<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				-No info-
																			</text>
																		</xsl:when>
																		<xsl:otherwise>
																			<text font-size="5.5" x="{$SizeE}" y="80" style="fill:black;" font-weight= "bolder">
																				<xsl:value-of select="Date"/>
																			</text>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:otherwise>
															</xsl:choose>
															<xsl:if test="position() = last()">
																<text font-size="5.5" x="{$SizeG}" y="95" style="fill:black;" font-weight= "bolder">
																		Est.
																	</text>
																<text font-size="5.5" x="{$SizeG}" y="105" style="fill:black;" font-weight= "bolder">
																	<xsl:value-of select="$estimateDuration"/>
																	<xsl:choose>
																		<xsl:when test="$estimateDuration > 1" >
																			years
																		</xsl:when>
																		<xsl:otherwise>
																			year
																		</xsl:otherwise>
																	</xsl:choose>
																</text>
															</xsl:if>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
												<xsl:for-each select="Duration">
													<xsl:variable name="value-of-template">
														<xsl:apply-templates />
													</xsl:variable>
													<text font-size="5.5" x="80" y="105" style="fill:black;" font-weight= "bolder">
														<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" /> Months
														
													</text>
												</xsl:for-each>
											</svg>
										</fo:instream-foreign-object>
										<fo:block>&#160;</fo:block>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Liquidator</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Name</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorName"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6" height="20px"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Address</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell  font-size="8pt" font-style="normal" height="20px"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorAddr"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Tel</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorTelNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Ref no.</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="LiquidatorRefNo"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:table color="black" font-size="11px" margin="0px"
												padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
												border-spacing="2pt">
											<fo:table-column column-width="50%" />
											<fo:table-column column-width="50%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2"
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block font-weight="bold" text-decoration="underline">
															<xsl:text>Source of Information</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<xsl:for-each select="Sources/Source[1]">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:value-of select="StageDesc"/>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="Publication/text()"/> / 
																	
																<xsl:value-of select="Date"/>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
												<xsl:if test="not(Sources/Source)">
													<fo:table-row>
														<fo:table-cell number-columns-spanned="2" font-size="8pt"
																font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																text-align="center">
															<fo:block>
																<xsl:text>NA</xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:if>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
															font-size="8pt" font-style="normal" font-variant="normal"
															font-weight="normal" border="solid 1pt gray" padding="2pt"
															display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Status</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="Status"/>
															<xsl:if test="Status = ''">
																<xsl:if test="StatusDate = ''">
																	<xsl:text>-</xsl:text>
																</xsl:if>
															</xsl:if>
															<xsl:if test="Status != ''">
																<xsl:if test="StatusDate != ''">
																	<xsl:text> / </xsl:text>
																</xsl:if>
															</xsl:if>
															<xsl:value-of select="StatusDate"/>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<xsl:for-each select="Remarks">
											<xsl:variable name="value-of-template">
												<xsl:apply-templates />
											</xsl:variable>
											<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
													border-spacing="2pt">
												<fo:table-column column-width="15%" />
												<fo:table-column column-width="85%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell background-color="#e4fae6"
																font-size="8pt" font-style="normal" font-variant="normal"
																font-weight="normal" border="solid 1pt gray" padding="2pt"
																display-align="center">
															<fo:block font-weight="bold">
																<xsl:text>Remarks</xsl:text>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-size="8pt" font-style="normal"
																font-variant="normal" font-weight="normal" border="solid 1pt gray"
																padding="2pt" display-align="center">
															<fo:block>
																<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:for-each>
									</xsl:if>
									<fo:block>&#160;</fo:block>
										</xsl:for-each>
									</xsl:when>
									  <!-- If there is *no* matching data -->
									  <xsl:otherwise>
										<!-- <fo:block>&#160;</fo:block>										 -->
										<fo:table color="black" font-size="11px" margin="0px"
											padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
											border-spacing="2pt">
												<fo:table-column column-width="100%" />
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell
															background-color="#e4fae6" font-size="8pt" font-style="normal"
															font-variant="normal" font-weight="normal" border="solid 1pt gray"
															padding="2pt" display-align="center">
															<fo:block font-weight="normal">
																<xsl:text>NO INFORMATION AVAILABLE </xsl:text>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>										
									  </xsl:otherwise>
								</xsl:choose>
								<xsl:for-each select="$XML/Response/Report/Profile/Litigation/BankruptcyNotices/BankruptcyNotice[LitigationType='CRI']">
									<!-- Show Title One Time Only -->
									<xsl:if test="(position()) = 1">
										<fo:block>&#160;</fo:block>
										<fo:block font-size="9pt" font-weight="bold" text-decoration="underline">
											<xsl:text>CRIMINAL JUDGMENT</xsl:text>
										</fo:block>
									</xsl:if>
									<xsl:for-each select="CaseNo">
										<xsl:variable name="value-of-template">
											<xsl:apply-templates />
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="contains(string($value-of-template),'&#x2029;')">
												<fo:block font-size="9pt" font-weight="bold">
													<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
												</fo:block>
											</xsl:when>
											<xsl:otherwise>
												<fo:block font-size="9pt" font-weight="bold">
													<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
												</fo:block>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
									<!-- Court Details/Plaintiff -->
									<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
										<fo:table-column column-width="15%" />
										<fo:table-column column-width="35%" />
										<fo:table-column column-width="15%" />
										<fo:table-column column-width="35%" />
										<fo:table-body start-indent="0pt">
											<!-- Row 3 -->
											<fo:table-row>
												<fo:table-cell number-columns-spanned="2"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-decoration="underline">
														<xsl:text>Case Details</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell number-columns-spanned="2"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-decoration="underline">
														<xsl:text>Prosecutor / Appellant</xsl:text>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Row 4 -->
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block>
														<fo:inline font-weight="bold">
															<xsl:text>Court</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="Court">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>Name</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="PlaintiffName">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block></fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Row 5 -->
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>City</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="City">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>ID</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="PlaintiffID">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<!-- Row 6 -->
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
												font-size="8pt" font-style="normal" font-variant="normal"
												font-weight="normal" border="solid 1pt gray" padding="2pt"
												display-align="center">
													<fo:block font-weight="bold">
														<xsl:text>State</xsl:text>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="State">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates />
															</xsl:variable>
															<xsl:choose>
																<xsl:when
																test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline>
																		<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6" number-columns-spanned="2">
													<fo:block></fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<!-- Source of Information -->
									<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
									border-spacing="2pt">
										<fo:table-column column-width="15%" />
										<fo:table-column column-width="85%" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell number-columns-spanned="2"
												background-color="#e4fae6" font-size="8pt" font-style="normal"
												font-variant="normal" font-weight="normal" border="solid 1pt gray"
												padding="2pt" display-align="center">
													<fo:block font-weight="bold" text-decoration="underline">
														<xsl:text>Source of Information</xsl:text>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<xsl:for-each select="Sources/Source[1]">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Date of Publication</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Date">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																	test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Source of Publication</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="Publication">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																	test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Date of Access</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="AccessDate">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates />
																</xsl:variable>
																<xsl:choose>
																	<xsl:when
																	test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:for-each>
											<xsl:if test="not(Sources/Source)">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2" font-size="8pt"
													font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													text-align="center">
														<fo:block>
															<xsl:text>NA</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:if>
										</fo:table-body>
									</fo:table>
									<!-- Remarks -->
									<xsl:for-each select="Remarks">
										<xsl:variable name="value-of-template">
											<xsl:apply-templates />
										</xsl:variable>
										<fo:table color="black" font-size="11px" margin="0px"
										padding="0px" table-layout="fixed" width="100%" border="solid 1.5pt black"
										border-spacing="2pt">
											<fo:table-column column-width="15%" />
											<fo:table-column column-width="85%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
														<fo:block font-weight="bold">
															<xsl:text>Remarks</xsl:text>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block>
															<xsl:value-of select="translate($value-of-template, $smallcase, $uppercase)" />
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</xsl:for-each>
									<fo:block>&#160;</fo:block>
									<fo:block>&#160;</fo:block>
									<fo:block>&#160;</fo:block>
								</xsl:for-each>
							</xsl:when>									
									<xsl:otherwise>
										<fo:block>&#160;</fo:block>
										<fo:table color="black" font-size="11px" margin="0px"
									padding="0px" table-layout="fixed" width="100%" border="solid 1pt black"
									border-spacing="2pt">
											<fo:table-column column-width="100%" />
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell
													background-color="#e4fae6" font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="normal" border="solid 1pt gray"
													padding="2pt" display-align="center">
														<fo:block font-weight="normal">
															<xsl:text>NO INFORMATION IS AVAILABLE</xsl:text>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block>&#160;</fo:block>
									</xsl:otherwise>
								</xsl:choose>
							
							</xsl:if>
						</xsl:if>
						<!--END LTLEGAL -->
	
							<xsl:variable name="groupedFlag" select="
							(Response/ReportAccess/PREVENQ = 'Y') or
							(Response/ReportAccess/PREVENQFI = 'Y') or
							(Response/ReportAccess/PREVENQNONFI = 'Y') or
							(Response/ReportAccess/CURRENQ = 'Y')
							" />
							
							<xsl:if test="Response/ReportAccess/PREVENQ =&apos;Y&apos; or Response/ReportAccess/PREVENQFI =&apos;Y&apos; or Response/ReportAccess/PREVENQNONFI =&apos;Y&apos; or Response/ReportAccess/CURRENQ =&apos;Y&apos;">
<!--							<xsl:if test="Response/ReportAccess/PREVENQFI =&apos;Y&apos;">
							<xsl:if test="Response/ReportAccess/PREVENQNONFI =&apos;Y&apos;">
							<xsl:if test="Response/ReportAccess/CURRENQ =&apos;Y&apos;">-->	
									<xsl:variable name="sectioncount0_8" select="
									count(Response/ReportAccess[CURRBUSCOMP = 'Y' or PREVBUSCOMP = 'Y']) +
									count(Response/ReportAccess/PREVBUSCOMP[. = 'Y']) +
									(1 * $hasSummary) +
									(1 * $hasBothSummaryandLit) +
									count(Response/ReportAccess/LOANINFO[. = 'Y']) +
									count(Response/ReportAccess/TRADEREF[. = 'Y']) +
									count(Response/ReportAccess/LTLEGAL[. = 'Y'])
									"/>
									<fo:block>&#160;</fo:block>
									<fo:block>&#160;</fo:block>
									<fo:table border="0px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="550" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block color="#00008b" font-size="10pt" font-weight="bold" height="10px" margin="0px" padding="0px" text-align="left" text-decoration="underline">
															<fo:block>
																<fo:inline>
																	<xsl:value-of select="concat('SECTION ', $sectioncount0_8)"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>: ENQUIRY DETAILS</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<xsl:if test="//Response/ReportType = &apos;ICR-SELF&apos;"> 
											<fo:table-row>
												<fo:table-cell border="0px" font-size="8pt"
													padding="2pt" display-align="center">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block font-size="8pt"
																font-style="normal" font-variant="normal"
																font-weight="normal">
															<fo:block>
																<fo:inline>
																	<xsl:text>This section displays the current and previous enquiries made on your credit report under credit review by lending institutions
																		and the Bureau&#39;s members.</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>									
											</xsl:if>											
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<xsl:if test="Response/ReportAccess/PREVENQ =&apos;Y&apos;">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="113" />
																<fo:table-column column-width="113" />
																<fo:table-column column-width="113" />
																<fo:table-column column-width="213" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="4" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Enquiry(ies) in the Past 12 Months (Banks)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="normal">
																					<xsl:text>Enquiry Date/Time</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="normal">
																					<xsl:text>Enquiry Number</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Enquiry Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Enquirer ID</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="Response">
																			<xsl:for-each select="Report">
																				<xsl:for-each select="SMEProfile">
																					<xsl:for-each select="PrevEnquiries">
																						<xsl:for-each select="PrevEnquiry">
																							<fo:inline-container>
																								<fo:block>
																									<xsl:text>&#x2029;</xsl:text>
																								</fo:block>
																							</fo:inline-container>
																							<fo:table color="black" font-size="11px"
																								margin="0px" padding="0px" table-layout="fixed"
																								width="100%" border="solid 1pt gray"
																								border-spacing="2pt">
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="213" />
																								<fo:table-body start-indent="0pt">
																									<fo:table-row>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqDate">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqNo">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Purpose">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Enquirer">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</fo:table-body>
																							</fo:table>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																				<!-- Individual Report - Previous Enquiry (Start) -->
																				<xsl:for-each select="Profile">
																					<xsl:for-each select="PrevEnquiries">
																						<xsl:for-each select="PrevEnquiry">
																							<fo:inline-container>
																								<fo:block>
																									<xsl:text>&#x2029;</xsl:text>
																								</fo:block>
																							</fo:inline-container>
																							<fo:table color="black" font-size="11px"
																								margin="0px" padding="0px" table-layout="fixed"
																								width="100%" border="solid 1pt gray"
																								border-spacing="2pt">
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="213" />
																								<fo:table-body start-indent="0pt">
																									<fo:table-row>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqDate">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqNo">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Purpose">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Enquirer">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</fo:table-body>
																							</fo:table>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																				<!-- Individual Report - Previous Enquiry (End) -->
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block>
														</xsl:if>
														<xsl:if test="Response/ReportAccess/PREVENQFI =&apos;Y&apos;">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="113" />
																<fo:table-column column-width="113" />
																<fo:table-column column-width="113" />
																<fo:table-column column-width="213" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="4" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Enquiry(ies) in the Past 12 Months (Banks)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="normal">
																					<xsl:text>Enquiry Date/Time</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="normal">
																					<xsl:text>Enquiry Number</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Enquiry Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Enquirer ID</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="Response">
																			<xsl:for-each select="Report">
																				<!-- Individual Report - Previous Enquiry FI (Start) -->
																				<xsl:for-each select="Profile">
																					<xsl:for-each select="PrevEnquiriesFI">
																						<xsl:for-each select="PrevEnquiryFI">
																							<fo:inline-container>
																								<fo:block>
																									<xsl:text>&#x2029;</xsl:text>
																								</fo:block>
																							</fo:inline-container>
																							<fo:table color="black" font-size="11px"
																								margin="0px" padding="0px" table-layout="fixed"
																								width="100%" border="solid 1pt gray"
																								border-spacing="2pt">
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="213" />
																								<fo:table-body start-indent="0pt">
																									<fo:table-row>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqDate">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqNo">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Purpose">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Enquirer">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</fo:table-body>
																							</fo:table>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																				<!-- Individual Report - Previous Enquiry FI (End) -->
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block>
														</xsl:if>
														<xsl:if test="Response/ReportAccess/PREVENQNONFI =&apos;Y&apos;">
															<fo:block>
																<fo:leader leader-pattern="space" />
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table color="black" font-size="11px" margin="0px"
																padding="0px" table-layout="fixed" width="100%"
																border="solid 1pt gray" border-spacing="2pt">
																<fo:table-column column-width="113" />
																<fo:table-column column-width="113" />
																<fo:table-column column-width="113" />
																<fo:table-column column-width="213" />
																<fo:table-body start-indent="0pt">
																	<fo:table-row>
																		<fo:table-cell background-color="#9edbaf"
																			color="#2c2c2c" font-size="8pt" font-style="normal"
																			font-variant="normal" font-weight="bold"
																			number-columns-spanned="4" border="solid 1pt gray"
																			padding="2pt" display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Enquiry(ies) in the Past 12 Months (Non-Banks)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																	<fo:table-row>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="normal">
																					<xsl:text>Enquiry Date/Time</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline font-style="normal"
																					font-variant="normal" font-weight="normal">
																					<xsl:text>Enquiry Number</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Enquiry Type</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell background-color="#e4fae6"
																			font-size="8pt" font-style="normal" font-variant="normal"
																			font-weight="normal" border="solid 1pt gray" padding="2pt"
																			display-align="center">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Enquirer ID</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</fo:table-body>
															</fo:table>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="Response">
																			<xsl:for-each select="Report">
																				<!-- Individual Report - Previous Enquiry Non FI (Start) -->
																				<xsl:for-each select="Profile">
																					<xsl:for-each select="PrevEnquiriesNonFI">
																						<xsl:for-each select="PrevEnquiryNonFI">
																							<fo:inline-container>
																								<fo:block>
																									<xsl:text>&#x2029;</xsl:text>
																								</fo:block>
																							</fo:inline-container>
																							<fo:table color="black" font-size="11px"
																								margin="0px" padding="0px" table-layout="fixed"
																								width="100%" border="solid 1pt gray"
																								border-spacing="2pt">
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="113" />
																								<fo:table-column column-width="213" />
																								<fo:table-body start-indent="0pt">
																									<fo:table-row>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqDate">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="EnqNo">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Purpose">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell font-size="8pt"
																											font-style="normal" font-variant="normal"
																											font-weight="normal" border="solid 1pt gray"
																											padding="2pt" display-align="center">
																											<fo:block>
																												<xsl:for-each select="Enquirer">
																													<xsl:variable name="value-of-template">
																														<xsl:apply-templates />
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when
																															test="contains(string($value-of-template),'&#x2029;')">
																															<fo:block>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline>
																																<xsl:copy-of select="$value-of-template" />
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</fo:table-body>
																							</fo:table>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																				<!-- Individual Report - Previous Enquiry Non FI (End) -->
																				
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block>
														</xsl:if>
													
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border="0px" border-style="solid"
													font-size="8pt" padding="2pt" display-align="center">
													<fo:block>
														<xsl:if test="Response/ReportAccess/CURRENQ =&apos;Y&apos;">
															<fo:block>
																<fo:leader leader-pattern="space" />
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px"
																		margin="0px" padding="0px" table-layout="fixed" width="100%"
																		border="solid 1pt gray" border-spacing="2pt">
																		<fo:table-column column-width="184" />
																		<fo:table-column column-width="184" />
																		<fo:table-column column-width="184" />
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell background-color="#9edbaf"
																					color="#2c2c2c" font-size="8pt" font-style="normal"
																					font-variant="normal" font-weight="bold"
																					number-columns-spanned="3" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Current enquiry</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Enquiry Number</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Report Enquiry Type</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="#e4fae6"
																					font-size="8pt" font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<fo:inline>
																							<xsl:text>Enquirer ID</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>																				
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="ReqNo">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="PurposeDesc">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="$XML">
																							<xsl:for-each select="Response">
																								<xsl:for-each select="UserID">
																									<xsl:variable name="value-of-template">
																										<xsl:apply-templates />
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when
																											test="contains(string($value-of-template),'&#x2029;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template" />
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>																				
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																	<fo:block>&#160;</fo:block>
																	<fo:block>&#160;</fo:block>
																	<fo:block>
																		<fo:leader leader-pattern="space" />
																	</fo:block>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block />
															</fo:block>
														</xsl:if>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>										
										</fo:table-body>
									</fo:table>
							<!--	</xsl:if>
								</xsl:if>
								</xsl:if>-->
								</xsl:if>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
							</fo:block>

							<xsl:variable name="groupedFlag" select="
							(Response/ReportAccess/PREVENQ = 'Y') or
							(Response/ReportAccess/PREVENQFI = 'Y') or
							(Response/ReportAccess/PREVENQNONFI = 'Y') or
							(Response/ReportAccess/CURRENQ = 'Y')
							" />
							<xsl:variable name="hasTrdOrMotor" select="(Response/ReportAccess/TRDCREDIT = 'Y') or (Response/ReportAccess/MOTORTRADE = 'Y')" />
							<xsl:variable name="hasSummary" select="(Response/ReportAccess/SUMMARY = 'Y') or (Response/ReportAccess/LTLEGAL = 'Y')" />
							<xsl:variable name="hasBothSummaryandLit" select="(Response/ReportAccess/SUMMARY = 'Y') and (Response/ReportAccess/LTLEGAL = 'Y')" />

							<fo:block>
								<xsl:if test="Response/ReportAccess/TRDNARRATIVE=&apos;Y&apos;">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block>
										<fo:block color="#00008b" font-size="9pt"
																								font-weight="bold" height="10px" margin="0px"
																								padding="0px" text-align="left">
											<fo:block>
												<fo:inline>
													<xsl:text>REMARKS BY SUBJECT INDIVIDUAL</xsl:text>														
												</fo:inline>
											</fo:block>
										</fo:block>
									</fo:block>
									<xsl:if test="Response/ReportType = &apos;ICR-SELF&apos;">
									<fo:block>
										<fo:block font-size="8pt"
														font-style="normal" font-variant="normal"
														font-weight="normal">
											<fo:block>
												<fo:inline>
													<xsl:text>This section contains any dispute, discrepancies of data or special remarks made available to the Bureau by individual, members
													of the bureau or any data sources and authorities.</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:block>
									</fo:block>									 
									</xsl:if>										
									<fo:table color="black" font-size="11px" margin="0px"
										padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
										border-spacing="2pt">
										<fo:table-column column-width="113" />
										<fo:table-column column-width="113" />
										<fo:table-column column-width="113" />
										<fo:table-column column-width="214" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell background-color="#9edbaf"
													color="#2c2c2c" font-size="8pt" font-style="normal"
													font-variant="normal" font-weight="bold"
													number-columns-spanned="4" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Narratives</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Creation Date</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Nature of Dispute</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Status</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell background-color="#e4fae6"
													font-size="8pt" font-style="normal" font-variant="normal"
													font-weight="normal" border="solid 1pt gray" padding="2pt"
													display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Status Date</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block>
											<xsl:for-each select="$XML">
												<xsl:for-each select="Response">
													<xsl:for-each select="Report">
														<xsl:for-each select="Profile">
															<xsl:for-each select="TradeNarratives">
																<xsl:for-each select="TradeNarrative">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table color="black" font-size="11px"
																		margin="0px" padding="0px" table-layout="fixed" width="100%"
																		border="solid 1pt gray" border-spacing="2pt">
																		<fo:table-column column-width="113" />
																		<fo:table-column column-width="113" />
																		<fo:table-column column-width="113" />
																		<fo:table-column column-width="214" />
																		<fo:table-body start-indent="0pt">
																			<fo:table-row>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="DateCreated">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="NatureOfDispute">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="Status">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell font-size="8pt"
																					font-style="normal" font-variant="normal"
																					font-weight="normal" border="solid 1pt gray"
																					padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:for-each select="StatusDate">
																							<xsl:variable name="value-of-template">
																								<xsl:apply-templates />
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when
																									test="contains(string($value-of-template),'&#x2029;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template" />
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		</fo:table-body>
																	</fo:table>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</fo:block>
									</fo:block>
								</xsl:if>

						
						<xsl:if
							test="Response/ReportAccess/GLOSSARY =&apos;Y&apos; or Response/ReportAccess/FINRATIOGLOSSARY =&apos;Y&apos;">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block>&#160;</fo:block>
							<fo:block>
								<fo:leader leader-pattern="space" />
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block margin="0pt">
								<fo:block />
							</fo:block>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="550" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block color="#00008b" font-size="9pt"
													font-weight="bold" height="10px" margin="0px" padding="0px"
													text-align="left">
													<fo:block>
														<fo:inline>
															<xsl:text>GLOSSARY</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="0px" color="black" font-size="11px"
								margin="0px" padding="0px" table-layout="fixed" width="100%"
								border-spacing="2pt">
								<fo:table-column column-width="proportional-column-width(1)" />
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="0px" padding="2pt"
											display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table color="black" font-size="11px" margin="0px"
													padding="0px" table-layout="fixed" width="100%" border="solid 1pt gray"
													border-spacing="2pt">
													<fo:table-column column-width="552" />
													<fo:table-body start-indent="0pt">
														<fo:table-row font-size="x-small">
															<fo:table-cell border="0px" border-style="solid"
																font-size="x-small" font-style="normal" font-variant="normal"
																font-weight="normal" padding="2pt" height="180"
																display-align="center">
																<fo:block>
																	<xsl:if test="Response/ReportAccess/GLOSSARY =&apos;Y&apos;">
																	<fo:block>
																		<fo:inline font-weight="bold" color=" #004085">MySCoRE ASSESSMENT</fo:inline>												
																		<!--<fo:inline font-weight="bold">
																			 ASSESSMENT
																		</fo:inline>-->
																	</fo:block>			
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>																															
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold" text-decoration="underline">
																					<xsl:text>Credit Grade</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>A value given to an individual to reflect their current and past debt repayment patterns. A grade of “Excellent” is considering the best.</xsl:text>
																				</fo:inline>
																			</fo:block>
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For scored individual, the credit grade between Excellent to Very Poor.</xsl:text>
																				</fo:inline>
																			</fo:block>
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For non-scored individual, the credit grade will be "-".</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold" text-decoration="underline">
																					<xsl:text>Credit Score</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>A credit score is a numerical summary of the information contained in individual credit report. The credit score is calculated by using a statistical model which is used to objectively evaluate information that pertains to make a credit decision.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For scored individual, it is an integer between 0 to 100. An individual with lower score is more risky then one with higher value.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For non-scored individual, it has a value of "-".</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold"  text-decoration="underline">
																					<xsl:text>Probability of Default (PD)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>It is the predicted probability of default for the individual within the next 12 month.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For scored individual, it is a value between 0 and 100. An individual with a higher probability of default is more risky than one with lower value.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>																	
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For non-scored individual, the value is "-".</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>** Below with the following mapping between credit grade, color scheme, credit score, and the PD for scored individual.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:table color="black" font-size="11px" margin="0px"
																			padding="0px" table-layout="fixed" width="60%" border="solid 0.2mm black"
																			border-spacing="2pt">
																			<fo:table-column column-width="80" />
																			<fo:table-column column-width="80" />
																			<fo:table-column column-width="80" />
																			<fo:table-column column-width="120" />
																			<fo:table-header start-indent="0pt">
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Credit Grade</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Color Scheme</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Credit Score</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Probability of Default (PD)</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>																																								
																			</fo:table-header>
																			
																			<fo:table-body start-indent="0pt">
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Excellent</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#04a438"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>93 - 100</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>0.01% - 1.40%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Very Good</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#7fba27"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>80 - 92</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>1.41% - 3.70%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Good</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#f8e926"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>65 - 79</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>3.71% - 10.20%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Fair</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#f4991b"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>60 - 64</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>10.21% - 14.30%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>		
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Below Average</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#ee757c"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>50 - 59</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>14.31% - 27.00%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Poor</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#e83c5b"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>39 - 49</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>27.01% - 46.00%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Very Poor</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#e52421"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>0 - 38</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>46.01% - 100.00%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				<!--
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>HH</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#FE0000"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>459 – 490</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>47.51% - 72.60%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>II</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#FE0000"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>419 – 458</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>73.29% - 91.38%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>JJ</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#FE0000"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>10 – 418</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>91.65% - 100.00%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>X4</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#0BFF01"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>4</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>0.00% - 2.40%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>X3</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#0BFF01"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>3</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>2.50% - 3.70%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>X2</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#0BFF01"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>2</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>3.80% - 5.80%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>X1</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black" background-color="#FCF004"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text></xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>1</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>5.90% - 100.00%</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				-->
																			</fo:table-body>
																		</fo:table>		
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>For non-scored individual, we have the following mapping.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:table color="black" font-size="11px" margin="0px"
																			padding="0px" table-layout="fixed" width="60%" border="solid 0.2mm black"
																			border-spacing="2pt">
																			<fo:table-column column-width="100" />
																			<fo:table-column column-width="120" />
																			<!--<fo:table-column column-width="80" />-->
																			<fo:table-column column-width="100" />
																			<fo:table-column column-width="80" />
																			<fo:table-header start-indent="0pt">
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Non-Scored Segments</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Remarks</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				<!--
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Credit Grade</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				-->
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Credit Score</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>
																				<fo:table-cell border="solid 0.2mm black" background-color="#F6CEF5"
																					font-size="x-small" font-style="normal" font-variant="normal"
																					font-weight="bold" padding="2pt" 
																					text-align="center">
																						<fo:block margin="0pt">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>Probability of Default(PD)</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block>																						
																				</fo:table-cell>																																								
																			</fo:table-header>
																			
																			<fo:table-body start-indent="0pt">
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>No File</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>No data in CCRIS</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>

																				<!--
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Exclusion</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>Subject's profile matched in CCRIS but there are insufficient data or presence of confidential data that renders an exclusion</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				-->
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>90+ PD</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If at least one trade shows 90+ days in arrears at time of scoring (cycle 4+), then no score will be generated</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z1</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Rescheduled</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If first occurrence of Account Status = "C" is in the last 9 months, then no score will be generated</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z2</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Restructured</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If first occurrence of Account Status = "T" is in the last 9 months, then no score will be generated</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z3</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>AKPK</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If first occurrence of Account Status = "K" ever, then no score will be generated until settled</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z4</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Partial Write Off</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If first occurrence of Account Status = "P" ever, then no score will be generated until settled</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z5</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Write Off</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If first occurrence of Account Status = "W" ever, then no score will be generated until settled</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z6</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>	
																				
																				<fo:table-row font-size="x-small" text-align="center">
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="bold" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Legal</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																						<fo:block>
																							<fo:inline>
																								<xsl:text>If Legal Status = "Sumn/writ files", "Jdgmtord/ordsal", "Bankruptcy", "Chrg ordr", "Gamshe ordr", "Wrt of seiz &amp; sal", "Prohib ordr", "Winding up", "Auction", "Jdgmt debtr sum" - then no score will be generated</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																					<!--
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>Z7</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					-->
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																					<fo:table-cell border="solid 0.2mm black"
																						font-size="x-small" font-style="normal" font-variant="normal"
																						font-weight="normal" padding="2pt"
																						display-align="center">
																							<fo:block margin="0pt">
																								<fo:block>
																									<fo:inline>
																										<xsl:text>A dash "-" will be shown</xsl:text>
																									</fo:inline>
																								</fo:block>
																							</fo:block>																						
																					</fo:table-cell>
																				</fo:table-row>
																			</fo:table-body>
																		</fo:table>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>																															
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold" text-decoration="underline">
																					<xsl:text>Key Influencing Factors (KIF)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>This segment provides an overview of reasons for the level or risk that has been assigned. The KIF may consist of positive and negative suggestions that have affected the calculation of PD, credit score and also the credit grade.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>	
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold" text-decoration="underline">
																					<xsl:text>Income Percentile:</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>The estimated yearly income percentile represents the individual's income position compared to the general population over a fixed interval.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold" text-decoration="underline">
																					<xsl:text>Debt-to-Yearly Income Ratio:</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>The debt-to-income ratio is calculated by dividing the individual's total outstanding debt by their estimated yearly income.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>																
																	</xsl:if>
																	<xsl:if
																		test="Response/ReportAccess/FINRATIOGLOSSARY =&apos;Y&apos;">
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Financial Ratio</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>The financial ratio analysis represents a tool for insight into the performance, efficiency, and profitability of a company.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Current Ratio</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Part of the Liquidity Ratio, it is to measure whether a business can pay its debt within 1 year.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>= CA/CL</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Gearing Ratio</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Part of the Stability Ratio, to measure proportion of asset, financed by borrowings.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>= TL/Shareholders Fund</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>ROCE (Return on Capital Employed)</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Part of the Profitability Ratio, to measure the return made on resource available.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>= PBT/TA</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Assets Turnover Ratio</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Part of the Efficiency Ratio, a measure of Total Asset utilization. Sales generated from cash (RM) invested in the business.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>= Turnover/TA</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-size="x-small" font-style="normal"
																					font-variant="normal" font-weight="bold">
																					<xsl:text>Earnings Per Share</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>Part of the Investor Ratio, EPS measures the overall profit generated for each share in existence over a particular period.</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>= PBT/Share Capital</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0 0 0 20px">
																			<fo:table font-size="11px" margin="0px"
																				padding="0px" table-layout="fixed" width="100%"
																				border="solid 1pt gray">
																				<fo:table-column column-width="100" />
																				<fo:table-column column-width="150" />
																				<fo:table-column column-width="200" />
																				<fo:table-body start-indent="0">
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>TA</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Total Asset</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Current Asset + Non-Current Asset</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>FA</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Fixed Assets</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Non-Current Asset</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>TL</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Total Liabilities</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Current Liablitiy + Non-Current Liability</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>CA</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell
																							number-columns-spanned="2" border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Current Assets</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>CL</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell
																							number-columns-spanned="2" border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Current Liabilities</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Turnover</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell
																							number-columns-spanned="2" border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Revenue</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>PBT</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell
																							number-columns-spanned="2" border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Profit Before Tax</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Share Capital</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell
																							number-columns-spanned="2" border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Share Capital</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																					<fo:table-row font-size="x-small">
																						<fo:table-cell border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Shareholders Fund</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																						<fo:table-cell
																							number-columns-spanned="2" border="solid 1pt gray"
																							font-size="x-small" font-style="normal"
																							font-variant="normal" font-weight="normal"
																							padding="2pt" display-align="center">
																							<fo:block text-align="center">
																								<fo:inline>
																									<xsl:text>Share Capital + Reserves</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:table-cell>
																					</fo:table-row>
																				</fo:table-body>
																			</fo:table>
																		</fo:block>
																		<fo:block>
																			<fo:leader leader-pattern="space" />
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																	</xsl:if>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
						</xsl:if>
						<fo:block>
							<fo:leader leader-pattern="space" />
						</fo:block>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:block margin="0pt">
							<fo:block />
						</fo:block>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x2029;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:table border="0px" color="black" font-size="11px"
							margin="0px" padding="0px" table-layout="fixed" width="100%"
							border-spacing="2pt">
							<fo:table-column column-width="proportional-column-width(1)" />
							<fo:table-body start-indent="0pt">
								<fo:table-row>
									<fo:table-cell border-bottom="1px" border-left="0px"
										border-right="0px" border-top="0px" border="solid 1pt gray"
										padding="2pt" text-align="center" display-align="center">
										<fo:block>
											<fo:inline font-weight="bold">
												<xsl:text>END OF REPORT</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
							</fo:table-body>
						</fo:table>
						<fo:block />
						<fo:block />
					</fo:block>
					<fo:block id="SV_RefID_PageTotal" />
					<xsl:if test="Response/ReportAccess/CBMNOTIFLETTER =&apos;Y&apos;">
						<fo:block break-before="page">
							<fo:table color="black" font-size="10px" font-family="Roboto" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="0pt" display-align="top">
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="left" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold">
													<xsl:text>Notice from Credit Bureau Malaysia Sdn. Bhd. (CBM)</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:block text-align="center">
													<fo:leader leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell font-size="8px" border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="justify" display-align="center">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
										
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>CBM helps Malaysians be credit positive by helping them build and improve their Credit 
													Report (as defined under the Credit Reporting Agencies Act 2010 (CRA)) so that they can have 
													better access to financial services and at more competitive rates. By providing a centralized 
													platform to aggregate Credit Information (as defined under the CRA) and to enable swift digital 
													distribution, CBM enables banks, financial institutions, companies and businesses with legitimate 
													purpose to conduct credit checks and verifications to procure and process Credit Information 
													quickly and efficiently. CBM also supplies a credit score to help financial institutions assess 
													and review credit quality across portfolio and across the population.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>Whenever you apply for any Credit (as defined under the CRA) from any Credit Provider (as 
													defined under the CRA), Credit Information are needed to help assess your eligibility to be 
													provided with credit, your history in relation to credit or your capacity to repay credit and is
													or has been used or is capable of being used as one of the factors in establishing your eligibility
													for credit.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>CBM is licensed by the Registrar of Credit Reporting Agencies of Malaysia to carry out 
													Credit Reporting Business (as defined in the CRA). We source data from various databases legally. 
													The security and integrity of your Credit Information is very important to us. When we process 
													any Credit Information, we take practical steps to protect the same from any loss, misuse, 
													modification, unauthorized or accidental access or disclosure, alteration or destruction in 
													accordance with the provisions of the CRA. We may disclose your Credit Information to our 
													subscribers, members and/or any other persons/parties for the purposes above and for other 
													purposes to the extent permitted by applicable laws, regulations and/or regulatory requirements.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
	
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>You can refer to your Summary of Rights on www.creditbureau.com.my. You may access your 
													Credit Information by purchasing a MySCoRE Report for individuals and MyBizSCoRE for SMEs (as 
													the case may be) from CBM. If your Credit Information is not updated or contains any errors 
													or inaccuracies, you must notify the source of the data and/or CBM immediately via 
													email: helpdesk@creditbureau.com.my to request for such correction. Access to your Credit 
													Information can be restricted by purchasing CBM’s Credit Lock but this may affect your Credit 
													application. You may write in to us via email: helpdesk@creditbureau.com.my if you have any 
													inquiries or complaints in respect of the Credit Information. If you do not provide your Credit 
													Information, your Credit application may be affected.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>	
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>										
	
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="left" display-align="center">
											<fo:block>
												<fo:inline font-weight="bold">
													<xsl:text>Pemberitahuan daripada Credit Bureau Malaysia Sdn. Bhd. (CBM)</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell padding="0" display-align="center">
											<fo:block>
												<fo:block text-align="center">
													<fo:leader leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell font-size="8px" border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="justify" display-align="center">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
										
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>CBM membantu rakyat Malaysia untuk mempunyai kedudukan kredit yang baik dengan cara 
													memperbaiki dan membina Laporan Kredit (seperti yang ditafsirkan di bawah Akta Agensi Pelaporan 
													Kredit 2010 (APK)) supaya rakyat dapat menikmati kemudahan kewangan pada kadar yang lebih 
													kompetitif. Dengan menyediakan platfom berpusat untuk penilaian Maklumat Kredit (seperti 
													ditafsirkan di bawah APK) dan penyaluran maklumat yang lebih pantas secara digital, CBM 
													membolehkan institusi kewangan, syarikat dan perniagaan yang mempunyai tujuan sah untuk 
													menjalankan pemeriksaan kredit dan pengesahan untuk memperoleh dan memproses Maklumat 
													Kredit dengan pantas dan cekap. CBM juga menyediakan skor kredit yang bertujuan membantu 
													institusi kewangan, mengakses dan menilai kualiti kredit secara menyeluruh, merentasi 
													jaringan portfolio dan populasi.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
	
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>Setiap kali anda memohon apa sahaja Kredit (seperti ditafsirkan di bawah APK) dari 
													apa sahaja Pemberi Kredit (seperti yang ditafsirkan di bawah APK), Maklumat Kredit adalah 
													diperlukan untuk menilai kelayakan anda untuk diberikan kredit, sejarah anda berhubung dengan 
													kredit atau keupayaan anda untuk membayar balik kredit dan digunakan, telah digunakan atau 
													berupaya untuk digunakan sebagai salah satu faktor dalam menentukan kelayakan anda untuk 
													mendapatkan kredit. Apabila kami memproses apa sahaja Maklumat Kredit, kami mengambil langkah 
													praktik untuk melindungi yang sama daripada apa-apa kehilangan, salah guna, ubah suaian, 
													akses atau penzahiran tanpa kebenaran atau tidak sengaja, pengubahan atau pemusnahan selaras 
													dengan peruntukan APK.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
	
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>CBM adalah dilesenkan oleh Pendaftar Agensi Pelaporan Kredit Malaysia untuk menjalankan 
													Perniagaan Pelaporan Kredit (seperti yang ditafsirkan di bawah APK). Kami memperoleh dan 
													mengumpul data daripada pelbagai pangkalan data secara sah. Kami mungkin menzahirkan Maklumat 
													Kredit anda kepada orang yang melanggan, ahli dan/atau mana-mana orang/pihak
													untuk tujuan-tujuan yang dinyatakan di atas dan untuk tujuan-tujuan lain setakat yang
													dibenarkan oleh undang-undang, peraturan dan/atau keperluan kawal selia yang berkenaan
													.</xsl:text>
												</fo:inline>
											</fo:block>			
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
	
											<fo:block>
												<fo:inline font-weight="normal">
													<xsl:text>Anda boleh merujuk kepada Ringkasan Hak anda di www.creditbureau.com.my. Anda juga 
													boleh mengakses Maklumat Kredit anda dengan membeli MySCoRE Report untuk individual and 
													MyBizSCoRE untuk perusahaan kecil sederhana (mengikut mana berkenaan) daripada CBM. Jika 
													anda mendapati bahawa terdapat kesilapan atau ketidaktepatan pada Maklumat Kredit anda atau 
													Maklumat Kredit anda masih tidak dikemaskini, sila maklumkan secara serta merta kepada 
													sumber maklumat tersebut atau CBM melalui emel: helpdesk@creditbureau.com.my untuk meminta 
													pembetulan sedemikian. Anda juga boleh mengehadkan akses kepada Maklumat Kredit anda dengan 
													mendapatkan perkhidmatan ‘Credit Lock’ CBM. Walau bagaimanapun, ini mungkin akan memberi 
													kesan kepada permohonan Kredit anda. Anda boleh menulis kepada kami melalui 
													emel: helpdesk@creditbureau.com.my sekiranya anda mempunyai sebarang pertanyaan atau 
													aduan berkenaan Maklumat Kredit. Sekiranya anda tidak menyediakan Maklumat Kredit 
													anda, permohonan Kredit anda mungkin akan terjejas.</xsl:text>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell font-size="8px" border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="left" display-align="top">
											<fo:table color="black" font-size="7px" font-family="Roboto" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="0pt">
											<fo:table-column column-width="35%" />
											<fo:table-column column-width="40%" />
											<fo:table-column column-width="25%" />										
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="left" display-align="top">
															<fo:block>
																<fo:inline font-weight="normal">
																	<xsl:text>Sebarang maklumat lanjut, sila hubungi:-</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>
																<fo:inline font-weight="normal">
																	<xsl:text>Please contact us for further details at:-</xsl:text>
																</fo:inline>
																
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="left" display-align="top">
															<fo:block>
																<fo:inline font-weight="normal">
																	<xsl:text>CREDIT BUREAU MALAYSIA SDN BHD (Company Registration No: 200801018741 (820050-T))</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>															
																<fo:inline font-weight="normal">
																	<xsl:text>Level 10, Menara Sunway,</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>
																<fo:inline font-weight="normal">
																	<xsl:text>Jalan Lagoon Timur (9/1),</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>															
																<fo:inline font-weight="normal">
																	<xsl:text>Bandar Sunway, 47500</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>															
																<fo:inline font-weight="normal">
																	<xsl:text>Subang Jaya, Selangor</xsl:text>
																</fo:inline>
																
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border-bottom="0px" border-left="0px" border-right="0px" border-top="0px" border="solid 1pt gray" padding="0pt" text-align="left" display-align="top">
															<fo:block>
																<fo:inline font-weight="normal">
																	<xsl:text>General Line: 03-5639 8586</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>															
																<fo:inline font-weight="normal">
																	<xsl:text>Email address: helpdesk@creditbureau.com.my</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:block>															
																<fo:inline font-weight="normal">
																	<xsl:text>Web address: https://www.creditbureau.com.my/</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>																										
													</fo:table-row>
												</fo:table-body>
											</fo:table>										
										</fo:table-cell>
									</fo:table-row>									
								</fo:table-body>
							</fo:table>
						</fo:block>
					</xsl:if>
					
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="Template1" />
	<xsl:template name="Template2" />
	<xsl:template name="otherpageheader">
		<fo:static-content flow-name="other-page-header">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
				<fo:table color="black" font-size="11px" margin="0px"
					padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
					<fo:table-column column-width="proportional-column-width(1)" />
					<fo:table-column column-width="150" />
					<fo:table-body start-indent="0pt">
						<fo:table-row>
							<fo:table-cell padding="0" number-columns-spanned="2"
								height="30" text-align="right" display-align="center">
								<fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="1px" color="black" font-size="11px"
										margin="0px" padding="0px" table-layout="fixed" width="100%"
										border-spacing="2pt">
										<fo:table-column column-width="143" />
										<fo:table-column column-width="300" />
										<fo:table-column column-width="150" />
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" padding="2pt"
													height="45" text-align="left" display-align="after">
													<fo:block>
														<fo:external-graphic content-width="81px">
															<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template
																name="double-backslash"><xsl:with-param name="text"><xsl:value-of
																select="string(&apos;D:\SCBSReport\StyleSheet\logoSmall.jpg&apos;)" /></xsl:with-param><xsl:with-param
																name="text-length"><xsl:value-of
																select="string-length(string(&apos;D:\SCBSReport\StyleSheet\logoSmall.jpg&apos;))" /></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
														</fo:external-graphic>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="0px" font-size="11pt"
													font-style="normal" font-variant="normal" font-weight="bold"
													text-align="center" padding="2pt" height="45"
													display-align="after">
													<fo:block>
														<xsl:for-each select="$XML">
															<xsl:for-each select="Response">
																<xsl:for-each select="ReportTitle">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates />
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when
																			test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block color="#4e6e3f" font-size="11pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold" text-align="center">
																				<xsl:copy-of select="$value-of-template" />
																				(Sample)
																			</fo:block>
																		</xsl:when>
																		<xsl:when
																			test="contains(string($value-of-template),'?')">
																			<fo:block color="#4e6e3f" font-size="11pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold" text-align="center">
																				<!-- remove "?" at front -->
																				<xsl:copy-of select="substring($value-of-template, 2)" />
																				(Sample)
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline color="#4e6e3f" font-size="11pt"
																				font-style="normal" font-variant="normal"
																				font-weight="bold" text-align="center">
																				<xsl:copy-of select="$value-of-template" />

																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="0px" font-size="6pt"
													font-style="normal" font-variant="normal" font-weight="normal"
													padding="2pt" height="45" display-align="after">
													<fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:table border="0px" color="black" font-size="11px"
															margin="0px" padding="0px" table-layout="fixed" width="100%"
															border-spacing="2pt">
															<fo:table-column column-width="50" />
															<fo:table-column column-width="100" />
															<fo:table-body start-indent="0pt">
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		number-columns-spanned="2" padding="2pt" text-align="left"
																		display-align="center">
																		<fo:block>
																			<fo:inline font-weight="bold">
																				<xsl:text>STRICTLY CONFIDENTIAL</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Enquiry No:</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="ReqNo">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>User ID:</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="UserID">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Enquiry Type:</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="PurposeDesc">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>	
												
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:choose>
																					<xsl:when test="Response/ReportType = &apos;ICR-SELF&apos;"> 
																						<xsl:text>Date:</xsl:text>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:text>Report Date:</xsl:text>
																					</xsl:otherwise>
																				</xsl:choose>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="ReqTime">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Report Type:</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:table-cell>
																	<fo:table-cell border="0px" font-size="xx-small"
																		padding="2pt" height="3" text-align="left"
																		display-align="center">
																		<fo:block>
																			<xsl:for-each select="$XML">
																				<xsl:for-each select="Response">
																					<xsl:for-each select="ReportType">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates />
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when
																								test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template" />
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border="0px" font-size="xx-small"
																		number-columns-spanned="2" padding="2pt" height="3"
																		text-align="left" display-align="center">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>Page </xsl:text>
																			</fo:inline>
																			<fo:page-number />
																			<fo:inline>
																				<xsl:text>&#160;of&#160;</xsl:text>
																			</fo:inline>
																			<fo:page-number-citation
																				ref-id="SV_RefID_PageTotal" />
																		</fo:block>
																	</fo:table-cell>
																</fo:table-row>
															</fo:table-body>
														</fo:table>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell font-size="10pt" padding="0"
								text-align="left" display-align="center">
								<fo:block />
							</fo:table-cell>
							<fo:table-cell font-size="10pt" padding="0"
								text-align="right" display-align="center">
								<fo:block />
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell padding="0" number-columns-spanned="2"
								display-align="center">
								<fo:block>
									<fo:block text-align="center">
										<fo:leader leader-pattern="rule" rule-thickness="1"
											leader-length="100%" color="black" />
									</fo:block>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
					</fo:table-body>
				</fo:table>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="otherpagefooter">
		<fo:static-content flow-name="other-page-footer">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
				<fo:table color="black" font-size="11px" margin="0px"
					padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
					<fo:table-column column-width="proportional-column-width(1)" />
					<fo:table-column column-width="150" />
					<fo:table-body start-indent="0pt">
						<fo:table-row>
							<fo:table-cell font-size="xx-small" font-style="normal"
								font-variant="normal" font-weight="normal" padding="0"
								number-columns-spanned="2" height="13" text-align="justify"
								display-align="center">
								<fo:block>
									<fo:inline>
										<xsl:text>DISCLAIMER: This report is provided by Credit Bureau Malaysia Sdn Bhd (CBM) in strict confidence and may not be reproduced, disclosed, or distributed, in whole or in part, in any form or manner whatsoever. The information contained is compiled from public and third-party sources beyond CBM’s control. While reasonable efforts are made to ensure the accuracy and completeness, CBM does not warrant or guarantee that the information is accurate, complete, up to date, or free from error. Litigation information, if included, merely reflects that a case has been recorded and does not confirm the Subject’s liability or culpability. This report does not constitute a recommendation, credit opinion, rejection, or any form of advice or assessment of the Subject’s creditworthiness or risk profile. CBM disclaims all liability for any loss, damage, or consequences arising directly or indirectly from any use or reliance on this report. You are advised to independently verify the information contained before making any decisions. For enquiries, please contact us at helpdesk@creditbureau.com.my.</xsl:text>
										<!-- <xsl:for-each select="$XML">
							            	<xsl:for-each select="Response">
							           			<xsl:for-each select="Report">
							            			<xsl:for-each select="Profile">
							            				<xsl:for-each select="Scoring">
							            					<xsl:text> Consent from the individual is required before retrieval of the report.</xsl:text>
							            				</xsl:for-each>
							            			</xsl:for-each>
							            		</xsl:for-each>
							            	</xsl:for-each>
							            </xsl:for-each> -->
									</fo:inline>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell padding="0" number-columns-spanned="2"
								display-align="center">
								<fo:block>
									<fo:block text-align="center">
										<fo:leader top="-37pt" leader-pattern="rule"
											rule-thickness="1" leader-length="100%" color="black" />
									</fo:block>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell font-size="10pt" padding="0"
								text-align="left" display-align="center">
								<fo:block />
							</fo:table-cell>
							<fo:table-cell font-size="10pt" padding="0"
								text-align="right" display-align="center">
								<fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>Page: </xsl:text>
									</fo:inline>
									<fo:page-number font-weight="bold" />
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
					</fo:table-body>
				</fo:table>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="lastpageheader">
		<fo:static-content flow-name="last-page-header">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
				<fo:table color="black" font-size="11px" margin="0x" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt" >
					<fo:table-body start-indent="0pt">
						<fo:table-row>
							<fo:table-cell padding="0" height="30px" text-align="center" display-align="center">
								<fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="1px" color="black" font-size="11px" margin="0px" padding="0px" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="0px" padding="2pt" height="30px" text-align="right" display-align="after">
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
												
													<fo:block>
														<fo:external-graphic content-width="61px">
															<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template name="double-backslash"><xsl:with-param name="text"><xsl:value-of select="string(&apos;D:\SCBSReport\StyleSheet\logoSmall.jpg&apos;)"/></xsl:with-param><xsl:with-param name="text-length"><xsl:value-of select="string-length(string(&apos;D:\SCBSReport\StyleSheet\logoSmall.jpg&apos;))"/></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
														</fo:external-graphic>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
					</fo:table-body>
				</fo:table>
			</fo:block>
		</fo:static-content>
	</xsl:template>	
	<xsl:template name="lastpagefooter">
		<fo:static-content flow-name="last-page-footer">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	
	<xsl:template name="double-backslash">
		<xsl:param name="text" />
		<xsl:param name="text-length" />
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')" />
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)" />
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of
					select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')" />
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs" />
					<xsl:with-param name="text-length" select="$text-after-bs-length" />
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="string-replace-all">
    <xsl:param name="text" />
    <xsl:param name="replace" />
    <xsl:param name="by" />
    <xsl:choose>
        <xsl:when test="$text = '' or $replace = ''or not($replace)" >
            <!-- Prevent this routine from hanging -->
            <xsl:value-of select="$text" />
        </xsl:when>
        <xsl:when test="contains($text, $replace)">
            <xsl:value-of select="substring-before($text,$replace)" />
            <xsl:value-of select="$by" />
            <xsl:call-template name="string-replace-all">
                <xsl:with-param name="text" select="substring-after($text,$replace)" />
                <xsl:with-param name="replace" select="$replace" />
                <xsl:with-param name="by" select="$by" />
            </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
            <xsl:value-of select="$text" />
        </xsl:otherwise>
    </xsl:choose>
</xsl:template>
</xsl:stylesheet>